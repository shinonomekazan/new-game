window.gLocalAssetContainer["bundle"] = function(g) { (function(exports, require, module, __filename, __dirname) {
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@akashic-extension/akashic-label/lib/DefaultRubyParser.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-label/lib/DefaultRubyParser.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\n/**\n * 文字列からルビをパースする。\n * このパーサは、akashic-labelのデフォルトルビ記法のためのパーサである。\n *\n * このパーサを使う場合、ラベルに与える文字列にJSONのオブジェクトを表す文字列を含むことができる。\n * 文字列中のオブジェクトはルビを表す要素として扱われる。\n * オブジェクトのメンバーには、ルビを表す `rt` と、本文を表す `rb` を含む必要がある。\n * これらのメンバー以外に、RubyOptions型が持つメンバーを含むことができる。\n *\n * 入力の例として、\n * 'これは{\"rb\":\"本文\",\"rt\":\"ルビ\", \"rubyFontSize\": 2}です。'\n * という文字列が与えられた場合、このパーサは\n * [\"これは\", {rb:\"本文\", rt: \"ルビ\", rubyFontSize: 2}, \"です。\"]\n * という配列を返す。\n * また、 `{` や `}` は `\\\\` でエスケープする必要がある。\n * 例として、括弧は `\\\\{` 、 バックスラッシュは `\\\\` を用いて表現する。\n * 注意すべき点として、オブジェクトのプロパティ名はダブルクォートでくくられている必要がある。\n */\nfunction parse(text) {\n    const pattern = /^((?:[^\\\\{]|\\\\+.)*?)({(?:[^\\\\}]|\\\\+.)*?})([\\s\\S]*)/;\n    // ((?:[^\\\\{]|\\\\+.)*?) -> オブジェクトリテラルの直前まで\n    // ({(?:[^\\\\}]|\\\\+.)*?}) -> 最前のオブジェクトリテラル\n    // ([\\s\\S]*) -> オブジェクトリテラル以降の、改行を含む文字列\n    const result = [];\n    while (text.length > 0) {\n        const parsedText = text.match(pattern);\n        if (parsedText !== null) {\n            const headStr = parsedText[1];\n            const rubyStr = parsedText[2];\n            text = parsedText[3];\n            if (headStr.length > 0) {\n                result.push(headStr.replace(/\\\\{/g, \"{\").replace(/\\\\}/g, \"}\"));\n            }\n            const parseResult = JSON.parse(rubyStr.replace(/\\\\/g, \"\\\\\\\\\"));\n            if (parseResult.hasOwnProperty(\"rt\") && parseResult.hasOwnProperty(\"rb\")) {\n                parseResult.rt = parseResult.rt.replace(/\\\\{/g, \"{\").replace(/\\\\}/g, \"}\");\n                parseResult.rb = parseResult.rb.replace(/\\\\{/g, \"{\").replace(/\\\\}/g, \"}\");\n                parseResult.text = rubyStr;\n                result.push(parseResult);\n            }\n            else {\n                throw g.ExceptionFactory.createTypeMismatchError(\"parse\", \"RubyFragment\");\n            }\n        }\n        else {\n            result.push(text.replace(/\\\\{/g, \"{\").replace(/\\\\}/g, \"}\"));\n            break;\n        }\n    }\n    return result;\n}\nexports.parse = parse;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-label/lib/DefaultRubyParser.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-label/lib/FragmentDrawInfo.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-label/lib/FragmentDrawInfo.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RubyFragmentDrawInfo = exports.StringDrawInfo = void 0;\n/**\n * 行に含まれる文字列要素。\n */\nclass StringDrawInfo {\n    constructor(text, width, glyphs) {\n        this.text = text;\n        this.width = width;\n        this.glyphs = glyphs;\n    }\n}\nexports.StringDrawInfo = StringDrawInfo;\n/**\n * 行に含まれるルビ要素。\n */\nclass RubyFragmentDrawInfo {\n    constructor(fragment, width, rbWidth, rtWidth, glyphs, rubyGlyphs) {\n        this.text = fragment.text;\n        this.fragment = fragment;\n        this.width = width;\n        this.rbWidth = rbWidth;\n        this.rtWidth = rtWidth;\n        this.glyphs = glyphs;\n        this.rubyGlyphs = rubyGlyphs;\n    }\n}\nexports.RubyFragmentDrawInfo = RubyFragmentDrawInfo;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-label/lib/FragmentDrawInfo.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-label/lib/Label.js":
/*!********************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-label/lib/Label.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Label = void 0;\nconst dr = __webpack_require__(/*! ./DefaultRubyParser */ \"./node_modules/@akashic-extension/akashic-label/lib/DefaultRubyParser.js\");\nconst fr = __webpack_require__(/*! ./FragmentDrawInfo */ \"./node_modules/@akashic-extension/akashic-label/lib/FragmentDrawInfo.js\");\nconst rp = __webpack_require__(/*! ./RubyParser */ \"./node_modules/@akashic-extension/akashic-label/lib/RubyParser.js\");\n/**\n * 複数行のテキストを描画するエンティティ。\n * 文字列内の\"\\r\\n\"、\"\\n\"、\"\\r\"を区切りとして改行を行う。\n * また、自動改行が有効な場合はエンティティの幅に合わせて改行を行う。\n * 本クラスの利用にはg.Fontが必要となる。\n */\nclass Label extends g.CacheableE {\n    /**\n     * 各種パラメータを指定して `Label` のインスタンスを生成する。\n     * @param param このエンティティに対するパラメータ\n     */\n    constructor(param) {\n        super(param);\n        this.text = param.text;\n        this.font = param.font;\n        this.fontSize = param.fontSize || param.font.size;\n        this._lineBreakWidth = param.width;\n        this.lineBreak = \"lineBreak\" in param ? param.lineBreak : true;\n        this.lineGap = param.lineGap || 0;\n        this.textAlign = \"textAlign\" in param ? param.textAlign : \"left\";\n        this.textColor = param.textColor;\n        this.trimMarginTop = \"trimMarginTop\" in param ? param.trimMarginTop : false;\n        this.widthAutoAdjust = \"widthAutoAdjust\" in param ? param.widthAutoAdjust : false;\n        this.rubyEnabled = \"rubyEnabled\" in param ? param.rubyEnabled : false;\n        this.fixLineGap = \"fixLineGap\" in param ? param.fixLineGap : false;\n        this.rubyParser = \"rubyParser\" in param ? param.rubyParser : dr.parse;\n        this.lineBreakRule = \"lineBreakRule\" in param ? param.lineBreakRule : undefined;\n        if (!param.rubyOptions) {\n            param.rubyOptions = {};\n        }\n        this.rubyOptions = param.rubyOptions;\n        this.rubyOptions.rubyFontSize = \"rubyFontSize\" in param.rubyOptions ? param.rubyOptions.rubyFontSize : param.fontSize / 2;\n        this.rubyOptions.rubyFont = \"rubyFont\" in param.rubyOptions ? param.rubyOptions.rubyFont : this.font;\n        this.rubyOptions.rubyGap = \"rubyGap\" in param.rubyOptions ? param.rubyOptions.rubyGap : 0;\n        this.rubyOptions.rubyAlign = \"rubyAlign\" in param.rubyOptions ? param.rubyOptions.rubyAlign : rp.RubyAlign.SpaceAround;\n        this._lines = [];\n        this._beforeText = undefined;\n        this._beforeTextAlign = undefined;\n        this._beforeFontSize = undefined;\n        this._beforeLineBreak = undefined;\n        this._beforeFont = undefined;\n        this._beforeWidth = undefined;\n        this._beforeRubyEnabled = undefined;\n        this._beforeFixLineGap = undefined;\n        this._beforeTrimMarginTop = undefined;\n        this._beforeWidthAutoAdjust = undefined;\n        this._beforeRubyOptions = {};\n        this._invalidateSelf();\n    }\n    /**\n     * このエンティティの描画キャッシュ無効化をエンジンに通知する。\n     * このメソッドを呼び出し後、描画キャッシュの再構築が行われ、各 `g.Renderer` に描画内容の変更が反映される。\n     */\n    invalidate() {\n        this._invalidateSelf();\n        super.invalidate();\n    }\n    renderCache(renderer) {\n        if (!this.rubyEnabled && this.fontSize === 0)\n            return;\n        renderer.save();\n        let currentLineHeight = 0;\n        for (let i = 0; i < this._lines.length; ++i) {\n            if (this._lines[i].width > 0 && this._lines[i].height > 0) {\n                renderer.drawImage(this._lines[i].surface, 0, 0, this._lines[i].width, this._lines[i].height, this._offsetX(this._lines[i].width), currentLineHeight);\n            }\n            currentLineHeight += this._lines[i].height + this.lineGap;\n        }\n        if (this.textColor) {\n            renderer.setCompositeOperation(\"source-atop\");\n            renderer.fillRect(0, 0, this._lineBreakWidth, this.height, this.textColor);\n        }\n        renderer.restore();\n    }\n    /**\n     * 利用している `g.Surface` を破棄した上で、このエンティティを破棄する。\n     * 利用している `g.Font` の破棄は行わないため、 `g.Font` の破棄はコンテンツ製作者が明示的に行う必要がある。\n     */\n    destroy() {\n        this._destroyLines();\n        super.destroy();\n    }\n    /**\n     * 禁則処理によって行幅が this.width を超える場合があるため、 `g.CacheableE` のメソッドをオーバーライドする\n     */\n    calculateCacheSize() {\n        // TODO: 最大値の候補に this.width を使用するのは textAlign が \"center\" か \"right\" の場合に描画に必要なキャッシュサイズを確保するためであり、\n        // 最大行幅に対して this.width が大きい場合、余分なキャッシュ領域を確保することになる。\n        // これは g.CacheableE にキャッシュ描画位置を調整する cacheOffsetX を導入することで解決される。\n        const maxWidth = Math.ceil(this._lines.reduce((width, line) => Math.max(width, line.width), this.width));\n        return {\n            width: maxWidth,\n            height: this.height\n        };\n    }\n    /**\n     * 描画内容の行数を返す\n     */\n    get lineCount() {\n        return this._lines.length;\n    }\n    _offsetX(width) {\n        switch (this.textAlign) {\n            case \"left\":\n            case g.TextAlign.Left:\n                return 0;\n            case \"right\":\n            case g.TextAlign.Right:\n                return (this._lineBreakWidth - width);\n            case \"center\":\n            case g.TextAlign.Center:\n                return ((this._lineBreakWidth - width) / 2);\n            default:\n                return 0;\n        }\n    }\n    _destroyLines() {\n        for (let i = 0; i < this._lines.length; i++) {\n            if (this._lines[i].surface && !this._lines[i].surface.destroyed()) {\n                this._lines[i].surface.destroy();\n            }\n        }\n        this._lines = undefined;\n    }\n    _invalidateSelf() {\n        if (this.fontSize < 0)\n            throw g.ExceptionFactory.createAssertionError(\"Label#_invalidateSelf: fontSize must not be negative.\");\n        if (this.lineGap < -1 * this.fontSize)\n            throw g.ExceptionFactory.createAssertionError(\"Label#_invalidateSelf: lineGap must be greater than -1 * fontSize.\");\n        // this.width がユーザから変更された場合、this._lineBreakWidth は this.width に追従する。\n        if (this._beforeWidth !== this.width)\n            this._lineBreakWidth = this.width;\n        if (this._beforeText !== this.text\n            || this._beforeFontSize !== this.fontSize\n            || this._beforeFont !== this.font\n            || this._beforeLineBreak !== this.lineBreak\n            || (this._beforeWidth !== this.width && this._beforeLineBreak === true)\n            || this._beforeTextAlign !== this.textAlign\n            || this._beforeRubyEnabled !== this.rubyEnabled\n            || this._beforeFixLineGap !== this.fixLineGap\n            || this._beforeTrimMarginTop !== this.trimMarginTop\n            || this._beforeWidthAutoAdjust !== this.widthAutoAdjust\n            || this._isDifferentRubyOptions(this._beforeRubyOptions, this.rubyOptions)) {\n            this._updateLines();\n        }\n        if (this.widthAutoAdjust) {\n            // this.widthAutoAdjust が真の場合、 this.width は描画幅に応じてトリミングされる。\n            this.width = Math.ceil(this._lines.reduce((width, line) => Math.max(width, line.width), 0));\n        }\n        let height = this.lineGap * (this._lines.length - 1);\n        for (let i = 0; i < this._lines.length; i++) {\n            height += this._lines[i].height;\n        }\n        this.height = height;\n        this._beforeText = this.text;\n        this._beforeTextAlign = this.textAlign;\n        this._beforeFontSize = this.fontSize;\n        this._beforeLineBreak = this.lineBreak;\n        this._beforeFont = this.font;\n        this._beforeWidth = this.width;\n        this._beforeRubyEnabled = this.rubyEnabled;\n        this._beforeFixLineGap = this.fixLineGap;\n        this._beforeTrimMarginTop = this.trimMarginTop;\n        this._beforeWidthAutoAdjust = this.widthAutoAdjust;\n        this._beforeRubyOptions.rubyFontSize = this.rubyOptions.rubyFontSize;\n        this._beforeRubyOptions.rubyFont = this.rubyOptions.rubyFont;\n        this._beforeRubyOptions.rubyGap = this.rubyOptions.rubyGap;\n        this._beforeRubyOptions.rubyAlign = this.rubyOptions.rubyAlign;\n    }\n    _updateLines() {\n        // ユーザのパーサを適用した後にも揃えるが、渡す前に改行記号を replace して統一する\n        let fragments;\n        if (this.rubyEnabled) {\n            try {\n                fragments = this.rubyParser(this.text.replace(/\\r\\n|\\n/g, \"\\r\"));\n            }\n            catch (error) {\n                console.warn(`Label#_updateLines(): failed to parse a text '${this.text}'`, error);\n                fragments = [this.text];\n            }\n        }\n        else {\n            fragments = [this.text];\n        }\n        // Fragment のうち文字列のものを一文字ずつに分解する\n        fragments =\n            rp.flatmap(fragments, (f) => {\n                if (typeof f !== \"string\")\n                    return f;\n                // サロゲートペア文字を正しく分割する\n                return f.replace(/\\r\\n|\\n/g, \"\\r\").match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[^\\uD800-\\uDFFF]/g) || [];\n            });\n        const undrawnLineInfos = this._divideToLines(fragments);\n        const lines = [];\n        const hasNotChanged = this._beforeFontSize === this.fontSize\n            && this._beforeFont === this.font\n            && !this._isDifferentRubyOptions(this._beforeRubyOptions, this.rubyOptions);\n        for (let i = 0; i < undrawnLineInfos.length; i++) {\n            const undrawnLineInfo = undrawnLineInfos[i];\n            const line = this._lines[i];\n            if (hasNotChanged && line !== undefined\n                && undrawnLineInfo.sourceText === line.sourceText\n                && undrawnLineInfo.width === line.width\n                && undrawnLineInfo.height === line.height) {\n                lines.push(line);\n            }\n            else {\n                if (line && line.surface && !line.surface.destroyed()) {\n                    line.surface.destroy();\n                }\n                this._drawLineInfoSurface(undrawnLineInfo);\n                lines.push(undrawnLineInfo);\n            }\n        }\n        // 行数が減った場合、使われない行のSurfaceをdestroyする。\n        for (let i = lines.length; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            if (line.surface && !line.surface.destroyed()) {\n                line.surface.destroy();\n            }\n        }\n        this._lines = lines;\n    }\n    _drawLineInfoSurface(lineInfo) {\n        const lineDrawInfo = lineInfo.fragmentDrawInfoArray;\n        const rhi = this._calcRubyHeightInfo(lineDrawInfo);\n        const lineSurface = this.scene.game.resourceFactory.createSurface(Math.ceil(lineInfo.width), Math.ceil(lineInfo.height));\n        const lineRenderer = lineSurface.renderer();\n        lineRenderer.begin();\n        lineRenderer.save();\n        const rbOffsetY = (rhi.hasRubyFragmentDrawInfo || this.fixLineGap)\n            ? this.rubyOptions.rubyGap + rhi.maxRubyGlyphHeightWithOffsetY : 0;\n        const minMinusOffsetY = lineInfo.minMinusOffsetY;\n        for (let i = 0; i < lineDrawInfo.length; i++) {\n            const drawInfo = lineDrawInfo[i];\n            if (drawInfo instanceof fr.RubyFragmentDrawInfo) {\n                this._drawRubyFragmentDrawInfo(lineRenderer, drawInfo, rbOffsetY - minMinusOffsetY, -rhi.minRubyMinusOffsetY);\n            }\n            else if (drawInfo instanceof fr.StringDrawInfo) {\n                this._drawStringGlyphs(lineRenderer, this.font, drawInfo.glyphs, this.fontSize, 0, rbOffsetY - minMinusOffsetY, 0);\n            }\n            lineRenderer.translate(drawInfo.width, 0);\n        }\n        lineRenderer.restore();\n        lineRenderer.end();\n        lineInfo.surface = lineSurface;\n    }\n    // 文字列の等幅描画\n    _drawStringGlyphs(renderer, font, glyphs, fontSize, offsetX, offsetY, margin = 0) {\n        renderer.save();\n        renderer.translate(offsetX, offsetY);\n        for (let i = 0; i < glyphs.length; i++) {\n            let glyph = glyphs[i];\n            const glyphScale = fontSize / font.size;\n            const glyphWidth = glyph.advanceWidth * glyphScale;\n            if (!glyph.isSurfaceValid) {\n                glyph = this._createGlyph(glyph.code, font);\n                if (!glyph)\n                    continue;\n            }\n            renderer.save();\n            renderer.transform([glyphScale, 0, 0, glyphScale, 0, 0]);\n            if (glyph.width > 0 && glyph.height > 0) {\n                renderer.drawImage(glyph.surface, glyph.x, glyph.y, glyph.width, glyph.height, glyph.offsetX, glyph.offsetY);\n            }\n            renderer.restore();\n            renderer.translate(glyphWidth + margin, 0);\n        }\n        renderer.restore();\n    }\n    // ルビベースとルビテキストの描画\n    _drawRubyFragmentDrawInfo(renderer, rubyDrawInfo, rbOffsetY, rtOffsetY) {\n        const f = rubyDrawInfo.fragment;\n        const rubyFontSize = \"rubyFontSize\" in f ? f.rubyFontSize : this.rubyOptions.rubyFontSize;\n        const rubyAlign = \"rubyAlign\" in f ? f.rubyAlign : this.rubyOptions.rubyAlign;\n        const rubyFont = \"rubyFont\" in f ? f.rubyFont : this.rubyOptions.rubyFont;\n        const isRtWideThanRb = rubyDrawInfo.rtWidth > rubyDrawInfo.rbWidth;\n        const width = rubyDrawInfo.width;\n        const rtWidth = rubyDrawInfo.rtWidth;\n        const rbWidth = rubyDrawInfo.rbWidth;\n        let rtStartPositionX;\n        let rbStartPositionX;\n        let rtUnitMargin;\n        let rbUnitMargin;\n        switch (rubyAlign) {\n            case rp.RubyAlign.Center:\n                rtUnitMargin = 0;\n                rbUnitMargin = 0;\n                rtStartPositionX = isRtWideThanRb ? 0 : (width - rtWidth) / 2;\n                rbStartPositionX = isRtWideThanRb ? (width - rbWidth) / 2 : 0;\n                break;\n            case rp.RubyAlign.SpaceAround:\n                rtUnitMargin = (rubyDrawInfo.rubyGlyphs.length > 0) ? (width - rtWidth) / rubyDrawInfo.rubyGlyphs.length : 0;\n                rbUnitMargin = 0;\n                rtStartPositionX = isRtWideThanRb ? 0 : rtUnitMargin / 2;\n                rbStartPositionX = isRtWideThanRb ? (width - rbWidth) / 2 : 0;\n                break;\n            default:\n                throw g.ExceptionFactory.createAssertionError(\"Label#_drawRubyFragmentDrawInfo: unknown rubyAlign.\");\n        }\n        this._drawStringGlyphs(renderer, this.font, rubyDrawInfo.glyphs, this.fontSize, rbStartPositionX, rbOffsetY, rbUnitMargin);\n        this._drawStringGlyphs(renderer, rubyFont, rubyDrawInfo.rubyGlyphs, rubyFontSize, rtStartPositionX, rtOffsetY, rtUnitMargin);\n    }\n    _calcRubyHeightInfo(drawInfoArray) {\n        let maxRubyFontSize = this.rubyOptions.rubyFontSize;\n        let maxRubyGlyphHeightWithOffsetY = 0;\n        let maxRubyGap = this.rubyOptions.rubyGap;\n        let hasRubyFragmentDrawInfo = false;\n        let maxRealDrawHeight = 0;\n        let realOffsetY;\n        for (let i = 0; i < drawInfoArray.length; i++) {\n            const ri = drawInfoArray[i];\n            if (ri instanceof fr.RubyFragmentDrawInfo) {\n                const f = ri.fragment;\n                if (f.rubyFontSize > maxRubyFontSize) {\n                    maxRubyFontSize = f.rubyFontSize;\n                }\n                if (f.rubyGap > maxRubyGap) {\n                    maxRubyGap = f.rubyGap;\n                }\n                const fontSize = f.rubyFontSize ? f.rubyFontSize : this.rubyOptions.rubyFontSize;\n                const size = f.rubyFont ? f.rubyFont.size : this.rubyOptions.rubyFont.size;\n                const rubyGlyphScale = fontSize / size;\n                const currentMaxRubyGlyphHeightWithOffsetY = Math.max.apply(Math, ri.rubyGlyphs.map((glyph) => (glyph.offsetY > 0) ? glyph.height + glyph.offsetY : glyph.height));\n                const currentMinRubyOffsetY = Math.min.apply(Math, ri.rubyGlyphs.map((glyph) => (glyph.offsetY > 0) ? glyph.offsetY : 0));\n                if (maxRubyGlyphHeightWithOffsetY < currentMaxRubyGlyphHeightWithOffsetY * rubyGlyphScale) {\n                    maxRubyGlyphHeightWithOffsetY = currentMaxRubyGlyphHeightWithOffsetY * rubyGlyphScale;\n                }\n                const rubyFont = (f.rubyFont ? f.rubyFont : this.rubyOptions.rubyFont);\n                const currentRubyStandardOffsetY = this._calcStandardOffsetY(rubyFont);\n                const currentFragmentRealDrawHeight = (currentMaxRubyGlyphHeightWithOffsetY - Math.min(currentMinRubyOffsetY, currentRubyStandardOffsetY)) * rubyGlyphScale;\n                if (maxRealDrawHeight < currentFragmentRealDrawHeight) {\n                    maxRealDrawHeight = currentFragmentRealDrawHeight;\n                    // その行で描画されるルビのうち、もっとも実描画高さが高い文字が持つoffsetYを求める\n                    realOffsetY = Math.min(currentMinRubyOffsetY, currentRubyStandardOffsetY) * rubyGlyphScale;\n                }\n                hasRubyFragmentDrawInfo = true;\n            }\n        }\n        // ルビが無い行でもfixLineGapが真の場合ルビの高さを使う\n        if (maxRubyGlyphHeightWithOffsetY === 0) {\n            maxRubyGlyphHeightWithOffsetY = this.rubyOptions.rubyFontSize;\n        }\n        const minRubyMinusOffsetY = this.trimMarginTop ? realOffsetY : 0;\n        return {\n            maxRubyFontSize: maxRubyFontSize,\n            maxRubyGlyphHeightWithOffsetY: maxRubyGlyphHeightWithOffsetY,\n            minRubyMinusOffsetY: minRubyMinusOffsetY,\n            maxRubyGap: maxRubyGap,\n            hasRubyFragmentDrawInfo: hasRubyFragmentDrawInfo\n        };\n    }\n    _divideToLines(fragmentArray) {\n        const state = {\n            resultLines: [],\n            currentStringDrawInfo: new fr.StringDrawInfo(\"\", 0, []),\n            currentLineInfo: {\n                sourceText: \"\",\n                fragmentDrawInfoArray: [],\n                width: 0,\n                height: 0,\n                minMinusOffsetY: 0,\n                surface: undefined\n            },\n            reservedLineBreakPosition: null\n        };\n        for (let i = 0; i < fragmentArray.length; i++) {\n            this._addFragmentToState(state, fragmentArray, i);\n        }\n        this._flushCurrentStringDrawInfo(state);\n        this._feedLine(state); // 行末ではないが、状態をflushするため改行処理を呼ぶ\n        return state.resultLines;\n    }\n    _addFragmentToState(state, fragments, index) {\n        const fragment = fragments[index];\n        if (state.reservedLineBreakPosition !== null) {\n            state.reservedLineBreakPosition--;\n        }\n        if (state.reservedLineBreakPosition === 0) {\n            this._flushCurrentStringDrawInfo(state);\n            this._feedLine(state);\n            state.reservedLineBreakPosition = null;\n        }\n        if (typeof fragment === \"string\" && fragment === \"\\r\") {\n            /*\n            // 行末に改行記号が来た場合、禁則処理によって改行すべきかは判断を保留し、一旦禁則処理による改行はしないことにする\n            if (this._needFixLineBreakByRule(state)) {\n                this._applyLineBreakRule(index, state);\n            }\n            */\n            this._flushCurrentStringDrawInfo(state);\n            this._feedLine(state);\n        }\n        else if (typeof fragment === \"string\") {\n            const code = g.Util.charCodeAt(fragment, 0);\n            if (!code)\n                return;\n            const glyph = this._createGlyph(code, this.font);\n            if (!glyph)\n                return;\n            const glyphScale = this.fontSize / this.font.size;\n            const glyphWidth = glyph.advanceWidth * glyphScale;\n            if (this._needBreakLine(state, glyphWidth)) {\n                this._breakLine(state, fragments, index);\n            }\n            state.currentStringDrawInfo.width += glyphWidth;\n            state.currentStringDrawInfo.glyphs.push(glyph);\n            state.currentStringDrawInfo.text += fragment;\n        }\n        else {\n            const ri = this._createRubyFragmentDrawInfo(fragment);\n            if (ri.width <= 0)\n                return;\n            this._flushCurrentStringDrawInfo(state);\n            if (this._needBreakLine(state, ri.width)) {\n                this._breakLine(state, fragments, index);\n            }\n            state.currentLineInfo.width += ri.width;\n            state.currentLineInfo.fragmentDrawInfoArray.push(ri);\n            state.currentLineInfo.sourceText += fragment.text;\n        }\n    }\n    _createStringGlyph(text, font) {\n        const glyphs = [];\n        for (let i = 0; i < text.length; i++) {\n            const code = g.Util.charCodeAt(text, i);\n            if (!code)\n                continue;\n            const glyph = this._createGlyph(code, font);\n            if (!glyph)\n                continue;\n            glyphs.push(glyph);\n        }\n        return glyphs;\n    }\n    _createGlyph(code, font) {\n        const glyph = font.glyphForCharacter(code);\n        if (!glyph) {\n            const str = (code & 0xFFFF0000) ? String.fromCharCode((code & 0xFFFF0000) >>> 16, code & 0xFFFF) : String.fromCharCode(code);\n            console.warn(\"Label#_invalidateSelf(): failed to get a glyph for '\" + str + \"' \" +\n                \"(BitmapFont might not have the glyph or DynamicFont might create a glyph larger than its atlas).\");\n        }\n        return glyph;\n    }\n    _createRubyFragmentDrawInfo(fragment) {\n        const glyphs = this._createStringGlyph(fragment.rb, this.font);\n        const rubyGlyphs = this._createStringGlyph(fragment.rt, this.rubyOptions.rubyFont);\n        const rubyFont = \"rubyFont\" in fragment ? fragment.rubyFont : this.rubyOptions.rubyFont;\n        const rubyFontSize = \"rubyFontSize\" in fragment ? fragment.rubyFontSize : this.rubyOptions.rubyFontSize;\n        const glyphScale = this.fontSize / this.font.size;\n        const rubyGlyphScale = rubyFontSize / rubyFont.size;\n        const rbWidth = glyphs.length > 0 ?\n            glyphs.map((glyph) => glyph.advanceWidth).reduce((pre, cu) => pre + cu) * glyphScale :\n            0;\n        const rtWidth = rubyGlyphs.length > 0 ?\n            rubyGlyphs.map((glyph) => glyph.advanceWidth).reduce((pre, cu) => pre + cu) * rubyGlyphScale :\n            0;\n        const width = rbWidth > rtWidth ? rbWidth : rtWidth;\n        return new fr.RubyFragmentDrawInfo(fragment, width, rbWidth, rtWidth, glyphs, rubyGlyphs);\n    }\n    _flushCurrentStringDrawInfo(state) {\n        if (state.currentStringDrawInfo.width > 0) {\n            state.currentLineInfo.fragmentDrawInfoArray.push(state.currentStringDrawInfo);\n            state.currentLineInfo.width += state.currentStringDrawInfo.width;\n            state.currentLineInfo.sourceText += state.currentStringDrawInfo.text;\n        }\n        state.currentStringDrawInfo = new fr.StringDrawInfo(\"\", 0, []);\n    }\n    _feedLine(state) {\n        const glyphScale = this.fontSize / this.font.size;\n        let minOffsetY = Infinity;\n        let minMinusOffsetY = 0;\n        let maxGlyphHeightWithOffsetY = 0;\n        state.currentLineInfo.fragmentDrawInfoArray.forEach((fragmentDrawInfo) => {\n            fragmentDrawInfo.glyphs.forEach((glyph) => {\n                if (minMinusOffsetY > glyph.offsetY) {\n                    minMinusOffsetY = glyph.offsetY;\n                }\n                // offsetYの一番小さな値を探す\n                if (minOffsetY > glyph.offsetY)\n                    minOffsetY = glyph.offsetY;\n                const heightWithOffsetY = (glyph.offsetY > 0) ? glyph.height + glyph.offsetY : glyph.height;\n                if (maxGlyphHeightWithOffsetY < heightWithOffsetY) {\n                    maxGlyphHeightWithOffsetY = heightWithOffsetY;\n                }\n            });\n        });\n        minMinusOffsetY = minMinusOffsetY * glyphScale;\n        maxGlyphHeightWithOffsetY =\n            (state.currentLineInfo.fragmentDrawInfoArray.length > 0) ?\n                maxGlyphHeightWithOffsetY * glyphScale - minMinusOffsetY :\n                this.fontSize;\n        maxGlyphHeightWithOffsetY = Math.ceil(maxGlyphHeightWithOffsetY);\n        const rhi = this._calcRubyHeightInfo(state.currentLineInfo.fragmentDrawInfoArray);\n        state.currentLineInfo.height =\n            rhi.hasRubyFragmentDrawInfo || this.fixLineGap ?\n                maxGlyphHeightWithOffsetY + rhi.maxRubyGlyphHeightWithOffsetY + rhi.maxRubyGap :\n                maxGlyphHeightWithOffsetY;\n        state.currentLineInfo.minMinusOffsetY = minMinusOffsetY;\n        if (this.trimMarginTop) {\n            const minOffsetYInRange = Math.min(minOffsetY, this._calcStandardOffsetY(this.font)) * glyphScale;\n            state.currentLineInfo.height -= minOffsetYInRange;\n            state.currentLineInfo.minMinusOffsetY += minOffsetYInRange;\n        }\n        state.resultLines.push(state.currentLineInfo);\n        state.currentLineInfo = {\n            sourceText: \"\",\n            fragmentDrawInfoArray: [],\n            width: 0,\n            height: 0,\n            minMinusOffsetY: 0,\n            surface: undefined\n        };\n    }\n    _needBreakLine(state, width) {\n        return (this.lineBreak && width > 0 && state.reservedLineBreakPosition === null &&\n            state.currentLineInfo.width + state.currentStringDrawInfo.width + width > this._lineBreakWidth &&\n            state.currentLineInfo.width + state.currentStringDrawInfo.width > 0); // 行頭文字の場合は改行しない\n    }\n    _isDifferentRubyOptions(ro0, ro1) {\n        return (ro0.rubyFontSize !== ro1.rubyFontSize\n            || ro0.rubyFont !== ro1.rubyFont\n            || ro0.rubyGap !== ro1.rubyGap\n            || ro0.rubyAlign !== ro1.rubyAlign);\n    }\n    _calcStandardOffsetY(font) {\n        // 標準的な高さを持つグリフとして `M` を利用するが明確な根拠は無い\n        const text = \"M\";\n        const glyphM = font.glyphForCharacter(text.charCodeAt(0));\n        return glyphM.offsetY;\n    }\n    /** stateのcurrent系プロパティを禁則処理的に正しい構造に再構築する */\n    _breakLine(state, fragments, index) {\n        if (!this.lineBreakRule) {\n            this._flushCurrentStringDrawInfo(state);\n            this._feedLine(state);\n            return;\n        }\n        const correctLineBreakPosition = this.lineBreakRule(fragments, index); // 外部ルールが期待する改行位置\n        let diff = correctLineBreakPosition - index;\n        if (diff === 0) {\n            this._flushCurrentStringDrawInfo(state);\n            this._feedLine(state);\n        }\n        else if (diff > 0) {\n            // 先送り改行\n            state.reservedLineBreakPosition = diff;\n        }\n        else {\n            // 巻き戻し改行\n            this._flushCurrentStringDrawInfo(state);\n            const droppedFragmentDrawInfoArray = [];\n            // currentLineInfoのfragmentDrawInfoArrayを巻き戻す\n            while (diff < 0) {\n                const fragmentDrawInfoArray = state.currentLineInfo.fragmentDrawInfoArray;\n                const lastDrawInfo = fragmentDrawInfoArray[fragmentDrawInfoArray.length - 1];\n                if (lastDrawInfo instanceof fr.RubyFragmentDrawInfo) {\n                    diff++;\n                    droppedFragmentDrawInfoArray.push(lastDrawInfo);\n                    fragmentDrawInfoArray.pop();\n                }\n                else {\n                    if (-diff >= lastDrawInfo.text.length) {\n                        diff += lastDrawInfo.text.length;\n                        droppedFragmentDrawInfoArray.push(lastDrawInfo);\n                        fragmentDrawInfoArray.pop();\n                    }\n                    else {\n                        const droppedGlyphs = lastDrawInfo.glyphs.splice(diff);\n                        const glyphScale = this.fontSize / this.font.size;\n                        const droppedDrawInfoWidth = droppedGlyphs.reduce((acc, glyph) => (glyph.advanceWidth * glyphScale + acc), 0);\n                        lastDrawInfo.width -= droppedDrawInfoWidth;\n                        const droppedDrawInfoText = lastDrawInfo.text.substring(lastDrawInfo.text.length + diff);\n                        lastDrawInfo.text = lastDrawInfo.text.substring(0, lastDrawInfo.text.length + diff);\n                        droppedFragmentDrawInfoArray.push(new fr.StringDrawInfo(droppedDrawInfoText, droppedDrawInfoWidth, droppedGlyphs));\n                        diff = 0;\n                    }\n                }\n            }\n            // currentLineInfoのその他を更新する\n            let droppedWidth = 0;\n            let droppedSourceText = \"\";\n            droppedFragmentDrawInfoArray.forEach((fragment) => {\n                droppedWidth += fragment.width;\n                droppedSourceText += fragment.text;\n            });\n            state.currentLineInfo.width -= droppedWidth;\n            const sourceText = state.currentLineInfo.sourceText;\n            state.currentLineInfo.sourceText = sourceText.substr(0, sourceText.length - droppedSourceText.length);\n            this._feedLine(state);\n            state.currentLineInfo.fragmentDrawInfoArray = droppedFragmentDrawInfoArray;\n            state.currentLineInfo.width = droppedWidth;\n            state.currentLineInfo.sourceText = droppedSourceText;\n        }\n    }\n}\nexports.Label = Label;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-label/lib/Label.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-label/lib/RubyParser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-label/lib/RubyParser.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.flatmap = exports.RubyAlign = void 0;\nvar RubyAlign;\n(function (RubyAlign) {\n    /**\n     * rtの字間は固定で中央に揃える。\n     */\n    RubyAlign[RubyAlign[\"Center\"] = 0] = \"Center\";\n    /**\n     * rb幅に合わせてrtの字間を揃える。\n     */\n    RubyAlign[RubyAlign[\"SpaceAround\"] = 1] = \"SpaceAround\";\n})(RubyAlign = exports.RubyAlign || (exports.RubyAlign = {}));\nfunction flatmap(arr, func) {\n    return Array.prototype.concat.apply([], arr.map(func));\n}\nexports.flatmap = flatmap;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-label/lib/RubyParser.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-label/lib/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-label/lib/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RubyAlign = exports.RubyParser = exports.Label = exports.FragmentDrawInfo = exports.defaultRubyParser = void 0;\nvar DefaultRubyParser_1 = __webpack_require__(/*! ./DefaultRubyParser */ \"./node_modules/@akashic-extension/akashic-label/lib/DefaultRubyParser.js\");\nObject.defineProperty(exports, \"defaultRubyParser\", ({ enumerable: true, get: function () { return DefaultRubyParser_1.parse; } }));\nexports.FragmentDrawInfo = __webpack_require__(/*! ./FragmentDrawInfo */ \"./node_modules/@akashic-extension/akashic-label/lib/FragmentDrawInfo.js\");\nvar Label_1 = __webpack_require__(/*! ./Label */ \"./node_modules/@akashic-extension/akashic-label/lib/Label.js\");\nObject.defineProperty(exports, \"Label\", ({ enumerable: true, get: function () { return Label_1.Label; } }));\nexports.RubyParser = __webpack_require__(/*! ./RubyParser */ \"./node_modules/@akashic-extension/akashic-label/lib/RubyParser.js\");\nvar RubyParser_1 = __webpack_require__(/*! ./RubyParser */ \"./node_modules/@akashic-extension/akashic-label/lib/RubyParser.js\");\nObject.defineProperty(exports, \"RubyAlign\", ({ enumerable: true, get: function () { return RubyParser_1.RubyAlign; } }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-label/lib/index.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-timeline/lib/ActionType.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-timeline/lib/ActionType.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActionType = void 0;\nvar ActionType;\n(function (ActionType) {\n    ActionType[ActionType[\"Wait\"] = 0] = \"Wait\";\n    ActionType[ActionType[\"Call\"] = 1] = \"Call\";\n    ActionType[ActionType[\"TweenTo\"] = 2] = \"TweenTo\";\n    ActionType[ActionType[\"TweenBy\"] = 3] = \"TweenBy\";\n    ActionType[ActionType[\"TweenByMult\"] = 4] = \"TweenByMult\";\n    ActionType[ActionType[\"Cue\"] = 5] = \"Cue\";\n    ActionType[ActionType[\"Every\"] = 6] = \"Every\";\n})(ActionType = exports.ActionType || (exports.ActionType = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-timeline/lib/ActionType.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-timeline/lib/Easing.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-timeline/lib/Easing.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Easing = void 0;\n/**\n * Easing関数群。\n * 参考: http://gizma.com/easing/\n */\nvar Easing;\n(function (Easing) {\n    /**\n     * 入力値をlinearした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function linear(t, b, c, d) {\n        return c * t / d + b;\n    }\n    Easing.linear = linear;\n    /**\n     * 入力値をeaseInQuadした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInQuad(t, b, c, d) {\n        t /= d;\n        return c * t * t + b;\n    }\n    Easing.easeInQuad = easeInQuad;\n    /**\n     * 入力値をeaseOutQuadした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutQuad(t, b, c, d) {\n        t /= d;\n        return -c * t * (t - 2) + b;\n    }\n    Easing.easeOutQuad = easeOutQuad;\n    /**\n     * 入力値をeaseInOutQuadした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutQuad(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1)\n            return c / 2 * t * t + b;\n        --t;\n        return -c / 2 * (t * (t - 2) - 1) + b;\n    }\n    Easing.easeInOutQuad = easeInOutQuad;\n    /**\n     * 入力値をeaseInQubicした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInCubic(t, b, c, d) {\n        t /= d;\n        return c * t * t * t + b;\n    }\n    Easing.easeInCubic = easeInCubic;\n    /**\n     * @deprecated この関数は非推奨機能である。代わりに `easeInCubic` を用いるべきである。\n     */\n    Easing.easeInQubic = easeInCubic;\n    /**\n     * 入力値をeaseOutQubicした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutCubic(t, b, c, d) {\n        t /= d;\n        --t;\n        return c * (t * t * t + 1) + b;\n    }\n    Easing.easeOutCubic = easeOutCubic;\n    /**\n     * @deprecated この関数は非推奨機能である。代わりに `easeOutCubic` を用いるべきである。\n     */\n    Easing.easeOutQubic = easeOutCubic;\n    /**\n     * 入力値をeaseInOutQubicした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutCubic(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1)\n            return c / 2 * t * t * t + b;\n        t -= 2;\n        return c / 2 * (t * t * t + 2) + b;\n    }\n    Easing.easeInOutCubic = easeInOutCubic;\n    /**\n     * @deprecated この関数は非推奨機能である。代わりに `easeInOutCubic` を用いるべきである。\n     */\n    Easing.easeInOutQubic = easeInOutCubic;\n    /**\n     * 入力値をeaseInQuartした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInQuart(t, b, c, d) {\n        t /= d;\n        return c * t * t * t * t + b;\n    }\n    Easing.easeInQuart = easeInQuart;\n    /**\n     * 入力値をeaseOutQuartした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutQuart(t, b, c, d) {\n        t /= d;\n        --t;\n        return -c * (t * t * t * t - 1) + b;\n    }\n    Easing.easeOutQuart = easeOutQuart;\n    /**\n     * 入力値をeaseInQuintした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInQuint(t, b, c, d) {\n        t /= d;\n        return c * t * t * t * t * t + b;\n    }\n    Easing.easeInQuint = easeInQuint;\n    /**\n     * 入力値をeaseOutQuintした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutQuint(t, b, c, d) {\n        t /= d;\n        --t;\n        return c * (t * t * t * t * t + 1) + b;\n    }\n    Easing.easeOutQuint = easeOutQuint;\n    /**\n     * 入力値をeaseInOutQuintした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutQuint(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1)\n            return c / 2 * t * t * t * t * t + b;\n        t -= 2;\n        return c / 2 * (t * t * t * t * t + 2) + b;\n    }\n    Easing.easeInOutQuint = easeInOutQuint;\n    /**\n     * 入力値をeaseInSineした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInSine(t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    }\n    Easing.easeInSine = easeInSine;\n    /**\n     * 入力値をeaseOutSineした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutSine(t, b, c, d) {\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    }\n    Easing.easeOutSine = easeOutSine;\n    /**\n     * 入力値をeaseInOutSineした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutSine(t, b, c, d) {\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n    Easing.easeInOutSine = easeInOutSine;\n    /**\n     * 入力値をeaseInExpoした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInExpo(t, b, c, d) {\n        return c * Math.pow(2, 10 * (t / d - 1)) + b;\n    }\n    Easing.easeInExpo = easeInExpo;\n    /**\n     * 入力値をeaseInOutExpoした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutExpo(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1)\n            return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n        --t;\n        return c / 2 * (-Math.pow(2, -10 * t) + 2) + b;\n    }\n    Easing.easeInOutExpo = easeInOutExpo;\n    /**\n     * 入力値をeaseInCircした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInCirc(t, b, c, d) {\n        t /= d;\n        return -c * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    Easing.easeInCirc = easeInCirc;\n    /**\n     * 入力値をeaseOutCircした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutCirc(t, b, c, d) {\n        t /= d;\n        --t;\n        return c * Math.sqrt(1 - t * t) + b;\n    }\n    Easing.easeOutCirc = easeOutCirc;\n    /**\n     * 入力値をeaseInOutCircした結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutCirc(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1)\n            return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n        t -= 2;\n        return c / 2 * (Math.sqrt(1 - t * t) + 1) + b;\n    }\n    Easing.easeInOutCirc = easeInOutCirc;\n    /**\n     * 入力値を easeInOutBack した結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeInOutBack(t, b, c, d) {\n        var x = t / d;\n        var c1 = 1.70158;\n        var c2 = c1 * 1.525;\n        var v = x < 0.5\n            ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n            : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n        return b + c * v;\n    }\n    Easing.easeInOutBack = easeInOutBack;\n    /**\n     * 入力値を easeOutBounce した結果の現在位置を返す。\n     * @param t 経過時間\n     * @param b 開始位置\n     * @param c 終了位置\n     * @param d 所要時間\n     */\n    function easeOutBounce(t, b, c, d) {\n        var x = t / d;\n        var n1 = 7.5625;\n        var d1 = 2.75;\n        var v;\n        if (x < 1 / d1) {\n            v = n1 * x * x;\n        }\n        else if (x < 2 / d1) {\n            v = n1 * (x -= 1.5 / d1) * x + 0.75;\n        }\n        else if (x < 2.5 / d1) {\n            v = n1 * (x -= 2.25 / d1) * x + 0.9375;\n        }\n        else {\n            v = n1 * (x -= 2.625 / d1) * x + 0.984375;\n        }\n        return b + c * v;\n    }\n    Easing.easeOutBounce = easeOutBounce;\n})(Easing = exports.Easing || (exports.Easing = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-timeline/lib/Easing.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-timeline/lib/Timeline.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-timeline/lib/Timeline.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Timeline = void 0;\nvar Tween_1 = __webpack_require__(/*! ./Tween */ \"./node_modules/@akashic-extension/akashic-timeline/lib/Tween.js\");\n/**\n * タイムライン機能を提供するクラス。\n */\nvar Timeline = /** @class */ (function () {\n    /**\n     * Timelineを生成する。\n     * @param scene タイムラインを実行する `Scene`\n     */\n    function Timeline(scene) {\n        this._scene = scene;\n        this._tweens = [];\n        this._tweensCreateQue = [];\n        this._fps = this._scene.game.fps;\n        this.paused = false;\n        scene.onUpdate.add(this._handler, this);\n    }\n    /**\n     * Timelineに紐付いたTweenを生成する。\n     * @param target タイムライン処理の対象にするオブジェクト\n     * @param option Tweenの生成オプション。省略された場合、 {modified: target.modified, destroyed: target.destroyed} が与えられた時と同様の処理を行う。\n     */\n    Timeline.prototype.create = function (target, option) {\n        var t = new Tween_1.Tween(target, option);\n        this._tweensCreateQue.push(t);\n        return t;\n    };\n    /**\n     * Timelineに紐付いたTweenを削除する。\n     * @param tween 削除するTween。\n     */\n    Timeline.prototype.remove = function (tween) {\n        var index = this._tweens.indexOf(tween);\n        var queIndex = this._tweensCreateQue.indexOf(tween);\n        if (index < 0 && queIndex < 0) {\n            return;\n        }\n        tween.cancel(false);\n    };\n    /**\n     * Timelineに紐付いた全Tweenのアクションを完了させる。詳細は `Tween#complete()`の説明を参照。\n     */\n    Timeline.prototype.completeAll = function () {\n        for (var i = 0; i < this._tweens.length; ++i) {\n            var tween = this._tweens[i];\n            if (!tween.isFinished()) {\n                tween.complete();\n            }\n        }\n        for (var i = 0; i < this._tweensCreateQue.length; ++i) {\n            var tween = this._tweensCreateQue[i];\n            if (!tween.isFinished()) {\n                tween.complete();\n            }\n        }\n    };\n    /**\n     * Timelineに紐付いた全Tweenのアクションを取り消す。詳細は `Tween#cancel()`の説明を参照。\n     * @param revert ターゲットのプロパティをアクション開始前に戻すかどうか (指定しない場合は `false`)\n     */\n    Timeline.prototype.cancelAll = function (revert) {\n        if (revert === void 0) { revert = false; }\n        for (var i = 0; i < this._tweens.length; ++i) {\n            var tween = this._tweens[i];\n            if (!tween.isFinished()) {\n                tween.cancel(revert);\n            }\n        }\n        for (var i = 0; i < this._tweensCreateQue.length; ++i) {\n            var tween = this._tweensCreateQue[i];\n            if (!tween.isFinished()) {\n                tween.cancel(revert);\n            }\n        }\n    };\n    /**\n     * Timelineに紐付いた全Tweenの紐付けを解除する。\n     */\n    Timeline.prototype.clear = function () {\n        this.cancelAll(false);\n    };\n    /**\n     * このTimelineを破棄する。\n     */\n    Timeline.prototype.destroy = function () {\n        this.clear();\n        if (!this._scene.destroyed()) {\n            this._scene.onUpdate.remove(this._handler, this);\n        }\n        this._scene = undefined;\n    };\n    /**\n     * このTimelineが破棄済みであるかを返す。\n     */\n    Timeline.prototype.destroyed = function () {\n        return this._scene === undefined;\n    };\n    Timeline.prototype._handler = function () {\n        if (this.paused || this._tweens.length + this._tweensCreateQue.length === 0) {\n            return;\n        }\n        this._tweens = this._tweens.concat(this._tweensCreateQue);\n        this._tweensCreateQue = [];\n        var tmp = [];\n        for (var i = 0; i < this._tweens.length; ++i) {\n            var tween = this._tweens[i];\n            if (!tween.shouldRemove()) {\n                tween._fire(1000 / this._fps);\n                tmp.push(tween);\n            }\n        }\n        this._tweens = tmp;\n    };\n    return Timeline;\n}());\nexports.Timeline = Timeline;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-timeline/lib/Timeline.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-timeline/lib/Tween.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-timeline/lib/Tween.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tween = void 0;\nvar ActionType_1 = __webpack_require__(/*! ./ActionType */ \"./node_modules/@akashic-extension/akashic-timeline/lib/ActionType.js\");\nvar Easing_1 = __webpack_require__(/*! ./Easing */ \"./node_modules/@akashic-extension/akashic-timeline/lib/Easing.js\");\n/**\n * オブジェクトの状態を変化させるアクションを定義するクラス。\n * 本クラスのインスタンス生成には`Timeline#create()`を利用する。\n */\nvar Tween = /** @class */ (function () {\n    /**\n     * Tweenを生成する。\n     * @param target 対象となるオブジェクト\n     * @param option オプション\n     */\n    function Tween(target, option) {\n        this._target = target;\n        this._stepIndex = 0;\n        this._loop = !!option && !!option.loop;\n        this._stale = false;\n        this._modifiedHandler = undefined;\n        if (option && option.modified) {\n            this._modifiedHandler = option.modified;\n        }\n        else if (target && target.modified) {\n            this._modifiedHandler = target.modified;\n        }\n        this._destroyedHandler = undefined;\n        if (option && option.destroyed) {\n            this._destroyedHandler = option.destroyed;\n        }\n        else if (target && target.destroyed) {\n            this._destroyedHandler = target.destroyed;\n        }\n        this._steps = [];\n        this._lastStep = undefined;\n        this._pararel = false;\n        this._initialProp = {};\n        this.paused = false;\n    }\n    /**\n     * オブジェクトの状態を変化させるアクションを追加する。\n     * @param props 変化内容\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.to = function (props, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        var action = {\n            input: props,\n            duration: duration,\n            easing: easing,\n            type: ActionType_1.ActionType.TweenTo,\n            initialized: false\n        };\n        this._push(action);\n        return this;\n    };\n    /**\n     * オブジェクトの状態を変化させるアクションを追加する。\n     * 変化内容はアクション開始時を基準とした相対値で指定する。\n     * @param props 変化内容\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     * @param multiply `true`を指定すると`props`の値をアクション開始時の値に掛け合わせた値が終了値となる（指定しない場合は`false`）\n     */\n    Tween.prototype.by = function (props, duration, easing, multiply) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        if (multiply === void 0) { multiply = false; }\n        var type = multiply ? ActionType_1.ActionType.TweenByMult : ActionType_1.ActionType.TweenBy;\n        var action = {\n            input: props,\n            duration: duration,\n            easing: easing,\n            type: type,\n            initialized: false\n        };\n        this._push(action);\n        return this;\n    };\n    /**\n     * 次に追加されるアクションを、このメソッド呼び出しの直前に追加されたアクションと並列に実行させる。\n     * `Tween#con()`で並列実行を指定されたアクションが全て終了後、次の並列実行を指定されていないアクションを実行する。\n     */\n    Tween.prototype.con = function () {\n        this._pararel = true;\n        return this;\n    };\n    /**\n     * オブジェクトの変化を停止するアクションを追加する。\n     * @param duration 停止する時間（ミリ秒）\n     */\n    Tween.prototype.wait = function (duration) {\n        var action = {\n            duration: duration,\n            type: ActionType_1.ActionType.Wait,\n            initialized: false\n        };\n        this._push(action);\n        return this;\n    };\n    /**\n     * 関数を即座に実行するアクションを追加する。\n     * @param func 実行する関数\n     */\n    Tween.prototype.call = function (func) {\n        var action = {\n            func: func,\n            type: ActionType_1.ActionType.Call,\n            duration: 0,\n            initialized: false\n        };\n        this._push(action);\n        return this;\n    };\n    /**\n     * 一時停止するアクションを追加する。\n     * 内部的には`Tween#call()`で`Tween#paused`に`true`をセットしている。\n     */\n    Tween.prototype.pause = function () {\n        var _this = this;\n        return this.call(function () {\n            _this.paused = true;\n        });\n    };\n    /**\n     * 待機時間をキーとして実行したい関数を複数指定する。\n     * @param actions 待機時間をキーとして実行したい関数を値としたオブジェクト\n     */\n    Tween.prototype.cue = function (funcs) {\n        var keys = Object.keys(funcs);\n        keys.sort(function (a, b) {\n            return Number(a) > Number(b) ? 1 : -1;\n        });\n        var q = [];\n        for (var i = 0; i < keys.length; ++i) {\n            q.push({ time: Number(keys[i]), func: funcs[keys[i]] });\n        }\n        var action = {\n            type: ActionType_1.ActionType.Cue,\n            duration: Number(keys[keys.length - 1]),\n            cue: q,\n            initialized: false\n        };\n        this._push(action);\n        return this;\n    };\n    /**\n     * 指定した時間を経過するまで毎フレーム指定した関数を呼び出すアクションを追加する。\n     * @param func 毎フレーム呼び出される関数。第一引数は経過時間、第二引数はEasingした結果の変化量（0-1）となる。\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.every = function (func, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        var action = {\n            func: func,\n            type: ActionType_1.ActionType.Every,\n            easing: easing,\n            duration: duration,\n            initialized: false\n        };\n        this._push(action);\n        return this;\n    };\n    /**\n     * ターゲットをフェードインさせるアクションを追加する。\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.fadeIn = function (duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ opacity: 1 }, duration, easing);\n    };\n    /**\n     * ターゲットをフェードアウトさせるアクションを追加する。\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.fadeOut = function (duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ opacity: 0 }, duration, easing);\n    };\n    /**\n     * ターゲットを指定した座標に移動するアクションを追加する。\n     * @param x x座標\n     * @param y y座標\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.moveTo = function (x, y, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ x: x, y: y }, duration, easing);\n    };\n    /**\n     * ターゲットを指定した相対座標に移動するアクションを追加する。相対座標の基準値はアクション開始時の座標となる。\n     * @param x x座標\n     * @param y y座標\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.moveBy = function (x, y, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.by({ x: x, y: y }, duration, easing);\n    };\n    /**\n     * ターゲットのX座標を指定した座標に移動するアクションを追加する。\n     * @param x x座標\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.moveX = function (x, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ x: x }, duration, easing);\n    };\n    /**\n     * ターゲットのY座標を指定した座標に移動するアクションを追加する。\n     * @param y y座標\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.moveY = function (y, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ y: y }, duration, easing);\n    };\n    /**\n     * ターゲットを指定した角度に回転するアクションを追加する。\n     * @param angle 角度\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.rotateTo = function (angle, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ angle: angle }, duration, easing);\n    };\n    /**\n     * ターゲットをアクション開始時の角度を基準とした相対角度に回転するアクションを追加する。\n     * @param angle 角度\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.rotateBy = function (angle, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.by({ angle: angle }, duration, easing);\n    };\n    /**\n     * ターゲットを指定した倍率に拡縮するアクションを追加する。\n     * @param scaleX X方向の倍率\n     * @param scaleY Y方向の倍率\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.scaleTo = function (scaleX, scaleY, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.to({ scaleX: scaleX, scaleY: scaleY }, duration, easing);\n    };\n    /**\n     * ターゲットのアクション開始時の倍率に指定した倍率を掛け合わせた倍率に拡縮するアクションを追加する。\n     * @param scaleX X方向の倍率\n     * @param scaleY Y方向の倍率\n     * @param duration 変化に要する時間（ミリ秒）\n     * @param easing Easing関数（指定しない場合は`Easing.linear`）\n     */\n    Tween.prototype.scaleBy = function (scaleX, scaleY, duration, easing) {\n        if (easing === void 0) { easing = Easing_1.Easing.linear; }\n        return this.by({ scaleX: scaleX, scaleY: scaleY }, duration, easing, true);\n    };\n    /**\n     * このTweenに追加されたすべてのアクションを即座に完了する。\n     * `Tween#loop`が`true`の場合、ループの終端までのアクションがすべて実行される。\n     */\n    Tween.prototype.complete = function () {\n        for (var i = this._stepIndex; i < this._steps.length; ++i) {\n            for (var j = 0; j < this._steps[i].length; ++j) {\n                var action = this._steps[i][j];\n                if (!action.initialized) {\n                    this._initAction(action);\n                }\n                var keys = Object.keys(action.goal);\n                for (var k = 0; k < keys.length; ++k) {\n                    var key = keys[k];\n                    this._target[key] = action.goal[key];\n                }\n                if (action.type === ActionType_1.ActionType.Call && typeof action.func === \"function\") {\n                    action.func.call(this._target);\n                }\n                else if (action.type === ActionType_1.ActionType.Cue && action.cue) {\n                    for (var k = 0; k < action.cue.length; ++k) {\n                        action.cue[k].func.call(this._target);\n                    }\n                }\n                else if (action.type === ActionType_1.ActionType.Every && typeof action.func === \"function\") {\n                    action.func.call(this._target, action.duration, 1);\n                }\n            }\n        }\n        this._stepIndex = this._steps.length;\n        this._loop = false;\n        this._lastStep = undefined;\n        this._pararel = false;\n        this.paused = false;\n        if (this._modifiedHandler) {\n            this._modifiedHandler.call(this._target);\n        }\n    };\n    /**\n     * このTweenに追加されたすべてのアクションを取り消す。\n     * `revert`を`true` にした場合、ターゲットのプロパティをアクション開始前に戻す。\n     * ただし`Tween#call()`や`Tween#every()`により変更されたプロパティは戻らない点に注意。\n     * @param revert ターゲットのプロパティをアクション開始前に戻すかどうか (指定しない場合は `false`)\n     */\n    Tween.prototype.cancel = function (revert) {\n        if (revert === void 0) { revert = false; }\n        if (revert) {\n            var keys = Object.keys(this._initialProp);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                this._target[key] = this._initialProp[key];\n            }\n        }\n        this._stepIndex = this._steps.length;\n        this._loop = false;\n        this._lastStep = undefined;\n        this._pararel = false;\n        this.paused = false;\n        this._stale = true;\n        if (this._modifiedHandler) {\n            this._modifiedHandler.call(this._target);\n        }\n    };\n    /**\n     * アニメーションが終了しているかどうかを返す。\n     * `_target`が破棄された場合又は、全アクションの実行が終了した場合に`true`を返す。\n     */\n    Tween.prototype.isFinished = function () {\n        var ret = false;\n        if (this._destroyedHandler) {\n            ret = this._destroyedHandler.call(this._target);\n        }\n        if (!ret) {\n            ret = this._stepIndex !== 0 && this._stepIndex >= this._steps.length && !this._loop;\n        }\n        return ret;\n    };\n    /**\n     * アニメーションが削除可能かどうかを返す。\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     */\n    Tween.prototype.shouldRemove = function () {\n        return this._stale || this.isFinished();\n    };\n    /**\n     * アニメーションを実行する。\n     * @param delta 前フレームからの経過時間\n     */\n    Tween.prototype._fire = function (delta) {\n        if (this._steps.length === 0 || this.isFinished() || this.paused) {\n            return;\n        }\n        if (this._stepIndex >= this._steps.length) {\n            if (this._loop) {\n                this._stepIndex = 0;\n            }\n            else {\n                return;\n            }\n        }\n        var actions = this._steps[this._stepIndex];\n        var remained = false;\n        for (var i = 0; i < actions.length; ++i) {\n            var action = actions[i];\n            if (!action.initialized) {\n                this._initAction(action);\n            }\n            if (action.finished) {\n                continue;\n            }\n            action.elapsed += delta;\n            switch (action.type) {\n                case ActionType_1.ActionType.Call:\n                    action.func.call(this._target);\n                    break;\n                case ActionType_1.ActionType.Every:\n                    var elapsed = Math.min(action.elapsed, action.duration);\n                    var progress = action.easing(elapsed, 0, 1, action.duration);\n                    if (progress > 1) {\n                        progress = 1;\n                    }\n                    action.func.call(this._target, elapsed, progress);\n                    break;\n                case ActionType_1.ActionType.TweenTo:\n                case ActionType_1.ActionType.TweenBy:\n                case ActionType_1.ActionType.TweenByMult:\n                    var keys = Object.keys(action.goal);\n                    for (var j = 0; j < keys.length; ++j) {\n                        var key = keys[j];\n                        // アクションにより undefined が指定されるケースと初期値を区別するため Object.prototype.hasOwnProperty() を利用\n                        // (number以外が指定されるケースは存在しないが念の為)\n                        if (!this._initialProp.hasOwnProperty(key)) {\n                            this._initialProp[key] = this._target[key];\n                        }\n                        if (action.elapsed >= action.duration) {\n                            this._target[key] = action.goal[key];\n                        }\n                        else {\n                            this._target[key] = action.easing(action.elapsed, action.start[key], action.goal[key] - action.start[key], action.duration);\n                        }\n                    }\n                    break;\n                case ActionType_1.ActionType.Cue:\n                    var cueAction = action.cue[action.cueIndex];\n                    if (cueAction !== undefined && action.elapsed >= cueAction.time) {\n                        cueAction.func.call(this._target);\n                        ++action.cueIndex;\n                    }\n                    break;\n            }\n            if (this._modifiedHandler) {\n                this._modifiedHandler.call(this._target);\n            }\n            if (action.elapsed >= action.duration) {\n                action.finished = true;\n            }\n            else {\n                remained = true;\n            }\n        }\n        if (!remained) {\n            for (var k = 0; k < actions.length; ++k) {\n                actions[k].initialized = false;\n            }\n            ++this._stepIndex;\n        }\n    };\n    /**\n     * Tweenの実行状態をシリアライズして返す。\n     */\n    Tween.prototype.serializeState = function () {\n        var tData = {\n            _stepIndex: this._stepIndex,\n            _initialProp: this._initialProp,\n            _steps: []\n        };\n        for (var i = 0; i < this._steps.length; ++i) {\n            tData._steps[i] = [];\n            for (var j = 0; j < this._steps[i].length; ++j) {\n                tData._steps[i][j] = {\n                    input: this._steps[i][j].input,\n                    start: this._steps[i][j].start,\n                    goal: this._steps[i][j].goal,\n                    duration: this._steps[i][j].duration,\n                    elapsed: this._steps[i][j].elapsed,\n                    type: this._steps[i][j].type,\n                    cueIndex: this._steps[i][j].cueIndex,\n                    initialized: this._steps[i][j].initialized,\n                    finished: this._steps[i][j].finished\n                };\n            }\n        }\n        return tData;\n    };\n    /**\n     * Tweenの実行状態を復元する。\n     * @param serializedstate 復元に使う情報。\n     */\n    Tween.prototype.deserializeState = function (serializedState) {\n        this._stepIndex = serializedState._stepIndex;\n        this._initialProp = serializedState._initialProp;\n        for (var i = 0; i < serializedState._steps.length; ++i) {\n            for (var j = 0; j < serializedState._steps[i].length; ++j) {\n                if (!serializedState._steps[i][j] || !this._steps[i][j])\n                    continue;\n                this._steps[i][j].input = serializedState._steps[i][j].input;\n                this._steps[i][j].start = serializedState._steps[i][j].start;\n                this._steps[i][j].goal = serializedState._steps[i][j].goal;\n                this._steps[i][j].duration = serializedState._steps[i][j].duration;\n                this._steps[i][j].elapsed = serializedState._steps[i][j].elapsed;\n                this._steps[i][j].type = serializedState._steps[i][j].type;\n                this._steps[i][j].cueIndex = serializedState._steps[i][j].cueIndex;\n                this._steps[i][j].initialized = serializedState._steps[i][j].initialized;\n                this._steps[i][j].finished = serializedState._steps[i][j].finished;\n            }\n        }\n    };\n    /**\n     * `this._pararel`が`false`の場合は新規にステップを作成し、アクションを追加する。\n     * `this._pararel`が`true`の場合は最後に作成したステップにアクションを追加する。\n     */\n    Tween.prototype._push = function (action) {\n        if (this._pararel) {\n            this._lastStep.push(action);\n        }\n        else {\n            var index = this._steps.push([action]) - 1;\n            this._lastStep = this._steps[index];\n        }\n        this._pararel = false;\n    };\n    Tween.prototype._initAction = function (action) {\n        action.elapsed = 0;\n        action.start = {};\n        action.goal = {};\n        action.cueIndex = 0;\n        action.finished = false;\n        action.initialized = true;\n        if (action.type !== ActionType_1.ActionType.TweenTo\n            && action.type !== ActionType_1.ActionType.TweenBy\n            && action.type !== ActionType_1.ActionType.TweenByMult) {\n            return;\n        }\n        var keys = Object.keys(action.input);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (this._target[key] !== undefined) {\n                action.start[key] = this._target[key];\n                if (action.type === ActionType_1.ActionType.TweenTo) {\n                    action.goal[key] = action.input[key];\n                }\n                else if (action.type === ActionType_1.ActionType.TweenBy) {\n                    action.goal[key] = action.start[key] + action.input[key];\n                }\n                else if (action.type === ActionType_1.ActionType.TweenByMult) {\n                    action.goal[key] = action.start[key] * action.input[key];\n                }\n            }\n        }\n    };\n    return Tween;\n}());\nexports.Tween = Tween;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-timeline/lib/Tween.js?");

/***/ }),

/***/ "./node_modules/@akashic-extension/akashic-timeline/lib/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@akashic-extension/akashic-timeline/lib/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Easing = exports.Tween = exports.Timeline = void 0;\nvar Timeline_1 = __webpack_require__(/*! ./Timeline */ \"./node_modules/@akashic-extension/akashic-timeline/lib/Timeline.js\");\nObject.defineProperty(exports, \"Timeline\", ({ enumerable: true, get: function () { return Timeline_1.Timeline; } }));\nvar Tween_1 = __webpack_require__(/*! ./Tween */ \"./node_modules/@akashic-extension/akashic-timeline/lib/Tween.js\");\nObject.defineProperty(exports, \"Tween\", ({ enumerable: true, get: function () { return Tween_1.Tween; } }));\nvar Easing_1 = __webpack_require__(/*! ./Easing */ \"./node_modules/@akashic-extension/akashic-timeline/lib/Easing.js\");\nObject.defineProperty(exports, \"Easing\", ({ enumerable: true, get: function () { return Easing_1.Easing; } }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic-extension/akashic-timeline/lib/index.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/index */ \"./node_modules/@akashic/akashic-engine/lib/index.js\");\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/index.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AssetAccessor.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AssetAccessor.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AssetAccessor = void 0;\n/**\n * アセットへのアクセスを提供するアクセッサ群。\n *\n * 実態は `AssetManager` のいくつかのメソッドに対するラッパーである。\n * このクラスにより、パス・アセットID・パターン・フィルタから、対応する読み込み済みアセットを取得できる。\n *\n * 通常、ゲーム開発者はこのクラスのオブジェクトを生成する必要はない。\n * `g.Scene#asset` に代入されている値を利用すればよい。\n */\nvar AssetAccessor = /** @class */ (function () {\n    /**\n     * `AssetAccessor` のインスタンスを生成する。\n     *\n     * @param assetManager ラップする `AssetManager`\n     */\n    function AssetAccessor(assetManager) {\n        this._assetManager = assetManager;\n    }\n    /**\n     * パスから読み込み済みの画像アセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該の画像アセットが読み込まれていない場合、エラー。\n     *\n     * @param path 取得する画像アセットのパス\n     */\n    AssetAccessor.prototype.getImage = function (path) {\n        return this._assetManager.peekLiveAssetByAccessorPath(path, \"image\");\n    };\n    /**\n     * パスから読み込み済みのオーディオアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * さらにオーディオアセットに限り、拡張子を省いたものでなければならない。(e.g. `\"/audio/bgm01\"`)\n     *\n     * 当該のオーディオアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 取得するオーディオアセットのパス\n     */\n    AssetAccessor.prototype.getAudio = function (path) {\n        return this._assetManager.peekLiveAssetByAccessorPath(path, \"audio\");\n    };\n    /**\n     * パスから読み込み済みのスクリプトアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のスクリプトアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 取得するスクリプトアセットのパス\n     */\n    AssetAccessor.prototype.getScript = function (path) {\n        return this._assetManager.peekLiveAssetByAccessorPath(path, \"script\");\n    };\n    /**\n     * パスから読み込み済みのテキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のテキストアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 取得するテキストアセットのパス\n     */\n    AssetAccessor.prototype.getText = function (path) {\n        return this._assetManager.peekLiveAssetByAccessorPath(path, \"text\");\n    };\n    /**\n     * パスから読み込み済みのテキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得し、その内容の文字列を返す。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のテキストアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 内容の文字列を取得するテキストアセットのパス\n     */\n    AssetAccessor.prototype.getTextContent = function (path) {\n        return this.getText(path).data;\n    };\n    /**\n     * パスから読み込み済みのテキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得し、その内容をJSONとしてパースした値を返す。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のテキストアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 内容のJSONを取得するテキストアセットのパス\n     */\n    AssetAccessor.prototype.getJSONContent = function (path) {\n        return JSON.parse(this.getTextContent(path));\n    };\n    /**\n     * パスから読み込み済みのベクタ画像アセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のベクタ画像アセットが読み込まれていない場合、エラー。\n     *\n     * @param path 取得する画像アセットのパス\n     */\n    AssetAccessor.prototype.getVectorImage = function (path) {\n        return this._assetManager.peekLiveAssetByAccessorPath(path, \"vector-image\");\n    };\n    /**\n     * パスから読み込み済みのバイナリアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のバイナリアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 取得するバイナリアセットのパス\n     */\n    AssetAccessor.prototype.getBinary = function (path) {\n        return this._assetManager.peekLiveAssetByAccessorPath(path, \"binary\");\n    };\n    /**\n     * パスから読み込み済みのバイナリアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得し、その内容のバイト配列を返す。\n     *\n     * パスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスでなければならない。\n     * 当該のバイナリアセットが読み込まれていない場合、エラー。\n     *\n     * @param path 内容のバイト配列を取得するバイナリアセットのパス\n     */\n    AssetAccessor.prototype.getBinaryData = function (path) {\n        return this.getBinary(path).data;\n    };\n    /**\n     * 与えられたパターンまたはフィルタにマッチするパスを持つ、読み込み済みの全画像アセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     *\n     * ここでパスはgame.jsonのあるディレクトリをルート (`/`) とする、 `/` 区切りの絶対パスである。\n     *\n     * パターンは、パス文字列、またはパス中に0個以上の `**`, `*`, `?` を含む文字列である。\n     * ここで `**` は0個以上の任意のディレクトリを、 `*` は0個以上の `/` でない文字を、\n     * `?` は1個の `/` でない文字を表す。 (e.g. \"/images/monsters??/*.png\")\n     *\n     * フィルタは、パスを受け取ってbooleanを返す関数である。\n     * フィルタを与えた場合、読み込み済みの全アセットのうち、フィルタが偽でない値を返したものを返す。\n     *\n     * @param patternOrFilter 取得する画像アセットのパスパターンまたはフィルタ。省略した場合、読み込み済みの全て\n     */\n    AssetAccessor.prototype.getAllImages = function (patternOrFilter) {\n        return this._assetManager.peekAllLiveAssetsByPattern(patternOrFilter !== null && patternOrFilter !== void 0 ? patternOrFilter : \"**/*\", \"image\");\n    };\n    /**\n     * 与えられたパターンまたはフィルタにマッチするパスを持つ、読み込み済みの全オーディオアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 引数の仕様については `AssetAccessor#getAllImages()` の仕様を参照のこと。\n     * ただしオーディオアセットに限り、拡張子を省いたものでなければならない。(e.g. `\"/audio/bgm*\"`)\n     *\n     * @param patternOrFilter 取得するオーディオアセットのパスパターンまたはフィルタ。省略した場合、読み込み済みの全て\n     */\n    AssetAccessor.prototype.getAllAudios = function (patternOrFilter) {\n        return this._assetManager.peekAllLiveAssetsByPattern(patternOrFilter !== null && patternOrFilter !== void 0 ? patternOrFilter : \"**/*\", \"audio\");\n    };\n    /**\n     * 与えられたパターンまたはフィルタにマッチするパスを持つ、読み込み済みの全スクリプトアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 引数の仕様については `AssetAccessor#getAllImages()` の仕様を参照のこと。\n     *\n     * @param patternOrFilter 取得するスクリプトアセットのパスパターンまたはフィルタ。省略した場合、読み込み済みの全て\n     */\n    AssetAccessor.prototype.getAllScripts = function (patternOrFilter) {\n        return this._assetManager.peekAllLiveAssetsByPattern(patternOrFilter !== null && patternOrFilter !== void 0 ? patternOrFilter : \"**/*\", \"script\");\n    };\n    /**\n     * 与えられたパターンまたはフィルタにマッチするパスを持つ、読み込み済みの全テキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 引数の仕様については `AssetAccessor#getAllImages()` の仕様を参照のこと。\n     *\n     * @param patternOrFilter 取得するテキストアセットのパスパターンまたはフィルタ。省略した場合、読み込み済みの全て\n     */\n    AssetAccessor.prototype.getAllTexts = function (patternOrFilter) {\n        return this._assetManager.peekAllLiveAssetsByPattern(patternOrFilter !== null && patternOrFilter !== void 0 ? patternOrFilter : \"**/*\", \"text\");\n    };\n    /**\n     * 与えられたパターンまたはフィルタにマッチするパスを持つ、読み込み済みの全ベクタ画像アセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 引数の仕様については `AssetAccessor#getAllImages()` の仕様を参照のこと。\n     *\n     * @param patternOrFilter 取得するベクタ画像アセットのパスパターンまたはフィルタ。省略した場合、読み込み済みの全て\n     */\n    AssetAccessor.prototype.getAllVectorImages = function (patternOrFilter) {\n        return this._assetManager.peekAllLiveAssetsByPattern(patternOrFilter !== null && patternOrFilter !== void 0 ? patternOrFilter : \"**/*\", \"vector-image\");\n    };\n    /**\n     * 与えられたパターンまたはフィルタにマッチするパスを持つ、読み込み済みのバイナリアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 引数の仕様については `AssetAccessor#getAllImages()` の仕様を参照のこと。\n     *\n     * @param patternOrFilter 取得するベクタ画像アセットのパスパターンまたはフィルタ。省略した場合、読み込み済みの全て\n     */\n    AssetAccessor.prototype.getAllBinaries = function (patternOrFilter) {\n        return this._assetManager.peekAllLiveAssetsByPattern(patternOrFilter !== null && patternOrFilter !== void 0 ? patternOrFilter : \"**/*\", \"binary\");\n    };\n    /**\n     * アセットIDから読み込み済みの画像アセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 当該の画像アセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得する画像アセットのID\n     */\n    AssetAccessor.prototype.getImageById = function (assetId) {\n        return this._assetManager.peekLiveAssetById(assetId, \"image\");\n    };\n    /**\n     * アセットIDから読み込み済みのオーディオアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 当該のオーディオアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得するオーディオアセットのID\n     */\n    AssetAccessor.prototype.getAudioById = function (assetId) {\n        return this._assetManager.peekLiveAssetById(assetId, \"audio\");\n    };\n    /**\n     * アセットIDから読み込み済みのスクリプトアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 当該のスクリプトアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得するスクリプトアセットのID\n     */\n    AssetAccessor.prototype.getScriptById = function (assetId) {\n        return this._assetManager.peekLiveAssetById(assetId, \"script\");\n    };\n    /**\n     * アセットIDから読み込み済みのテキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 当該のテキストアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得するテキストアセットのID\n     */\n    AssetAccessor.prototype.getTextById = function (assetId) {\n        return this._assetManager.peekLiveAssetById(assetId, \"text\");\n    };\n    /**\n     * アセットIDから読み込み済みのテキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得し、その内容の文字列を返す。\n     * 当該のテキストアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 内容の文字列を取得するテキストアセットのID\n     */\n    AssetAccessor.prototype.getTextContentById = function (assetId) {\n        return this.getTextById(assetId).data;\n    };\n    /**\n     * アセットIDから読み込み済みのテキストアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得し、その内容をJSONとしてパースして返す。\n     * 当該のテキストアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 内容のJSONを取得するテキストアセットのID\n     */\n    AssetAccessor.prototype.getJSONContentById = function (assetId) {\n        return JSON.parse(this.getTextById(assetId).data);\n    };\n    /**\n     * アセットIDから読み込み済みのベクタ画像アセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 当該のベクタ画像アセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得するベクタ画像アセットのID\n     */\n    AssetAccessor.prototype.getVectorImageById = function (assetId) {\n        return this._assetManager.peekLiveAssetById(assetId, \"vector-image\");\n    };\n    /**\n     * アセットIDから読み込み済みのバイナリアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得する。\n     * 当該のバイナリアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得するバイナリアセットのID\n     */\n    AssetAccessor.prototype.getBinaryById = function (assetId) {\n        return this._assetManager.peekLiveAssetById(assetId, \"binary\");\n    };\n    /**\n     * アセットIDから読み込み済みのバイナリアセット（現在のシーンで読み込んだ、またはグローバルなアセット）を取得し、その内容のバイト配列を返す。\n     * 当該のバイナリアセットが読み込まれていない場合、エラー。\n     *\n     * @param assetId 取得するバイナリアセットのID\n     */\n    AssetAccessor.prototype.getBinaryDataById = function (assetId) {\n        return this.getBinaryById(assetId).data;\n    };\n    /**\n     * アセットIDからアセットのパスを返す。\n     * 当該のアセットが読み込まれていない場合、 null を返す。\n     *\n     * @param assetId 取得するアセットのID\n     */\n    AssetAccessor.prototype.pathOf = function (assetId) {\n        return this._assetManager.resolveAccessorPath(assetId);\n    };\n    return AssetAccessor;\n}());\nexports.AssetAccessor = AssetAccessor;\n//# sourceMappingURL=AssetAccessor.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AssetAccessor.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AssetGenerationConfiguration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AssetGenerationConfiguration.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=AssetGenerationConfiguration.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AssetGenerationConfiguration.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AssetHolder.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AssetHolder.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AssetHolder = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\n/**\n * シーンのアセットの読み込みと破棄を管理するクラス。\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n */\nvar AssetHolder = /** @class */ (function () {\n    function AssetHolder(param) {\n        var assetManager = param.assetManager;\n        var assetIds = param.assetIds ? param.assetIds.concat() : [];\n        assetIds.push.apply(assetIds, assetManager.resolvePatternsToAssetIds(param.assetPaths || []));\n        this.waitingAssetsCount = assetIds.length;\n        this.userData = param.userData;\n        this._assetManager = assetManager;\n        this._assetIds = assetIds;\n        this._assets = [];\n        this._handlerSet = param.handlerSet;\n        this._requested = false;\n        this._alwaysNotifyFinish = !!param.alwaysNotifyFinish;\n        this._failureAssetIds = [];\n    }\n    AssetHolder.prototype.request = function () {\n        if (this.waitingAssetsCount === 0)\n            return false;\n        if (this._requested)\n            return true;\n        this._requested = true;\n        this._assetManager.requestAssets(this._assetIds, this);\n        return true;\n    };\n    AssetHolder.prototype.destroy = function () {\n        if (this._requested) {\n            this._assetManager.unrefAssets(this._assets);\n        }\n        this.waitingAssetsCount = 0;\n        this.userData = undefined;\n        this._handlerSet = undefined;\n        this._assetIds = undefined;\n        this._failureAssetIds = undefined;\n        this._requested = false;\n    };\n    AssetHolder.prototype.destroyed = function () {\n        return !this._handlerSet;\n    };\n    /**\n     * @private\n     */\n    AssetHolder.prototype._onAssetError = function (asset, error) {\n        var hs = this._handlerSet;\n        if (this.destroyed() || hs.owner.destroyed())\n            return;\n        var failureInfo = {\n            asset: asset,\n            error: error,\n            cancelRetry: false\n        };\n        hs.handleLoadFailure.call(hs.owner, failureInfo);\n        if (error.retriable && !failureInfo.cancelRetry) {\n            this._assetManager.retryLoad(asset);\n        }\n        else {\n            // game.json に定義されていればゲームを止める。それ以外 (DynamicAsset) では続行。\n            if (this._assetManager.configuration[asset.id]) {\n                hs.handleFinish.call(hs.owner, this, false);\n            }\n            else if (this._alwaysNotifyFinish) {\n                var assetConf = this._peekAssetConfFromAssetId(asset.id);\n                this._failureAssetIds.push(assetConf);\n                this._decrementWaitingAssetCount();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    AssetHolder.prototype._onAssetLoad = function (asset) {\n        var hs = this._handlerSet;\n        if (this.destroyed() || hs.owner.destroyed())\n            return;\n        hs.handleLoad.call(hs.owner, asset);\n        this._assets.push(asset);\n        this._decrementWaitingAssetCount();\n    };\n    /**\n     * @private\n     */\n    AssetHolder.prototype._decrementWaitingAssetCount = function () {\n        --this.waitingAssetsCount;\n        if (this.waitingAssetsCount > 0)\n            return;\n        if (this.waitingAssetsCount < 0)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetHolder#_onAssetLoad: broken waitingAssetsCount\");\n        var hs = this._handlerSet;\n        hs.handleFinish.call(hs.owner, this, true);\n    };\n    /**\n     * @private\n     */\n    AssetHolder.prototype._getFailureAssetIds = function () {\n        return this._failureAssetIds;\n    };\n    /**\n     * @private\n     */\n    AssetHolder.prototype._peekAssetConfFromAssetId = function (id) {\n        for (var _i = 0, _a = this._assetIds; _i < _a.length; _i++) {\n            var assetConf = _a[_i];\n            var assetId = typeof assetConf === \"string\" ? assetConf : assetConf.id;\n            if (id === assetId) {\n                return assetConf;\n            }\n        }\n        throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetHolder#_peekAssetConfFromAssetId: could not peek the asset: \".concat(id));\n    };\n    return AssetHolder;\n}());\nexports.AssetHolder = AssetHolder;\n//# sourceMappingURL=AssetHolder.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AssetHolder.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AssetLoadFailureInfo.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AssetLoadFailureInfo.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=AssetLoadFailureInfo.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AssetLoadFailureInfo.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AssetManager.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AssetManager.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AssetManager = void 0;\nvar BundledScriptAsset_1 = __webpack_require__(/*! ./auxiliary/BundledScriptAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledScriptAsset.js\");\nvar BundledTextAsset_1 = __webpack_require__(/*! ./auxiliary/BundledTextAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledTextAsset.js\");\nvar EmptyBinaryAsset_1 = __webpack_require__(/*! ./auxiliary/EmptyBinaryAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyBinaryAsset.js\");\nvar EmptyGeneratedVectorImageAsset_1 = __webpack_require__(/*! ./auxiliary/EmptyGeneratedVectorImageAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyGeneratedVectorImageAsset.js\");\nvar EmptyVectorImageAsset_1 = __webpack_require__(/*! ./auxiliary/EmptyVectorImageAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyVectorImageAsset.js\");\nvar PartialImageAsset_1 = __webpack_require__(/*! ./auxiliary/PartialImageAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/PartialImageAsset.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar VideoSystem_1 = __webpack_require__(/*! ./VideoSystem */ \"./node_modules/@akashic/akashic-engine/lib/VideoSystem.js\");\n/**\n * @ignore\n */\nvar AssetLoadingInfo = /** @class */ (function () {\n    function AssetLoadingInfo(asset, handler) {\n        this.asset = asset;\n        this.handlers = [handler];\n        this.errorCount = 0;\n        this.loading = false;\n    }\n    return AssetLoadingInfo;\n}());\nfunction normalizeAudioSystemConfMap(confMap) {\n    if (confMap === void 0) { confMap = {}; }\n    var systemDefaults = {\n        music: {\n            loop: true,\n            hint: { streaming: true }\n        },\n        sound: {\n            loop: false,\n            hint: { streaming: false }\n        }\n    };\n    for (var key in systemDefaults) {\n        if (!(key in confMap)) {\n            confMap[key] = systemDefaults[key];\n        }\n    }\n    return confMap;\n}\nfunction normalizeCommonArea(area) {\n    return Array.isArray(area) ? { x: area[0], y: area[1], width: area[2], height: area[3] } : area;\n}\n/**\n * パスパターンを関数に変換する。\n *\n * パスパターンは、パス文字列、または0個以上の `**`, `*`, `?` を含むパス文字列である。\n * (実装の単純化のため、いわゆる glob のうちよく使われそうなものだけをサポートしている。)\n * 詳細は `AssetAccessor#getAllImages()` の仕様を参照のこと。\n *\n * 戻り値は、文字列一つを受け取り、パターンにマッチするか否かを返す関数。\n *\n * @param pattern パターン文字列\n */\nfunction patternToFilter(pattern) {\n    var parserRe = /([^\\*\\\\\\?]*)(\\\\\\*|\\\\\\?|\\?|\\*(?!\\*)|\\*\\*\\/|$)/g;\n    //                [----A-----][--------------B---------------]\n    // A: パターンの特殊文字でない文字の塊。そのままマッチさせる(ためにエスケープして正規表現にする)\n    // B: パターンの特殊文字一つ(*, ** など)かそのエスケープ。patternSpecialsTable で対応する正規表現に変換\n    var patternSpecialsTable = {\n        \"\": \"\", // 入力末尾で parserRe の B 部分が $ にマッチして空文字列になることに対応\n        \"\\\\*\": \"\\\\*\",\n        \"\\\\?\": \"\\\\?\",\n        \"*\": \"[^/]*\",\n        \"?\": \"[^/]\",\n        \"**/\": \"(?:^/)?(?:[^/]+/)*\"\n        //      [--C--][----D----]\n        // C: 行頭の `/` (行頭でなければないので ? つき)\n        // D: ディレクトリ一つ分(e.g. \"foo/\")が0回以上\n    };\n    var regExpSpecialsRe = /[\\\\^$.*+?()[\\]{}|]/g;\n    function escapeRegExp(s) {\n        return s.replace(regExpSpecialsRe, \"\\\\$&\");\n    }\n    var code = \"\";\n    for (var match = parserRe.exec(pattern); match && match[0] !== \"\"; match = parserRe.exec(pattern)) {\n        code += escapeRegExp(match[1]) + patternSpecialsTable[match[2]];\n    }\n    var re = new RegExp(\"^\" + code + \"$\");\n    return function (path) { return re.test(path); };\n}\n/**\n * `Asset` を管理するクラス。\n *\n * このクラスのインスタンスは `Game` に一つデフォルトで存在する(デフォルトアセットマネージャ)。\n * デフォルトアセットマネージャは、game.json に記述された通常のアセットを読み込むために利用される。\n *\n * ゲーム開発者は、game.json に記述のないリソースを取得するために、このクラスのインスタンスを独自に生成してよい。\n */\nvar AssetManager = /** @class */ (function () {\n    /**\n     * `AssetManager` のインスタンスを生成する。\n     *\n     * @param gameParams このインスタンスが属するゲーム。\n     * @param conf このアセットマネージャに与えるアセット定義。game.json の `\"assets\"` に相当。\n     * @param audioSystemConfMap このアセットマネージャに与えるオーディオシステムの宣言。\n     * @param moduleMainScripts このアセットマネージャに与える require() 解決用のエントリポイント。\n     */\n    function AssetManager(gameParams, conf, audioSystemConfMap, moduleMainScripts, moduleMainPaths) {\n        this._resourceFactory = gameParams.resourceFactory;\n        this._audioSystemManager = gameParams.audio;\n        this._defaultAudioSystemId = gameParams.defaultAudioSystemId;\n        this._audioSystemConfMap = normalizeAudioSystemConfMap(audioSystemConfMap);\n        this.configuration = this._normalize(conf || {});\n        this._assets = {};\n        this._virtualPathToIdTable = {};\n        this._liveAssetVirtualPathTable = {};\n        this._liveAssetPathTable = {};\n        this._moduleMainScripts = moduleMainScripts ? moduleMainScripts : {};\n        this._moduleMainPaths = moduleMainPaths !== null && moduleMainPaths !== void 0 ? moduleMainPaths : null;\n        this._refCounts = {};\n        this._loadings = {};\n        this._generatedAssetCount = 0;\n        this._assetBundle = null;\n        var assetIds = Object.keys(this.configuration);\n        for (var i = 0; i < assetIds.length; ++i) {\n            var assetId = assetIds[i];\n            var conf_1 = this.configuration[assetId];\n            this._virtualPathToIdTable[conf_1.virtualPath] = assetId; // virtualPath の存在は _normalize() で確認済みのため 非 null アサーションとする\n        }\n    }\n    /**\n     * このインスタンスを破棄する。\n     */\n    AssetManager.prototype.destroy = function () {\n        var assetIds = Object.keys(this._refCounts);\n        for (var i = 0; i < assetIds.length; ++i) {\n            this._releaseAsset(assetIds[i]);\n        }\n        this.configuration = undefined;\n        this._assets = undefined;\n        this._liveAssetVirtualPathTable = undefined;\n        this._liveAssetPathTable = undefined;\n        this._refCounts = undefined;\n        this._loadings = undefined;\n        this._assetBundle = undefined;\n    };\n    /**\n     * このインスタンスが破棄済みであるかどうかを返す。\n     */\n    AssetManager.prototype.destroyed = function () {\n        return this._assets === undefined;\n    };\n    /**\n     * `Asset` の読み込みを再試行する。\n     *\n     * 引数 `asset` は読み込みの失敗が (`Scene#assetLoadFail` で) 通知されたアセットでなければならない。\n     * @param asset 読み込みを再試行するアセット\n     */\n    AssetManager.prototype.retryLoad = function (asset) {\n        if (!this._loadings.hasOwnProperty(asset.id))\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#retryLoad: invalid argument.\");\n        var loadingInfo = this._loadings[asset.id];\n        if (loadingInfo.errorCount > AssetManager.MAX_ERROR_COUNT) {\n            // DynamicAsset はエラーが規定回数超えた場合は例外にせず諦める。\n            if (!this.configuration[asset.id])\n                return;\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#retryLoad: too many retrying.\");\n        }\n        if (!loadingInfo.loading) {\n            loadingInfo.loading = true;\n            asset._load(this);\n        }\n    };\n    /**\n     * グローバルアセットのIDを全て返す。\n     */\n    AssetManager.prototype.globalAssetIds = function () {\n        var ret = [];\n        var conf = this.configuration;\n        for (var p in conf) {\n            if (!conf.hasOwnProperty(p))\n                continue;\n            if (conf[p].global)\n                ret.push(p);\n        }\n        return ret;\n    };\n    /**\n     * プリロードすべきスクリプトアセットの path を全て返す。\n     */\n    AssetManager.prototype.preloadScriptAssetPaths = function () {\n        var assetPaths = [];\n        if (this._assetBundle) {\n            assetPaths.push.apply(assetPaths, Object.values(this._assetBundle.assets)\n                .filter(function (conf) { return conf.type === \"script\" && conf.preload; })\n                .map(function (conf) { return conf.path; }));\n        }\n        assetPaths.push.apply(assetPaths, Object.values(this.configuration)\n            .filter(function (conf) { return conf.type === \"script\" && conf.global && conf.preload; })\n            .map(function (conf) { return conf.virtualPath; }) // この箇所ではすでに virtualPath が補完されていることが前提\n        );\n        assetPaths = assetPaths.map(function (path) { return (path.startsWith(\"./\") ? path : \"./\".concat(path)); });\n        return assetPaths;\n    };\n    /**\n     * パターンまたはフィルタに合致するパスを持つアセットIDを全て返す。\n     *\n     * 戻り値は読み込み済みでないアセットのIDを含むことに注意。\n     * 読み込み済みのアセットにアクセスする場合は、 `peekAllLiveAssetsByPattern()` を利用すること。\n     *\n     * @param patternOrFilters パターンまたはフィルタ。仕様は `AssetAccessor#getAllImages()` を参照\n     */\n    AssetManager.prototype.resolvePatternsToAssetIds = function (patternOrFilters) {\n        if (patternOrFilters.length === 0)\n            return [];\n        var vpaths = Object.keys(this._virtualPathToIdTable);\n        var ret = [];\n        for (var i = 0; i < patternOrFilters.length; ++i) {\n            var patternOrFilter = patternOrFilters[i];\n            var filter = typeof patternOrFilter === \"string\" ? patternToFilter(this._replaceModulePathToAbsolute(patternOrFilter)) : patternOrFilter;\n            for (var j = 0; j < vpaths.length; ++j) {\n                var vpath = vpaths[j];\n                var accessorPath = \"/\" + vpath; // virtualPath に \"/\" を足すと accessorPath という仕様\n                if (filter(accessorPath))\n                    ret.push(this._virtualPathToIdTable[vpath]);\n            }\n        }\n        return ret;\n    };\n    /**\n     * アセットの取得を要求する。\n     *\n     * 要求したアセットが読み込み済みでない場合、読み込みが行われる。\n     * 取得した結果は `handler` を通して通知される。\n     * ゲーム開発者はこのメソッドを呼び出してアセットを取得した場合、\n     * 同じアセットID(または取得したアセット)で `unrefAsset()` を呼び出さなければならない。\n     *\n     * @param assetIdOrConf 要求するアセットのIDまたは設定\n     * @param handler 要求結果を受け取るハンドラ\n     */\n    AssetManager.prototype.requestAsset = function (assetIdOrConf, handler) {\n        var assetId;\n        if (typeof assetIdOrConf === \"string\") {\n            assetId = assetIdOrConf;\n        }\n        else if (\"uri\" in assetIdOrConf) {\n            assetId = assetIdOrConf.id;\n            assetIdOrConf = this._normalizeAssetBaseDeclaration(assetId, Object.create(assetIdOrConf));\n        }\n        else {\n            // TODO: ノーマライズ処理を _normalizeAssetBaseDeclaration() に統合すべき\n            assetId = assetIdOrConf.id;\n        }\n        var waiting = false;\n        var loadingInfo;\n        if (this._assets.hasOwnProperty(assetId)) {\n            ++this._refCounts[assetId];\n            handler._onAssetLoad(this._assets[assetId]);\n        }\n        else if (this._loadings.hasOwnProperty(assetId)) {\n            loadingInfo = this._loadings[assetId];\n            loadingInfo.handlers.push(handler);\n            ++this._refCounts[assetId];\n            waiting = true;\n        }\n        else {\n            var system = this._getAudioSystem(assetIdOrConf);\n            var audioAsset = system === null || system === void 0 ? void 0 : system.getDestroyRequestedAsset(assetId);\n            if (system && audioAsset) {\n                system.cancelRequestDestroy(audioAsset);\n                this._addAssetToTables(audioAsset);\n                this._refCounts[assetId] = 1;\n                handler._onAssetLoad(audioAsset);\n            }\n            else {\n                var a = this._createAssetFor(assetIdOrConf);\n                loadingInfo = new AssetLoadingInfo(a, handler);\n                this._loadings[assetId] = loadingInfo;\n                this._refCounts[assetId] = 1;\n                waiting = true;\n                loadingInfo.loading = true;\n                a._load(this);\n            }\n        }\n        return waiting;\n    };\n    /**\n     * アセットの参照カウントを減らす。\n     * 引数の各要素で `unrefAsset()` を呼び出す。\n     *\n     * @param assetOrId 参照カウントを減らすアセットまたはアセットID\n     */\n    AssetManager.prototype.unrefAsset = function (assetOrId) {\n        var assetId = typeof assetOrId === \"string\" ? assetOrId : assetOrId.id;\n        if (--this._refCounts[assetId] > 0)\n            return;\n        this._releaseAsset(assetId);\n    };\n    /**\n     * 複数のアセットの取得を要求する。\n     * 引数の各要素で `requestAsset()` を呼び出す。\n     *\n     * @param assetIdOrConfs 取得するアセットのIDまたはアセット定義\n     * @param handler 取得の結果を受け取るハンドラ\n     */\n    AssetManager.prototype.requestAssets = function (assetIdOrConfs, handler) {\n        var waitingCount = 0;\n        for (var i = 0, len = assetIdOrConfs.length; i < len; ++i) {\n            if (this.requestAsset(assetIdOrConfs[i], handler)) {\n                ++waitingCount;\n            }\n        }\n        return waitingCount;\n    };\n    /**\n     * 複数のアセットを解放する。\n     * 引数の各要素で `unrefAsset()` を呼び出す。\n     *\n     * @param assetOrIds 参照カウントを減らすアセットまたはアセットID\n     * @private\n     */\n    AssetManager.prototype.unrefAssets = function (assetOrIds) {\n        for (var i = 0, len = assetOrIds.length; i < len; ++i) {\n            this.unrefAsset(assetOrIds[i]);\n        }\n    };\n    /**\n     * アクセッサパスで指定された読み込み済みのアセットを返す。\n     *\n     * ここでアクセッサパスとは、 `AssetAccessor` が使うパス\n     * (game.jsonのディレクトリをルート (`/`) とする、 `/` 区切りの絶対パス形式の仮想パス)である。\n     * これは `/` を除けばアセットの仮想パス (virtualPath) と同一である。\n     *\n     * @param accessorPath 取得するアセットのアクセッサパス\n     * @param type 取得するアセットのタイプ。対象のアセットと合致しない場合、エラー\n     */\n    AssetManager.prototype.peekLiveAssetByAccessorPath = function (accessorPath, type) {\n        accessorPath = this._replaceModulePathToAbsolute(accessorPath);\n        if (accessorPath[0] !== \"/\")\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#peekLiveAssetByAccessorPath(): accessorPath must start with '/'\");\n        var vpath = accessorPath.slice(1); // accessorPath から \"/\" を削ると virtualPath という仕様\n        var asset = this._liveAssetVirtualPathTable[vpath];\n        if (!asset || type !== asset.type)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#peekLiveAssetByAccessorPath(): No \".concat(type, \" asset for \").concat(accessorPath));\n        return asset; // asset.typeを直前で確認しているので確実にTになるが、型推論できないのでキャストする\n    };\n    /**\n     * アセットIDで指定された読み込み済みのアセットを返す。\n     *\n     * @param assetId 取得するアセットのID\n     * @param type 取得するアセットのタイプ。対象のアセットと合致しない場合、エラー\n     */\n    AssetManager.prototype.peekLiveAssetById = function (assetId, type) {\n        var asset = this._assets[assetId];\n        if (!asset || type !== asset.type)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#peekLiveAssetById(): No \".concat(type, \" asset for id \").concat(assetId));\n        return asset; // asset.typeを直前で確認しているので確実にTになるが、型推論できないのでキャストする\n    };\n    /**\n     * パターンまたはフィルタにマッチするパスを持つ、指定されたタイプの全読み込み済みアセットを返す。\n     *\n     * 戻り値の要素の順序は保証されない。\n     * パターンとフィルタについては `AssetAccessor#getAllImages()` の仕様を参照のこと。\n     *\n     * @param patternOrFilter 取得するアセットのパスパターンまたはフィルタ\n     * @param type 取得するアセットのタイプ。 null の場合、全てのタイプとして扱われる。\n     */\n    AssetManager.prototype.peekAllLiveAssetsByPattern = function (patternOrFilter, type) {\n        var vpaths = Object.keys(this._liveAssetVirtualPathTable);\n        var filter = typeof patternOrFilter === \"string\" ? patternToFilter(this._replaceModulePathToAbsolute(patternOrFilter)) : patternOrFilter;\n        var ret = [];\n        for (var i = 0; i < vpaths.length; ++i) {\n            var vpath = vpaths[i];\n            var asset = this._liveAssetVirtualPathTable[vpath];\n            if (type && asset.type !== type)\n                continue;\n            var accessorPath = \"/\" + vpath; // virtualPath に \"/\" を足すと accessorPath という仕様\n            // typeがT[\"type\"]であればasset.typeを直前で確認しているので確実にTになるが、typeがnullの時にassetがTではない可能性がある\n            if (filter(accessorPath))\n                ret.push(asset);\n        }\n        return ret;\n    };\n    /**\n     * アセットIDから読み込み済みのアクセッサパス返す。\n     * 当該のアセットが読み込まれていない場合、 null を返す。\n     *\n     * @param assetId 取得するアセットのID\n     */\n    AssetManager.prototype.resolveAccessorPath = function (assetId) {\n        var asset = this._assets[assetId];\n        if (!asset)\n            return null;\n        var virtualPath = this._liveAssetPathTable[asset.path];\n        if (!virtualPath)\n            return null;\n        return \"/\" + virtualPath;\n    };\n    /**\n     * アセットバンドルを設定する。\n     *\n     * @param assetBundle アセットバンドル\n     */\n    AssetManager.prototype.setAssetBundle = function (assetBundle) {\n        this._assetBundle = assetBundle;\n    };\n    /**\n     * @ignore\n     */\n    AssetManager.prototype._normalize = function (configuration) {\n        var ret = {};\n        if (!(configuration instanceof Object))\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: invalid arguments.\");\n        for (var p in configuration) {\n            if (!configuration.hasOwnProperty(p))\n                continue;\n            var conf = this._normalizeAssetBaseDeclaration(p, Object.create(configuration[p]));\n            if (!conf.path) {\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: No path given for: \" + p);\n            }\n            if (!conf.virtualPath) {\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: No virtualPath given for: \" + p);\n            }\n            if (!conf.global)\n                conf.global = false;\n            ret[p] = conf;\n        }\n        return ret;\n    };\n    /**\n     * @private\n     * @ignore\n     */\n    AssetManager.prototype._normalizeAssetBaseDeclaration = function (assetId, conf) {\n        if (!conf.type) {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: No type given for: \" + assetId);\n        }\n        if (conf.type === \"image\") {\n            if (typeof conf.width !== \"number\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong width given for the image asset: \" + assetId);\n            if (typeof conf.height !== \"number\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong height given for the image asset: \" + assetId);\n            conf.slice = conf.slice ? normalizeCommonArea(conf.slice) : undefined;\n        }\n        if (conf.type === \"audio\") {\n            // durationというメンバは後から追加したため、古いgame.jsonではundefinedになる場合がある\n            if (conf.duration === undefined)\n                conf.duration = 0;\n            var audioSystemConf = this._audioSystemConfMap[conf.systemId];\n            if (conf.loop === undefined) {\n                conf.loop = !!audioSystemConf && !!audioSystemConf.loop;\n            }\n            if (conf.hint === undefined) {\n                conf.hint = audioSystemConf ? audioSystemConf.hint : {};\n            }\n            if (conf.systemId !== \"music\" && conf.systemId !== \"sound\") {\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong systemId given for the audio asset: \" + assetId);\n            }\n        }\n        if (conf.type === \"video\") {\n            if (!conf.useRealSize) {\n                if (typeof conf.width !== \"number\")\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong width given for the video asset: \" + assetId);\n                if (typeof conf.height !== \"number\")\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong height given for the video asset: \" + assetId);\n                conf.useRealSize = false;\n            }\n        }\n        if (conf.type === \"vector-image\") {\n            if (typeof conf.width !== \"number\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong width given for the vector-image asset: \" + assetId);\n            if (typeof conf.height !== \"number\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_normalize: wrong height given for the vector-image asset: \" + assetId);\n        }\n        return conf;\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._createAssetFor = function (idOrConf) {\n        var _a;\n        var id;\n        var uri;\n        var conf;\n        if (this._assetBundle && typeof idOrConf === \"string\") {\n            var id_1 = idOrConf;\n            var conf_2 = this._assetBundle.assets[id_1];\n            var type_1 = conf_2 === null || conf_2 === void 0 ? void 0 : conf_2.type;\n            switch (type_1) {\n                case \"script\":\n                    return new BundledScriptAsset_1.BundledScriptAsset(__assign({ id: id_1 }, conf_2));\n                case \"text\":\n                    return new BundledTextAsset_1.BundledTextAsset(__assign({ id: id_1 }, conf_2));\n            }\n        }\n        if (typeof idOrConf === \"string\") {\n            id = idOrConf;\n            conf = this.configuration[id];\n            uri = this.configuration[id].path;\n        }\n        else if (\"uri\" in idOrConf) {\n            id = idOrConf.id;\n            conf = idOrConf;\n            uri = idOrConf.uri;\n        }\n        else {\n            return this._createGeneratedAssetFor(idOrConf);\n        }\n        var resourceFactory = this._resourceFactory;\n        if (!conf)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_createAssetFor: unknown asset ID: \" + id);\n        var type = conf.type;\n        switch (type) {\n            case \"image\":\n                // _normalize() で conf.slice を CommonArea | undefined にしているので本来は不要な分岐だが、型の担保のためにチェックを行う\n                if (Array.isArray(conf.slice)) {\n                    throw new Error(\"AssetManager#_createAssetFor: array type of configuration.slice is not yet supported\");\n                }\n                var asset = conf.slice\n                    ? new PartialImageAsset_1.PartialImageAsset(resourceFactory, id, uri, conf.width, conf.height, conf.slice)\n                    : resourceFactory.createImageAsset(id, uri, conf.width, conf.height);\n                asset.initialize(conf.hint);\n                return asset;\n            case \"audio\":\n                var system = conf.systemId\n                    ? this._audioSystemManager[conf.systemId]\n                    : this._audioSystemManager[this._defaultAudioSystemId];\n                return resourceFactory.createAudioAsset(id, uri, conf.duration, system, !!conf.loop, (_a = conf.hint) !== null && _a !== void 0 ? _a : {}, conf.offset);\n            case \"text\":\n                return resourceFactory.createTextAsset(id, uri);\n            case \"script\":\n                return resourceFactory.createScriptAsset(id, uri, conf.exports);\n            case \"video\":\n                // VideoSystemはまだ中身が定義されていなが、将来のためにVideoAssetにVideoSystemを渡すという体裁だけが整えられている。\n                // 以上を踏まえ、ここでは簡単のために都度新たなVideoSystemインスタンスを生成している。\n                var videoSystem = new VideoSystem_1.VideoSystem();\n                return resourceFactory.createVideoAsset(id, uri, conf.width, conf.height, videoSystem, !!conf.loop, !!conf.useRealSize);\n            case \"vector-image\":\n                if (!resourceFactory.createVectorImageAsset) {\n                    return new EmptyVectorImageAsset_1.EmptyVectorImageAsset(id, uri, conf.width, conf.height, conf.hint);\n                }\n                return resourceFactory.createVectorImageAsset(id, uri, conf.width, conf.height, conf.hint);\n            case \"binary\":\n                if (!resourceFactory.createBinaryAsset) {\n                    return new EmptyBinaryAsset_1.EmptyBinaryAsset(id, uri);\n                }\n                return resourceFactory.createBinaryAsset(id, uri);\n            default:\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssertionError#_createAssetFor: unknown asset type \" + type + \" for asset ID: \" + id);\n        }\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._createGeneratedAssetFor = function (conf) {\n        var resourceFactory = this._resourceFactory;\n        var path = \"%akashic%/generated-asset-\".concat(this._generatedAssetCount++);\n        switch (conf.type) {\n            case \"vector-image\":\n                if (!resourceFactory.createVectorImageAssetFromString) {\n                    return new EmptyGeneratedVectorImageAsset_1.EmptyGeneratedVectorImageAsset(conf.id, path, conf.data);\n                }\n                return resourceFactory.createVectorImageAssetFromString(conf.id, path, conf.data);\n            default:\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssertionError#_createFromAssetGenerationFor: unsupported asset type \".concat(conf.type, \" for asset ID: \").concat(conf.id));\n        }\n    };\n    /**\n     * @ignore\n     */\n    AssetManager.prototype._releaseAsset = function (assetId) {\n        var asset = this._assets[assetId] || (this._loadings[assetId] && this._loadings[assetId].asset);\n        var path = null;\n        if (asset) {\n            path = asset.path;\n            if (asset.inUse()) {\n                if (asset.type === \"audio\") {\n                    asset._system.requestDestroy(asset);\n                }\n                else if (asset.type === \"video\") {\n                    // NOTE: 一旦再生完了を待たずに破棄することにする\n                    // TODO: 再生中の動画を破棄するタイミングをどのように扱うか検討し実装\n                    asset.destroy();\n                }\n                else {\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#unrefAssets: Unsupported in-use \" + asset.id);\n                }\n            }\n            else {\n                asset.destroy();\n            }\n        }\n        delete this._refCounts[assetId];\n        delete this._loadings[assetId];\n        delete this._assets[assetId];\n        if (this.configuration[assetId]) {\n            var virtualPath = this.configuration[assetId].virtualPath;\n            if (virtualPath && this._liveAssetVirtualPathTable.hasOwnProperty(virtualPath))\n                delete this._liveAssetVirtualPathTable[virtualPath];\n            if (path && this._liveAssetPathTable.hasOwnProperty(path))\n                delete this._liveAssetPathTable[path];\n        }\n    };\n    /**\n     * 現在ロード中のアセットの数。(デバッグ用; 直接の用途はない)\n     * @private\n     */\n    AssetManager.prototype._countLoadingAsset = function () {\n        return Object.keys(this._loadings).length;\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._onAssetError = function (asset, error) {\n        // ロード中に Scene が破棄されていた場合などで、asset が破棄済みになることがある\n        if (this.destroyed() || asset.destroyed())\n            return;\n        var loadingInfo = this._loadings[asset.id];\n        var hs = loadingInfo.handlers;\n        loadingInfo.loading = false;\n        ++loadingInfo.errorCount;\n        if (loadingInfo.errorCount > AssetManager.MAX_ERROR_COUNT && error.retriable) {\n            error = ExceptionFactory_1.ExceptionFactory.createAssetLoadError(\"Retry limit exceeded\", false, null, error);\n        }\n        if (!error.retriable)\n            delete this._loadings[asset.id];\n        for (var i = 0; i < hs.length; ++i)\n            hs[i]._onAssetError(asset, error, this.retryLoad.bind(this));\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._onAssetLoad = function (asset) {\n        // ロード中に Scene が破棄されていた場合などで、asset が破棄済みになることがある\n        if (this.destroyed() || asset.destroyed())\n            return;\n        var loadingInfo = this._loadings[asset.id];\n        loadingInfo.loading = false;\n        delete this._loadings[asset.id];\n        this._addAssetToTables(asset);\n        var hs = loadingInfo.handlers;\n        for (var i = 0; i < hs.length; ++i)\n            hs[i]._onAssetLoad(asset);\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._replaceModulePathToAbsolute = function (accessorPath) {\n        if (accessorPath[0] === \"/\" ||\n            accessorPath[0] === \"*\" // パスに `**/*` が指定された場合\n        ) {\n            return accessorPath;\n        }\n        for (var moduleName in this._moduleMainScripts) {\n            if (!this._moduleMainScripts.hasOwnProperty(moduleName))\n                continue;\n            if (accessorPath.lastIndexOf(moduleName, 0) === 0) {\n                return \"/node_modules/\" + accessorPath;\n            }\n        }\n        return accessorPath;\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._getAudioSystem = function (assetIdOrConf) {\n        var conf = null;\n        if (typeof assetIdOrConf === \"string\") {\n            conf = this.configuration[assetIdOrConf];\n        }\n        else if (\"uri\" in assetIdOrConf) {\n            var dynConf = assetIdOrConf;\n            conf = dynConf;\n        }\n        else {\n            // NOTE: AssetGeneration では一旦非サポート。\n        }\n        if (!conf) {\n            return null;\n        }\n        if (conf.type !== \"audio\") {\n            return null;\n        }\n        return conf.systemId ? this._audioSystemManager[conf.systemId] : this._audioSystemManager[this._defaultAudioSystemId];\n    };\n    /**\n     * @private\n     */\n    AssetManager.prototype._addAssetToTables = function (asset) {\n        this._assets[asset.id] = asset;\n        var path;\n        // DynamicAsset の場合は configuration に書かれていないので以下の判定が偽になる\n        if (this.configuration[asset.id]) {\n            path = this.configuration[asset.id].virtualPath; // virtualPath の存在は _normalize() で確認済みのため 非 null アサーションとする\n        }\n        else if (this._assetBundle && this._assetBundle.assets[asset.id]) {\n            path = this._assetBundle.assets[asset.id].path;\n        }\n        if (!path)\n            return;\n        if (!this._liveAssetVirtualPathTable.hasOwnProperty(path)) {\n            this._liveAssetVirtualPathTable[path] = asset;\n        }\n        else {\n            if (this._liveAssetVirtualPathTable[path].path !== asset.path)\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AssetManager#_onAssetLoad(): duplicated asset path\");\n        }\n        if (!this._liveAssetPathTable.hasOwnProperty(asset.path))\n            this._liveAssetPathTable[asset.path] = path;\n    };\n    AssetManager.MAX_ERROR_COUNT = 3;\n    return AssetManager;\n}());\nexports.AssetManager = AssetManager;\n//# sourceMappingURL=AssetManager.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AssetManager.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AssetManagerLoadHandler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AssetManagerLoadHandler.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=AssetManagerLoadHandler.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AssetManagerLoadHandler.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AudioPlayContext.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AudioPlayContext.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioPlayContext = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar AudioPlayContext = /** @class */ (function () {\n    function AudioPlayContext(param) {\n        var _a;\n        /**\n         * `play()` が呼び出された時に通知される `Trigger` 。\n         */\n        this.onPlay = new trigger_1.Trigger();\n        /**\n         * `stop()` が呼び出された時に通知される `Trigger` 。\n         */\n        this.onStop = new trigger_1.Trigger();\n        this.asset = param.asset;\n        this._system = param.system;\n        this._resourceFactory = param.resourceFactory;\n        this._volume = (_a = param.volume) !== null && _a !== void 0 ? _a : 1.0;\n        this._id = param.id;\n        this._systemId = param.systemId;\n        this._player = this._createAudioPlayer();\n        this.asset.onDestroyed.addOnce(this.stop, this);\n    }\n    Object.defineProperty(AudioPlayContext.prototype, \"volume\", {\n        get: function () {\n            return this._volume;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AudioPlayContext.prototype.play = function () {\n        this._player.play(this.asset);\n    };\n    AudioPlayContext.prototype.stop = function () {\n        this._player.stop();\n    };\n    AudioPlayContext.prototype.changeVolume = function (vol) {\n        this._volume = vol;\n        this._player.changeVolume(vol);\n    };\n    /**\n     * @private\n     */\n    AudioPlayContext.prototype._startSuppress = function () {\n        if (this._systemId === \"music\") {\n            this._player.changeVolume(0);\n            return;\n        }\n        this.stop();\n    };\n    /**\n     * @private\n     */\n    AudioPlayContext.prototype._endSuppress = function () {\n        if (this._systemId === \"music\") {\n            this._player.changeVolume(this._volume);\n            return;\n        }\n    };\n    AudioPlayContext.prototype._createAudioPlayer = function () {\n        var audioPlayer = this._resourceFactory.createAudioPlayer(this._system);\n        audioPlayer.changeVolume(this._volume);\n        audioPlayer.onPlay.add(this.onPlay.fire, this.onPlay);\n        audioPlayer.onStop.add(this.onStop.fire, this.onStop);\n        return audioPlayer;\n    };\n    return AudioPlayContext;\n}());\nexports.AudioPlayContext = AudioPlayContext;\n//# sourceMappingURL=AudioPlayContext.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AudioPlayContext.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AudioSystem.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AudioSystem.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SoundAudioSystem = exports.MusicAudioSystem = exports.AudioSystem = void 0;\nvar AudioPlayContext_1 = __webpack_require__(/*! ./AudioPlayContext */ \"./node_modules/@akashic/akashic-engine/lib/AudioPlayContext.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar WeakRefKVS_1 = __webpack_require__(/*! ./WeakRefKVS */ \"./node_modules/@akashic/akashic-engine/lib/WeakRefKVS.js\");\nvar AudioSystem = /** @class */ (function () {\n    function AudioSystem(param) {\n        this.id = param.id;\n        this._volume = param.volume || 1;\n        this._destroyRequestedAssets = {};\n        this._explicitMuted = param.muted || false;\n        this._suppressed = false;\n        this._muted = false;\n        this._contextMap = new WeakRefKVS_1.WeakRefKVS();\n        this._contextCount = 0;\n        this._resourceFactory = param.resourceFactory;\n        this._updateMuted();\n    }\n    Object.defineProperty(AudioSystem.prototype, \"volume\", {\n        // volumeの変更時には通知が必要なのでアクセサを使う。\n        // 呼び出し頻度が少ないため許容。\n        get: function () {\n            return this._volume;\n        },\n        set: function (value) {\n            if (value < 0 || value > 1 || isNaN(value) || typeof value !== \"number\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AudioSystem#volume: expected: 0.0-1.0, actual: \" + value);\n            this._volume = value;\n            this._onVolumeChanged();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AudioSystem.prototype.play = function (asset) {\n        var context = this.create(asset);\n        context.play();\n        return context;\n    };\n    AudioSystem.prototype.create = function (asset) {\n        // TODO: 依存関係の見直し\n        var context = new AudioPlayContext_1.AudioPlayContext({\n            id: this._generateAudioPlayContextId(),\n            resourceFactory: this._resourceFactory,\n            asset: asset,\n            system: this,\n            systemId: this.id,\n            volume: 1.0\n        });\n        if (this._contextCount % this._contentMapCleaningFrequency === 0) {\n            this._contextMap.clean();\n        }\n        this._contextMap.set(context._id, context);\n        return context;\n    };\n    AudioSystem.prototype.stopAll = function () {\n        for (var _i = 0, _a = this._contextMap.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var ctx = this._contextMap.get(key);\n            ctx === null || ctx === void 0 ? void 0 : ctx.stop();\n        }\n        this._contextMap.clean();\n    };\n    AudioSystem.prototype.requestDestroy = function (asset) {\n        this._destroyRequestedAssets[asset.id] = asset;\n    };\n    /**\n     * `this.requestDestroy()` により破棄要求されているアセットの破棄を取り消す。\n     * @param asset アセット。\n     */\n    // NOTE: akashic-engine の独自仕様\n    AudioSystem.prototype.cancelRequestDestroy = function (asset) {\n        delete this._destroyRequestedAssets[asset.id];\n    };\n    /**\n     * `this.requestDestroy()` により破棄要求されていて、まだ実際には破棄されていないアセット。\n     * 対象のアセットが破棄要求されていなければ `null` を返す。\n     * @param assetId アセットID。\n     */\n    // NOTE: akashic-engine の独自仕様\n    AudioSystem.prototype.getDestroyRequestedAsset = function (assetId) {\n        if (this._destroyRequestedAssets.hasOwnProperty(assetId)) {\n            return this._destroyRequestedAssets[assetId];\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._reset = function () {\n        this.stopAll();\n        this._volume = 1;\n        this._destroyRequestedAssets = {};\n        this._muted = false;\n        this._suppressed = false;\n        this._explicitMuted = false;\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._setMuted = function (value) {\n        var before = this._explicitMuted;\n        this._explicitMuted = !!value;\n        if (this._explicitMuted !== before) {\n            this._updateMuted();\n            this._onMutedChanged();\n        }\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._setPlaybackRate = function (value) {\n        if (value < 0 || isNaN(value) || typeof value !== \"number\")\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AudioSystem#playbackRate: expected: greater or equal to 0.0, actual: \" + value);\n        this._suppressed = value !== 1.0;\n        this._updateMuted();\n        this._onPlaybackRateChanged();\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._updateMuted = function () {\n        this._muted = this._explicitMuted || this._suppressed;\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._generateAudioPlayContextId = function () {\n        return \"\".concat(this.id, \"-\").concat(this._contextCount++);\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._startSuppress = function () {\n        // NOTE: 既存の AudioSystem は playbackRate に 1.0 以外を指定するとミュートとなる\n        this._setPlaybackRate(100);\n        for (var _i = 0, _a = this._contextMap.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var ctx = this._contextMap.get(key);\n            ctx === null || ctx === void 0 ? void 0 : ctx._startSuppress();\n        }\n    };\n    /**\n     * @private\n     */\n    AudioSystem.prototype._endSuppress = function () {\n        // NOTE: 既存の AudioSystem は playbackRate に 1.0 を指定するとミュートが解除される\n        this._setPlaybackRate(1.0);\n        for (var _i = 0, _a = this._contextMap.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var ctx = this._contextMap.get(key);\n            ctx === null || ctx === void 0 ? void 0 : ctx._endSuppress();\n        }\n    };\n    return AudioSystem;\n}());\nexports.AudioSystem = AudioSystem;\nvar MusicAudioSystem = /** @class */ (function (_super) {\n    __extends(MusicAudioSystem, _super);\n    function MusicAudioSystem(param) {\n        var _this = _super.call(this, param) || this;\n        /**\n         * @private\n         */\n        _this._contentMapCleaningFrequency = 5;\n        _this._player = undefined;\n        return _this;\n    }\n    Object.defineProperty(MusicAudioSystem.prototype, \"player\", {\n        // Note: 音楽のないゲームの場合に無駄なインスタンスを作るのを避けるため、アクセサを使う\n        get: function () {\n            if (!this._player) {\n                this._player = this._resourceFactory.createAudioPlayer(this);\n                this._player.onPlay.add(this._handlePlay, this);\n                this._player.onStop.add(this._handleStop, this);\n            }\n            return this._player;\n        },\n        set: function (v) {\n            this._player = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MusicAudioSystem.prototype.findPlayers = function (asset) {\n        if (this.player.currentAudio && this.player.currentAudio.id === asset.id)\n            return [this.player];\n        return [];\n    };\n    MusicAudioSystem.prototype.createPlayer = function () {\n        return this.player;\n    };\n    MusicAudioSystem.prototype.stopAll = function () {\n        _super.prototype.stopAll.call(this);\n        if (!this._player)\n            return;\n        this._player.stop();\n    };\n    /**\n     * @private\n     */\n    MusicAudioSystem.prototype._reset = function () {\n        _super.prototype._reset.call(this);\n        if (this._player) {\n            this._player.onPlay.remove(this._handlePlay, this);\n            this._player.onStop.remove(this._handleStop, this);\n        }\n        this._player = undefined;\n    };\n    /**\n     * @private\n     */\n    MusicAudioSystem.prototype._onVolumeChanged = function () {\n        this.player._notifyVolumeChanged();\n    };\n    /**\n     * @private\n     */\n    MusicAudioSystem.prototype._onMutedChanged = function () {\n        this.player._changeMuted(this._muted);\n    };\n    /**\n     * @private\n     */\n    MusicAudioSystem.prototype._onPlaybackRateChanged = function () {\n        this.player._changeMuted(this._muted);\n    };\n    /**\n     * @private\n     */\n    MusicAudioSystem.prototype._handlePlay = function (e) {\n        if (e.player !== this._player)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"MusicAudioSystem#_onPlayerPlayed: unexpected audio player\");\n    };\n    /**\n     * @private\n     */\n    MusicAudioSystem.prototype._handleStop = function (e) {\n        if (this._destroyRequestedAssets[e.audio.id]) {\n            delete this._destroyRequestedAssets[e.audio.id];\n            e.audio.destroy();\n        }\n    };\n    return MusicAudioSystem;\n}(AudioSystem));\nexports.MusicAudioSystem = MusicAudioSystem;\nvar SoundAudioSystem = /** @class */ (function (_super) {\n    __extends(SoundAudioSystem, _super);\n    function SoundAudioSystem(param) {\n        var _this = _super.call(this, param) || this;\n        /**\n         * @private\n         */\n        _this._contentMapCleaningFrequency = 50;\n        _this.players = [];\n        return _this;\n    }\n    SoundAudioSystem.prototype.createPlayer = function () {\n        var player = this._resourceFactory.createAudioPlayer(this);\n        if (player.canHandleStopped())\n            this.players.push(player);\n        player.onPlay.add(this._handlePlay, this);\n        player.onStop.add(this._handleStop, this);\n        return player;\n    };\n    SoundAudioSystem.prototype.findPlayers = function (asset) {\n        var ret = [];\n        for (var i = 0; i < this.players.length; ++i) {\n            var currentAudio = this.players[i].currentAudio;\n            if (currentAudio && currentAudio.id === asset.id)\n                ret.push(this.players[i]);\n        }\n        return ret;\n    };\n    SoundAudioSystem.prototype.stopAll = function () {\n        _super.prototype.stopAll.call(this);\n        var players = this.players.concat();\n        for (var i = 0; i < players.length; ++i) {\n            players[i].stop(); // auto remove\n        }\n    };\n    /**\n     * @private\n     */\n    SoundAudioSystem.prototype._reset = function () {\n        _super.prototype._reset.call(this);\n        for (var i = 0; i < this.players.length; ++i) {\n            var player = this.players[i];\n            player.onPlay.remove(this._handlePlay, this);\n            player.onStop.remove(this._handleStop, this);\n        }\n        this.players = [];\n    };\n    /**\n     * @private\n     */\n    SoundAudioSystem.prototype._onMutedChanged = function () {\n        var players = this.players;\n        for (var i = 0; i < players.length; ++i) {\n            players[i]._changeMuted(this._muted);\n        }\n    };\n    /**\n     * @private\n     */\n    SoundAudioSystem.prototype._onPlaybackRateChanged = function () {\n        var players = this.players;\n        if (this._suppressed) {\n            for (var i = 0; i < players.length; ++i) {\n                players[i]._changeMuted(true);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    SoundAudioSystem.prototype._handlePlay = function (_e) {\n        // do nothing\n    };\n    /**\n     * @private\n     */\n    SoundAudioSystem.prototype._handleStop = function (e) {\n        var index = this.players.indexOf(e.player);\n        if (index < 0)\n            return;\n        e.player.onStop.remove(this._handleStop, this);\n        this.players.splice(index, 1);\n        if (this._destroyRequestedAssets[e.audio.id]) {\n            delete this._destroyRequestedAssets[e.audio.id];\n            e.audio.destroy();\n        }\n    };\n    /**\n     * @private\n     */\n    SoundAudioSystem.prototype._onVolumeChanged = function () {\n        for (var i = 0; i < this.players.length; ++i) {\n            this.players[i]._notifyVolumeChanged();\n        }\n    };\n    return SoundAudioSystem;\n}(AudioSystem));\nexports.SoundAudioSystem = SoundAudioSystem;\n//# sourceMappingURL=AudioSystem.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AudioSystem.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AudioSystemManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AudioSystemManager.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioSystemManager = void 0;\nvar AudioSystem_1 = __webpack_require__(/*! ./AudioSystem */ \"./node_modules/@akashic/akashic-engine/lib/AudioSystem.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\n/**\n * `AudioSystem` の管理クラス。\n *\n * 複数の `AudioSystem` に一括で必要な状態設定を行う。\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n */\nvar AudioSystemManager = /** @class */ (function () {\n    function AudioSystemManager(resourceFactory) {\n        /**\n         * @private\n         */\n        this._muted = false;\n        this._resourceFactory = resourceFactory;\n        this.music = new AudioSystem_1.MusicAudioSystem({\n            id: \"music\",\n            muted: this._muted,\n            resourceFactory: resourceFactory\n        });\n        this.sound = new AudioSystem_1.SoundAudioSystem({\n            id: \"sound\",\n            muted: this._muted,\n            resourceFactory: resourceFactory\n        });\n    }\n    /**\n     * 対象の音声アセットの AudioPlayContext を生成する。\n     *\n     * @param asset 音声アセット\n     */\n    AudioSystemManager.prototype.create = function (asset) {\n        if (asset._system.id === \"music\") {\n            return this.music.create(asset);\n        }\n        else if (asset._system.id === \"sound\") {\n            return this.sound.create(asset);\n        }\n        else {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AudioSystemManager#create(): unknown systemId \\\"\".concat(asset._system.id, \"\\\" for asset ID \\\"\").concat(asset.id, \"\\\"\"));\n        }\n    };\n    /**\n     * 対象の音声アセットの AudioPlayContext を生成し、再生する。\n     *\n     * @param asset 音声アセット\n     */\n    AudioSystemManager.prototype.play = function (asset) {\n        if (asset._system.id === \"music\") {\n            return this.music.play(asset);\n        }\n        else if (asset._system.id === \"sound\") {\n            return this.sound.play(asset);\n        }\n        else {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"AudioSystemManager#play(): unknown systemId \\\"\".concat(asset._system.id, \"\\\" for asset ID \\\"\").concat(asset.id, \"\\\"\"));\n        }\n    };\n    /**\n     * @private\n     */\n    AudioSystemManager.prototype._reset = function () {\n        this._muted = false;\n        this.music._reset();\n        this.sound._reset();\n    };\n    /**\n     * @private\n     */\n    AudioSystemManager.prototype._setMuted = function (muted) {\n        if (this._muted === muted)\n            return;\n        this._muted = muted;\n        this.music._setMuted(muted);\n        this.sound._setMuted(muted);\n    };\n    /**\n     * @private\n     */\n    AudioSystemManager.prototype._setPlaybackRate = function (rate) {\n        this.music._setPlaybackRate(rate);\n        this.sound._setPlaybackRate(rate);\n    };\n    AudioSystemManager.prototype._startSuppress = function () {\n        this.music._startSuppress();\n        this.sound._startSuppress();\n    };\n    AudioSystemManager.prototype._endSuppress = function () {\n        this.music._endSuppress();\n        this.sound._endSuppress();\n    };\n    AudioSystemManager.prototype.stopAll = function () {\n        this.music.stopAll();\n        this.sound.stopAll();\n    };\n    return AudioSystemManager;\n}());\nexports.AudioSystemManager = AudioSystemManager;\n//# sourceMappingURL=AudioSystemManager.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AudioSystemManager.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/AudioUtil.js":
/*!***************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/AudioUtil.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioUtil = void 0;\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\");\n/**\n * linear のイージング関数。\n */\nvar linear = function (t, b, c, d) { return (c * t) / d + b; };\n/**\n * Audio に関連するユーティリティ。\n */\nvar AudioUtil;\n(function (AudioUtil) {\n    /**\n     * 音声をフェードインさせる。\n     *\n     * @param game 対象の `Game`。\n     * @param context 対象の `AudioPlayContext` 。\n     * @param duration フェードインの長さ (ms)。\n     * @param to フェードイン後の音量。0 未満または 1 より大きい値を指定した場合の挙動は不定である。省略時は `1` 。\n     * @param easing イージング関数。省略時は linear 。\n     */\n    function fadeIn(game, context, duration, to, easing) {\n        if (to === void 0) { to = 1; }\n        if (easing === void 0) { easing = linear; }\n        context.changeVolume(0);\n        context.play();\n        var _a = transitionVolume(game, context, duration, to, easing), complete = _a.complete, cancel = _a.cancel;\n        return {\n            complete: function () {\n                complete();\n            },\n            cancel: function (revert) {\n                if (revert === void 0) { revert = false; }\n                cancel(revert);\n                if (revert) {\n                    context.stop();\n                }\n            }\n        };\n    }\n    AudioUtil.fadeIn = fadeIn;\n    /**\n     * 音声をフェードアウトさせる。\n     *\n     * @param game 対象の `Game`。\n     * @param context 対象の `AudioPlayContext` 。\n     * @param duration フェードアウトの長さ (ms)。\n     * @param easing イージング関数。省略時は linear が指定される。\n     */\n    function fadeOut(game, context, duration, easing) {\n        if (easing === void 0) { easing = linear; }\n        var _a = transitionVolume(game, context, duration, 0, easing), complete = _a.complete, cancel = _a.cancel;\n        return {\n            complete: function () {\n                complete();\n                context.stop();\n            },\n            cancel: function (revert) {\n                if (revert === void 0) { revert = false; }\n                cancel(revert);\n            }\n        };\n    }\n    AudioUtil.fadeOut = fadeOut;\n    /**\n     * 二つの音声をクロスフェードさせる。\n     *\n     * @param game 対象の `Game`。\n     * @param fadeInContext フェードイン対象の `AudioPlayContext` 。\n     * @param fadeOutContext フェードアウト対象の `AudioPlayContext` 。\n     * @param duration クロスフェードの長さ (ms)。\n     * @param to クロスフェード後の音量。0 未満または 1 より大きい値を指定した場合の挙動は不定。省略時は `1` 。\n     * @param easing イージング関数。フェードインとフェードアウトで共通であることに注意。省略時は linear が指定される。\n     */\n    function crossFade(game, fadeInContext, fadeOutContext, duration, to, easing) {\n        if (to === void 0) { to = 1; }\n        if (easing === void 0) { easing = linear; }\n        var fadeInFuncs = fadeIn(game, fadeInContext, duration, to, easing);\n        var fadeOutFuncs = fadeOut(game, fadeOutContext, duration, easing);\n        return {\n            complete: function () {\n                fadeInFuncs.complete();\n                fadeOutFuncs.complete();\n            },\n            cancel: function (revert) {\n                if (revert === void 0) { revert = false; }\n                fadeInFuncs.cancel(revert);\n                fadeOutFuncs.cancel(revert);\n            }\n        };\n    }\n    AudioUtil.crossFade = crossFade;\n    /**\n     * 音量を指定のイージングで遷移させる。\n     *\n     * @param game 対象の `Game`。\n     * @param context 対象の `AudioPlayContext` 。\n     * @param duration 遷移の長さ (ms)。\n     * @param to 遷移後の音量。0 未満または 1 より大きい値を指定した場合の挙動は不定。\n     * @param easing イージング関数。省略時は linear が指定される。\n     */\n    function transitionVolume(game, context, duration, to, easing) {\n        if (easing === void 0) { easing = linear; }\n        var frame = 1000 / game.fps;\n        var from = context.volume;\n        var elapsed = 0;\n        context.changeVolume(Util_1.Util.clamp(from, 0, 1));\n        var handler = function () {\n            elapsed += frame;\n            if (elapsed <= duration) {\n                var progress = easing(elapsed, from, to - from, duration);\n                context.changeVolume(Util_1.Util.clamp(progress, 0, 1));\n                return false;\n            }\n            else {\n                context.changeVolume(to);\n                return true;\n            }\n        };\n        var remove = function () {\n            if (game.onUpdate.contains(handler)) {\n                game.onUpdate.remove(handler);\n            }\n        };\n        game.onUpdate.add(handler);\n        return {\n            complete: function () {\n                remove();\n                context.changeVolume(to);\n            },\n            cancel: function (revert) {\n                remove();\n                if (revert) {\n                    context.changeVolume(from);\n                }\n            }\n        };\n    }\n    AudioUtil.transitionVolume = transitionVolume;\n})(AudioUtil || (exports.AudioUtil = AudioUtil = {}));\n//# sourceMappingURL=AudioUtil.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/AudioUtil.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/BitmapFont.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/BitmapFont.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BitmapFont = void 0;\nvar Font_1 = __webpack_require__(/*! ./Font */ \"./node_modules/@akashic/akashic-engine/lib/Font.js\");\nvar SurfaceUtil_1 = __webpack_require__(/*! ./SurfaceUtil */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js\");\n/**\n * ラスタ画像によるフォント。\n */\nvar BitmapFont = /** @class */ (function (_super) {\n    __extends(BitmapFont, _super);\n    /**\n     * 各種パラメータを指定して `BitmapFont` のインスタンスを生成する。\n     * @param param `BitmapFont` に設定するパラメータ\n     */\n    function BitmapFont(param) {\n        var _this = _super.call(this) || this;\n        // @ts-ignore\n        _this.surface = SurfaceUtil_1.SurfaceUtil.asSurface(param.src);\n        if (param.glyphInfo) {\n            _this.map = param.glyphInfo.map;\n            _this.defaultGlyphWidth = param.glyphInfo.width;\n            _this.defaultGlyphHeight = param.glyphInfo.height;\n            _this.missingGlyph = param.glyphInfo.missingGlyph;\n            _this.size = param.glyphInfo.height;\n        }\n        else {\n            _this.map = param.map || {};\n            _this.defaultGlyphWidth = param.defaultGlyphWidth || 0;\n            _this.defaultGlyphHeight = param.defaultGlyphHeight || 0;\n            _this.missingGlyph = param.missingGlyph;\n            _this.size = param.defaultGlyphHeight || 0;\n        }\n        return _this;\n    }\n    /**\n     * コードポイントに対応するグリフを返す。\n     * @param code コードポイント\n     */\n    BitmapFont.prototype.glyphForCharacter = function (code) {\n        var g = this.map[code] || this.missingGlyph;\n        if (!g) {\n            return null;\n        }\n        var w = g.width === undefined ? this.defaultGlyphWidth : g.width;\n        var h = g.height === undefined ? this.defaultGlyphHeight : g.height;\n        var offsetX = g.offsetX || 0;\n        var offsetY = g.offsetY || 0;\n        var advanceWidth = g.advanceWidth === undefined ? w : g.advanceWidth;\n        var surface = w === 0 || h === 0 ? undefined : this.surface;\n        return {\n            code: code,\n            x: g.x,\n            y: g.y,\n            width: w,\n            height: h,\n            surface: surface,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            advanceWidth: advanceWidth,\n            isSurfaceValid: true,\n            _atlas: null\n        };\n    };\n    /**\n     * 利用している `Surface` を破棄した上で、このフォントを破棄する。\n     */\n    BitmapFont.prototype.destroy = function () {\n        if (this.surface && !this.surface.destroyed()) {\n            this.surface.destroy();\n        }\n        this.map = undefined;\n    };\n    /**\n     * 破棄されたオブジェクトかどうかを判定する。\n     */\n    BitmapFont.prototype.destroyed = function () {\n        // mapをfalsy値で作成された場合最初から破棄扱いになるが、仕様とする\n        return !this.map;\n    };\n    return BitmapFont;\n}(Font_1.Font));\nexports.BitmapFont = BitmapFont;\n//# sourceMappingURL=BitmapFont.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/BitmapFont.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Camera.js":
/*!************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Camera.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=Camera.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Camera.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Camera2D.js":
/*!**************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Camera2D.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Camera2D = void 0;\nvar Object2D_1 = __webpack_require__(/*! ./Object2D */ \"./node_modules/@akashic/akashic-engine/lib/Object2D.js\");\n/**\n * 2D世界におけるカメラ。\n */\nvar Camera2D = /** @class */ (function (_super) {\n    __extends(Camera2D, _super);\n    /**\n     * 指定されたパラメータで `Camera2D` のインスタンスを生成する。\n     * @param param 初期化に用いるパラメータのオブジェクト\n     */\n    function Camera2D(param) {\n        var _this = _super.call(this, param) || this;\n        _this.local = !!param.local;\n        _this.name = param.name;\n        _this._modifiedCount = 0;\n        return _this;\n    }\n    /**\n     * 与えられたシリアリゼーションでカメラを復元する。\n     *\n     * @param ser `Camera2D#serialize()` の戻り値\n     */\n    Camera2D.deserialize = function (ser) {\n        var s = ser;\n        var ret = new Camera2D(s.param);\n        return ret;\n    };\n    /**\n     * カメラ状態の変更をエンジンに通知する。\n     *\n     * このメソッドの呼び出し後、このカメラのプロパティに対する変更が各 `Renderer` の描画に反映される。\n     * ただし逆は真ではない。すなわち、再描画は他の要因によって行われることもある。\n     * ゲーム開発者は、このメソッドを呼び出していないことをもって再描画が行われていないことを仮定してはならない。\n     *\n     * 本メソッドは、このオブジェクトの `Object2D` 由来のプロパティ (`x`, `y`, `angle` など) を変更した場合にも呼びだす必要がある。\n     */\n    Camera2D.prototype.modified = function () {\n        this._modifiedCount = (this._modifiedCount + 1) % 32768;\n        if (this._matrix)\n            this._matrix._modified = true;\n    };\n    /**\n     * このカメラをシリアライズする。\n     *\n     * このメソッドの戻り値を `Camera2D#deserialize()` に渡すことで同じ値を持つカメラを復元することができる。\n     */\n    Camera2D.prototype.serialize = function () {\n        var ser = {\n            param: {\n                local: this.local,\n                name: this.name,\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height,\n                opacity: this.opacity,\n                scaleX: this.scaleX,\n                scaleY: this.scaleY,\n                angle: this.angle,\n                anchorX: this.anchorX,\n                anchorY: this.anchorY,\n                compositeOperation: this.compositeOperation\n            }\n        };\n        return ser;\n    };\n    /**\n     * @private\n     */\n    Camera2D.prototype._applyTransformToRenderer = function (renderer) {\n        if (this.angle || this.scaleX !== 1 || this.scaleY !== 1 || this.anchorX !== 0 || this.anchorY !== 0) {\n            // Note: this.scaleX/scaleYが0の場合描画した結果何も表示されない事になるが、特殊扱いはしない\n            renderer.transform(this.getMatrix()._matrix);\n        }\n        else {\n            renderer.translate(-this.x, -this.y);\n        }\n        if (this.opacity !== 1)\n            renderer.opacity(this.opacity);\n    };\n    /**\n     * @private\n     */\n    Camera2D.prototype._updateMatrix = function () {\n        if (!this._matrix)\n            return;\n        // カメラの angle, x, y はエンティティと逆方向に作用することに注意。\n        if (this.angle || this.scaleX !== 1 || this.scaleY !== 1 || this.anchorX !== 0 || this.anchorY !== 0) {\n            this._matrix.updateByInverse(this.width, this.height, this.scaleX, this.scaleY, this.angle, this.x, this.y, this.anchorX, this.anchorY);\n        }\n        else {\n            this._matrix.reset(-this.x, -this.y);\n        }\n    };\n    return Camera2D;\n}(Object2D_1.Object2D));\nexports.Camera2D = Camera2D;\n//# sourceMappingURL=Camera2D.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Camera2D.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Collision.js":
/*!***************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Collision.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Collision = void 0;\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\");\n// 外積の絶対値\nfunction absCross(v1, v2) {\n    return v1.x * v2.y - v1.y * v2.x;\n}\n// 二次元ベクトルの減算\nfunction sub(v1, v2) {\n    return { x: v1.x - v2.x, y: v1.y - v2.y };\n}\n/**\n * オブジェクトなどの衝突判定機能を提供する。\n */\nvar Collision;\n(function (Collision) {\n    /**\n     * 二つのエンティティの衝突判定を行い、その結果を返す。\n     *\n     * 回転・拡大されたエンティティや、親の異なるエンティティ同士も扱える汎用の衝突判定処理。\n     * ただし計算量が多いので、大量のエンティティ間のすべての衝突を確認するような状況では利用を避けることが望ましい。\n     * 親が同じで回転・拡大を行わないエンティティ同士の場合は、より軽量な Collision.intersectAreas() を利用すること。\n     * 親が同じで中心座標同士の距離だけで判定してよい場合は、より軽量な Collision.withinAreas() を利用すること。\n     *\n     * 対象のエンティティの座標や大きさなどを変更した場合、\n     * この関数の呼び出し前にそのエンティティの modified() を呼び出しておく必要がある。\n     *\n     * @param e1 衝突判定するエンティティ\n     * @param e2 衝突判定するエンティティ\n     * @param area1 e1 の当たり判定領域。省略された場合、`{ x: 0, y: 0, width: e1.width, hegiht: e1.height }`\n     * @param area2 e2 の当たり判定領域。省略された場合、`{ x: 0, y: 0, width: e2.width, hegiht: e2.height }`\n     */\n    function intersectEntities(e1, e2, area1, area2) {\n        var lca = e1._findLowestCommonAncestorWith(e2);\n        if (!lca)\n            return false;\n        var r1 = area1\n            ? { left: area1.x, top: area1.y, right: area1.x + area1.width, bottom: area1.y + area1.height }\n            : { left: 0, top: 0, right: e1.width, bottom: e1.height };\n        var r2 = area2\n            ? { left: area2.x, top: area2.y, right: area2.x + area2.width, bottom: area2.y + area2.height }\n            : { left: 0, top: 0, right: e2.width, bottom: e2.height };\n        var mat1 = e1._calculateMatrixTo(lca);\n        var mat2 = e2._calculateMatrixTo(lca);\n        // 座標系を合わせる: 共通祖先の座標系に合わせたそれぞれの四隅の点を求める。\n        var lt1 = mat1.multiplyPoint({ x: r1.left, y: r1.top });\n        var rt1 = mat1.multiplyPoint({ x: r1.right, y: r1.top });\n        var lb1 = mat1.multiplyPoint({ x: r1.left, y: r1.bottom });\n        var rb1 = mat1.multiplyPoint({ x: r1.right, y: r1.bottom });\n        var lt2 = mat2.multiplyPoint({ x: r2.left, y: r2.top });\n        var rt2 = mat2.multiplyPoint({ x: r2.right, y: r2.top });\n        var lb2 = mat2.multiplyPoint({ x: r2.left, y: r2.bottom });\n        var rb2 = mat2.multiplyPoint({ x: r2.right, y: r2.bottom });\n        // AABB で枝狩りする。(高速化だけでなく後続の条件を単純化するのにも必要である点に注意)\n        var minX1 = Math.min(lt1.x, rt1.x, lb1.x, rb1.x);\n        var maxX1 = Math.max(lt1.x, rt1.x, lb1.x, rb1.x);\n        var minX2 = Math.min(lt2.x, rt2.x, lb2.x, rb2.x);\n        var maxX2 = Math.max(lt2.x, rt2.x, lb2.x, rb2.x);\n        if (maxX1 < minX2 || maxX2 < minX1)\n            return false;\n        var minY1 = Math.min(lt1.y, rt1.y, lb1.y, rb1.y);\n        var maxY1 = Math.max(lt1.y, rt1.y, lb1.y, rb1.y);\n        var minY2 = Math.min(lt2.y, rt2.y, lb2.y, rb2.y);\n        var maxY2 = Math.max(lt2.y, rt2.y, lb2.y, rb2.y);\n        if (maxY1 < minY2 || maxY2 < minY1)\n            return false;\n        // 二つの四角形それぞれのいずれかの辺同士が交差するなら衝突している。\n        if (Collision.intersectLineSegments(lt1, rt1, lt2, rt2) ||\n            Collision.intersectLineSegments(lt1, rt1, rt2, rb2) ||\n            Collision.intersectLineSegments(lt1, rt1, rb2, lb2) ||\n            Collision.intersectLineSegments(lt1, rt1, lb2, lt2) ||\n            Collision.intersectLineSegments(rt1, rb1, lt2, rt2) ||\n            Collision.intersectLineSegments(rt1, rb1, rt2, rb2) ||\n            Collision.intersectLineSegments(rt1, rb1, rb2, lb2) ||\n            Collision.intersectLineSegments(rt1, rb1, lb2, lt2) ||\n            Collision.intersectLineSegments(rb1, lb1, lt2, rt2) ||\n            Collision.intersectLineSegments(rb1, lb1, rt2, rb2) ||\n            Collision.intersectLineSegments(rb1, lb1, rb2, lb2) ||\n            Collision.intersectLineSegments(rb1, lb1, lb2, lt2) ||\n            Collision.intersectLineSegments(lb1, lt1, lt2, rt2) ||\n            Collision.intersectLineSegments(lb1, lt1, rt2, rb2) ||\n            Collision.intersectLineSegments(lb1, lt1, rb2, lb2) ||\n            Collision.intersectLineSegments(lb1, lt1, lb2, lt2)) {\n            return true;\n        }\n        // そうでない場合、e1 が e2 を包含しているなら衝突している。\n        // ここで辺は交差していないので、e1 が e2 の頂点一つ (lt2) を包含しているなら、全体を包含している。\n        // cf. https://ksta.skr.jp/topic/diaryb09.html#040528 \"各辺の内側判定による内外判定\"\n        var s1 = absCross(sub(lt1, rt1), sub(lt2, rt1));\n        if (s1 * absCross(sub(lb1, lt1), sub(lt2, lt1)) >= 0 &&\n            s1 * absCross(sub(rb1, lb1), sub(lt2, lb1)) >= 0 &&\n            s1 * absCross(sub(rt1, rb1), sub(lt2, rb1)) >= 0) {\n            return true;\n        }\n        // そうでない場合、e2 が e1 を包含しているなら衝突している。\n        var s2 = absCross(sub(lt2, rt2), sub(lt1, rt2));\n        return (s2 * absCross(sub(lb2, lt2), sub(lt1, lt2)) >= 0 &&\n            s2 * absCross(sub(rb2, lb2), sub(lt1, lb2)) >= 0 &&\n            s2 * absCross(sub(rt2, rb2), sub(lt1, rb2)) >= 0);\n    }\n    Collision.intersectEntities = intersectEntities;\n    /**\n     * 線分同士の衝突判定 (交差判定) を行い、その結果を返す。\n     *\n     * @param {CommonOffset} p1 線分の端点の一つ\n     * @param {CommonOffset} p2 線分の端点の一つ\n     * @param {CommonOffset} q1 もう一つの線分の端点の一つ\n     * @param {CommonOffset} q2 もう一つの線分の端点の一つ\n     */\n    function intersectLineSegments(p1, p2, q1, q2) {\n        // cf. https://ksta.skr.jp/topic/diaryb09.html#040518\n        var p = sub(p2, p1);\n        var q = sub(q2, q1);\n        return (absCross(sub(q1, p1), p) * absCross(sub(q2, p1), p) <= 0 && absCross(sub(p1, q1), q) * absCross(sub(p2, q1), q) <= 0 // 符号が違うことを積の符号で判定している\n        );\n    }\n    Collision.intersectLineSegments = intersectLineSegments;\n    /**\n     * 矩形交差による衝突判定を行い、その結果を返す。\n     * 戻り値は、二つの矩形t1, t2が交差しているとき真、でなければ偽。\n     *\n     * @param {number} x1 t1のX座標\n     * @param {number} y1 t1のY座標\n     * @param {number} width1 t1の幅\n     * @param {number} height1 t1の高さ\n     * @param {number} x2 t2のX座標\n     * @param {number} y2 t2のY座標\n     * @param {number} width2 t2の幅\n     * @param {number} height2 t2の高さ\n     */\n    function intersect(x1, y1, width1, height1, x2, y2, width2, height2) {\n        return x1 <= x2 + width2 && x2 <= x1 + width1 && y1 <= y2 + height2 && y2 <= y1 + height1;\n    }\n    Collision.intersect = intersect;\n    /**\n     * 矩形交差による衝突判定を行い、その結果を返す。\n     * 戻り値は、矩形t1, t2が交差しているとき真、でなければ偽。\n     *\n     * 特に、回転・拡大を利用していない、親が同じエンティティ同士の衝突判定に利用することができる。\n     * 条件を満たさない場合は `withinAreas()` や、より重いが正確な `intersectEntities()` の利用を検討すること。\n     *\n     * @param {CommonArea} t1 矩形1\n     * @param {CommonArea} t2 矩形2\n     */\n    function intersectAreas(t1, t2) {\n        return Collision.intersect(t1.x, t1.y, t1.width, t1.height, t2.x, t2.y, t2.width, t2.height);\n    }\n    Collision.intersectAreas = intersectAreas;\n    /**\n     * 2点間の距離による衝突判定を行い、その結果を返す。\n     * 戻り値は、2点間の距離が閾値以内であるとき真、でなければ偽。\n     * @param {number} t1x 一点の X 座標\n     * @param {number} t1y 一点の Y 座標\n     * @param {number} t2x もう一点の X 座標\n     * @param {number} t2y もう一点の Y 座標\n     * @param {number} [distance=1] 衝突判定閾値 [pixel]\n     */\n    function within(t1x, t1y, t2x, t2y, distance) {\n        if (distance === void 0) { distance = 1; }\n        return distance >= Util_1.Util.distance(t1x, t1y, t2x, t2y);\n    }\n    Collision.within = within;\n    /**\n     * 2つの矩形の中心座標間距離による衝突判定を行い、その結果を返す。\n     * 戻り値は、2点間の距離が閾値以内であるとき真、でなければ偽。\n     * @param {CommonArea} t1 矩形1\n     * @param {CommonArea} t2 矩形2\n     * @param {number} [distance=1] 衝突判定閾値 [pixel]\n     */\n    function withinAreas(t1, t2, distance) {\n        if (distance === void 0) { distance = 1; }\n        return distance >= Util_1.Util.distanceBetweenAreas(t1, t2);\n    }\n    Collision.withinAreas = withinAreas;\n})(Collision || (exports.Collision = Collision = {}));\n//# sourceMappingURL=Collision.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Collision.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/DefaultLoadingScene.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/DefaultLoadingScene.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultLoadingScene = void 0;\nvar CameraCancellingE_1 = __webpack_require__(/*! ./entities/CameraCancellingE */ \"./node_modules/@akashic/akashic-engine/lib/entities/CameraCancellingE.js\");\nvar FilledRect_1 = __webpack_require__(/*! ./entities/FilledRect */ \"./node_modules/@akashic/akashic-engine/lib/entities/FilledRect.js\");\nvar LoadingScene_1 = __webpack_require__(/*! ./LoadingScene */ \"./node_modules/@akashic/akashic-engine/lib/LoadingScene.js\");\n/**\n * デフォルトローディングシーン。\n *\n * `Game#_defaultLoadingScene` の初期値として利用される。\n * このシーンはいかなるアセットも用いてはならない。\n */\nvar DefaultLoadingScene = /** @class */ (function (_super) {\n    __extends(DefaultLoadingScene, _super);\n    /**\n     * `DefaultLoadingScene` のインスタンスを生成する。\n     * @param param 初期化に用いるパラメータのオブジェクト\n     */\n    function DefaultLoadingScene(param) {\n        var _this = _super.call(this, { game: param.game, name: \"akashic:default-loading-scene\" }) || this;\n        if (param.style === \"compact\") {\n            _this._barWidth = _this.game.width / 4;\n            _this._barHeight = 5;\n            _this._style = \"compact\";\n        }\n        else {\n            _this._barWidth = Math.min(_this.game.width, Math.max(100, _this.game.width / 2));\n            _this._barHeight = 5;\n            _this._style = \"default\";\n        }\n        _this._gauge = undefined;\n        _this._gaugeUpdateCount = 0;\n        _this._totalWaitingAssetCount = 0;\n        _this.onLoad.add(_this._handleLoad, _this);\n        _this.onTargetReset.add(_this._handleTargetReset, _this);\n        _this.onTargetAssetLoad.add(_this._handleTargetAssetLoad, _this);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    DefaultLoadingScene.prototype._handleLoad = function () {\n        var barX, barY, bgColor;\n        if (this._style === \"compact\") {\n            var margin = Math.min(this.game.width, this.game.height) * 0.05;\n            barX = this.game.width - margin - this._barWidth;\n            barY = this.game.height - margin - this._barHeight;\n            bgColor = \"transparent\";\n        }\n        else {\n            barX = (this.game.width - this._barWidth) / 2;\n            barY = (this.game.height - this._barHeight) / 2;\n            bgColor = \"rgba(0, 0, 0, 0.8)\";\n        }\n        var gauge;\n        this.append(new CameraCancellingE_1.CameraCancellingE({\n            scene: this,\n            children: [\n                new FilledRect_1.FilledRect({\n                    scene: this,\n                    width: this.game.width,\n                    height: this.game.height,\n                    cssColor: bgColor,\n                    children: [\n                        new FilledRect_1.FilledRect({\n                            scene: this,\n                            x: barX,\n                            y: barY,\n                            width: this._barWidth,\n                            height: this._barHeight,\n                            cssColor: \"gray\",\n                            children: [\n                                (gauge = new FilledRect_1.FilledRect({\n                                    scene: this,\n                                    width: 0,\n                                    height: this._barHeight,\n                                    cssColor: \"white\"\n                                }))\n                            ]\n                        })\n                    ]\n                })\n            ]\n        }));\n        gauge.onUpdate.add(this._handleUpdate, this);\n        this._gauge = gauge;\n        return true; // Trigger 登録を解除する\n    };\n    /**\n     * @private\n     */\n    DefaultLoadingScene.prototype._handleUpdate = function () {\n        var BLINK_RANGE = 50;\n        var BLINK_PER_SEC = 2 / 3;\n        ++this._gaugeUpdateCount;\n        // 白を上限に sin 波で明滅させる (updateしていることの確認)\n        var c = Math.round(255 - BLINK_RANGE + Math.sin((this._gaugeUpdateCount / this.game.fps) * BLINK_PER_SEC * (2 * Math.PI)) * BLINK_RANGE);\n        this._gauge.cssColor = \"rgb(\" + c + \",\" + c + \",\" + c + \")\";\n        this._gauge.modified();\n    };\n    /**\n     * @private\n     */\n    DefaultLoadingScene.prototype._handleTargetReset = function (targetScene) {\n        if (this._gauge) {\n            this._gauge.width = 0;\n            this._gauge.modified();\n        }\n        this._totalWaitingAssetCount = targetScene._sceneAssetHolder.waitingAssetsCount;\n    };\n    /**\n     * @private\n     */\n    DefaultLoadingScene.prototype._handleTargetAssetLoad = function (_asset) {\n        var waitingAssetsCount = this._targetScene._sceneAssetHolder.waitingAssetsCount;\n        this._gauge.width = Math.ceil((1 - waitingAssetsCount / this._totalWaitingAssetCount) * this._barWidth);\n        this._gauge.modified();\n    };\n    return DefaultLoadingScene;\n}(LoadingScene_1.LoadingScene));\nexports.DefaultLoadingScene = DefaultLoadingScene;\n//# sourceMappingURL=DefaultLoadingScene.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/DefaultLoadingScene.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/DefaultSkippingScene.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/DefaultSkippingScene.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultSkippingScene = void 0;\nvar CameraCancellingE_1 = __webpack_require__(/*! ./entities/CameraCancellingE */ \"./node_modules/@akashic/akashic-engine/lib/entities/CameraCancellingE.js\");\nvar FilledRect_1 = __webpack_require__(/*! ./entities/FilledRect */ \"./node_modules/@akashic/akashic-engine/lib/entities/FilledRect.js\");\nvar Scene_1 = __webpack_require__(/*! ./Scene */ \"./node_modules/@akashic/akashic-engine/lib/Scene.js\");\n/**\n * @ignore\n */\nfunction easeInOutQuad(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1)\n        return (c / 2) * t * t + b;\n    --t;\n    return (-c / 2) * (t * (t - 2) - 1) + b;\n}\n/**\n * @ignore\n */\nfunction easingInOutQuadWithSaturation(t, b, c, d) {\n    var threshold = d * 0.15;\n    return 0 < t && t < threshold ? easeInOutQuad(t, b, c, threshold) : b + c;\n}\n/**\n * @ignore\n */\nvar EasingFilledRect = /** @class */ (function (_super) {\n    __extends(EasingFilledRect, _super);\n    function EasingFilledRect(param) {\n        var _this = _super.call(this, param) || this;\n        _this.age = 0;\n        _this.offsetDurationFrame = param.offsetDurationFrame;\n        _this.easingDurationFrame = param.easingDurationFrame;\n        _this.valueFrom = param.valueFrom;\n        _this.valueTo = param.valueTo;\n        _this.easing = param.easing;\n        _this.onUpdate.add(_this._incrementAge, _this);\n        _this.onUpdate.add(_this._updateColor, _this);\n        return _this;\n    }\n    EasingFilledRect.prototype._incrementAge = function () {\n        this.age++;\n    };\n    EasingFilledRect.prototype._updateColor = function () {\n        var cssColor = this._calculateCSSColor();\n        if (this.cssColor !== cssColor) {\n            this.cssColor = cssColor;\n            this.modified();\n        }\n    };\n    EasingFilledRect.prototype._calculateCSSColor = function () {\n        var _a = this, age = _a.age, offsetDurationFrame = _a.offsetDurationFrame, easingDurationFrame = _a.easingDurationFrame, valueFrom = _a.valueFrom, valueTo = _a.valueTo, easing = _a.easing;\n        var t = Math.max(age - offsetDurationFrame, 0) % easingDurationFrame;\n        var b = valueFrom;\n        var c = valueTo - valueFrom;\n        var d = easingDurationFrame;\n        var col = easing(t, b, c, d);\n        return \"rgb(\".concat(col, \", \").concat(col, \", \").concat(col, \")\");\n    };\n    return EasingFilledRect;\n}(FilledRect_1.FilledRect));\n/**\n * デフォルトスキッピングシーン。\n *\n * `Game#_defaultSkippingScene` の初期値として利用される。\n */\nvar DefaultSkippingScene = /** @class */ (function (_super) {\n    __extends(DefaultSkippingScene, _super);\n    /**\n     * `DefaultSkippingScene` のインスタンスを生成する。\n     * @param param 初期化に用いるパラメータのオブジェクト\n     */\n    function DefaultSkippingScene(param) {\n        var _this = _super.call(this, { game: param.game, local: \"full-local\", name: \"akashic:default-skipping-scene\" }) || this;\n        if (param.style === \"indicator\") {\n            _this.onLoad.addOnce(_this._handleLoadForIndicator, _this);\n        }\n        return _this;\n    }\n    /**\n     * @private\n     */\n    DefaultSkippingScene.prototype._handleLoadForIndicator = function () {\n        var _this = this;\n        var game = this.game;\n        var rectSize = (Math.min(game.width, game.height) * 0.03) | 0;\n        var margin = (Math.min(game.width, game.height) * 0.03) | 0;\n        var marginRight = (Math.min(game.width, game.height) * 0.05) | 0;\n        var marginBottom = (Math.min(game.width, game.height) * 0.05) | 0;\n        var offsetDurationFrame = 400 / (1000 / game.fps);\n        var easingDurationFrame = 2500 / (1000 / game.fps);\n        var valueFrom = 255 - 50;\n        var valueTo = 255;\n        var easing = easingInOutQuadWithSaturation;\n        this.append(new CameraCancellingE_1.CameraCancellingE({\n            scene: this,\n            children: [3, 2, 1, 0].map(function (offsetIndex, i) {\n                return new EasingFilledRect({\n                    scene: _this,\n                    cssColor: \"rgb(\".concat(valueTo, \", \").concat(valueTo, \", \").concat(valueTo, \")\"),\n                    width: rectSize,\n                    height: rectSize,\n                    x: game.width - i * (rectSize + margin) - marginRight,\n                    y: game.height - marginBottom,\n                    anchorX: 1,\n                    anchorY: 1,\n                    offsetDurationFrame: offsetDurationFrame * offsetIndex,\n                    easingDurationFrame: easingDurationFrame,\n                    valueFrom: valueFrom,\n                    valueTo: valueTo,\n                    easing: easing\n                });\n            })\n        }));\n    };\n    return DefaultSkippingScene;\n}(Scene_1.Scene));\nexports.DefaultSkippingScene = DefaultSkippingScene;\n//# sourceMappingURL=DefaultSkippingScene.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/DefaultSkippingScene.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/DynamicAssetConfiguration.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/DynamicAssetConfiguration.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=DynamicAssetConfiguration.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/DynamicAssetConfiguration.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/DynamicFont.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/DynamicFont.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DynamicFont = void 0;\nvar pdi_types_1 = __webpack_require__(/*! @akashic/pdi-types */ \"./node_modules/@akashic/pdi-types/lib/index.js\");\nvar BitmapFont_1 = __webpack_require__(/*! ./BitmapFont */ \"./node_modules/@akashic/akashic-engine/lib/BitmapFont.js\");\nvar Font_1 = __webpack_require__(/*! ./Font */ \"./node_modules/@akashic/akashic-engine/lib/Font.js\");\nvar SurfaceAtlasSet_1 = __webpack_require__(/*! ./SurfaceAtlasSet */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSet.js\");\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\");\n/**\n * ビットマップフォントを逐次生成するフォント。\n */\nvar DynamicFont = /** @class */ (function (_super) {\n    __extends(DynamicFont, _super);\n    /**\n     * 各種パラメータを指定して `DynamicFont` のインスタンスを生成する。\n     * @param param `DynamicFont` に設定するパラメータ\n     */\n    function DynamicFont(param) {\n        var _this = _super.call(this) || this;\n        _this.fontFamily = param.fontFamily;\n        _this.size = param.size;\n        _this.hint = param.hint != null ? param.hint : {};\n        _this.fontColor = param.fontColor != null ? param.fontColor : \"black\";\n        _this.fontWeight = param.fontWeight != null ? param.fontWeight : pdi_types_1.FontWeight.Normal;\n        _this.strokeWidth = param.strokeWidth != null ? param.strokeWidth : 0;\n        _this.strokeColor = param.strokeColor != null ? param.strokeColor : \"black\";\n        _this.strokeOnly = param.strokeOnly != null ? param.strokeOnly : false;\n        var game = param.game;\n        _this._resourceFactory = game.resourceFactory;\n        var ff = _this.fontFamily;\n        var realFontFamily;\n        if (typeof ff === \"string\") {\n            realFontFamily = ff;\n        }\n        else if (Array.isArray(ff)) {\n            var arr = [];\n            for (var i = 0; i < ff.length; ++i) {\n                var ffi = ff[i];\n                arr.push(typeof ffi === \"string\" ? ffi : Util_1.Util.enumToSnakeCase(pdi_types_1.FontFamily, ffi));\n            }\n            realFontFamily = arr;\n        }\n        else {\n            var arr = [];\n            arr.push(typeof ff === \"string\" ? ff : Util_1.Util.enumToSnakeCase(pdi_types_1.FontFamily, ff));\n            realFontFamily = arr;\n        }\n        var weight = _this.fontWeight;\n        var realFontWeight = typeof weight === \"string\" ? weight : Util_1.Util.enumToSnakeCase(pdi_types_1.FontWeight, weight);\n        _this._glyphFactory = _this._resourceFactory.createGlyphFactory(realFontFamily, _this.size, _this.hint.baselineHeight, _this.fontColor, _this.strokeWidth, _this.strokeColor, _this.strokeOnly, realFontWeight);\n        _this._glyphs = {};\n        _this._destroyed = false;\n        _this._isSurfaceAtlasSetOwner = false;\n        // NOTE: hint の特定プロパティ(baselineHeight)を分岐の条件にした場合、後でプロパティを追加した時に\n        // ここで追従漏れの懸念があるため、引数の hint が省略されているかで分岐させている。\n        if (param.surfaceAtlasSet) {\n            _this._atlasSet = param.surfaceAtlasSet;\n        }\n        else if (!!param.hint) {\n            _this._isSurfaceAtlasSetOwner = true;\n            _this._atlasSet = new SurfaceAtlasSet_1.SurfaceAtlasSet({\n                resourceFactory: game.resourceFactory,\n                hint: _this.hint\n            });\n        }\n        else {\n            _this._atlasSet = game.surfaceAtlasSet;\n        }\n        if (_this.hint.presetChars) {\n            for (var i = 0, len = _this.hint.presetChars.length; i < len; i++) {\n                var code = Util_1.Util.charCodeAt(_this.hint.presetChars, i);\n                if (!code) {\n                    continue;\n                }\n                _this.glyphForCharacter(code);\n            }\n        }\n        return _this;\n    }\n    /**\n     * グリフの取得。\n     *\n     * 取得に失敗するとnullが返る。\n     *\n     * 取得に失敗した時、次のようにすることで成功するかもしれない。\n     * - DynamicFont生成時に指定する文字サイズを小さくする\n     * - アトラスの初期サイズ・最大サイズを大きくする\n     *\n     * @param code 文字コード\n     */\n    DynamicFont.prototype.glyphForCharacter = function (code) {\n        var glyph = this._glyphs[code];\n        if (!(glyph && glyph.isSurfaceValid)) {\n            // g.Glyph にダウンキャストすることによって不整合が発生しうるので修正が必要\n            // TODO: g.Glyph を返す create() メソッドを持つ g.GlyphFactory を定義すべき\n            glyph = this._glyphFactory.create(code);\n            if (glyph.surface) {\n                // 空白文字でなければアトラス化する\n                if (!this._atlasSet.addGlyph(glyph)) {\n                    return null;\n                }\n            }\n            this._glyphs[code] = glyph;\n        }\n        this._atlasSet.touchGlyph(glyph);\n        return glyph;\n    };\n    /**\n     * BtimapFontの生成。\n     *\n     * 実装上の制限から、このメソッドを呼び出す場合、maxAtlasNum が 1 または undefined/null(1として扱われる) である必要がある。\n     * そうでない場合、失敗する可能性がある。\n     *\n     * @param missingGlyphChar `BitmapFont#map` に存在しないコードポイントの代わりに表示するべき文字。最初の一文字が用いられる。\n     */\n    DynamicFont.prototype.asBitmapFont = function (missingGlyphChar) {\n        var _this = this;\n        if (this._atlasSet.getAtlasNum() !== 1) {\n            return null;\n        }\n        var missingGlyphCharCodePoint = null;\n        if (missingGlyphChar) {\n            missingGlyphCharCodePoint = Util_1.Util.charCodeAt(missingGlyphChar, 0);\n            this.glyphForCharacter(missingGlyphCharCodePoint);\n        }\n        var glyphAreaMap = {};\n        Object.keys(this._glyphs).forEach(function (_key) {\n            var key = Number(_key);\n            var glyph = _this._glyphs[key];\n            var glyphArea = {\n                x: glyph.x,\n                y: glyph.y,\n                width: glyph.width,\n                height: glyph.height,\n                offsetX: glyph.offsetX,\n                offsetY: glyph.offsetY,\n                advanceWidth: glyph.advanceWidth\n            };\n            glyphAreaMap[key] = glyphArea;\n        });\n        // NOTE: (defaultGlyphWidth, defaultGlyphHeight)= (0, this.size) とする\n        //\n        // それぞれの役割は第一に `GlyphArea#width`, `GlyphArea#height` が与えられないときの\n        // デフォルト値である。ここでは必ず与えているのでデフォルト値としては利用されない。\n        // しかし defaultGlyphHeight は BitmapFont#size にも用いられる。\n        // そのために this.size をコンストラクタの第４引数に与えることにする。\n        // @ts-ignore\n        var missingGlyph = glyphAreaMap[missingGlyphCharCodePoint];\n        var atlas = this._atlasSet.getAtlas(0);\n        var size = atlas.getAtlasUsedSize();\n        var surface = this._resourceFactory.createSurface(size.width, size.height);\n        var renderer = surface.renderer();\n        renderer.begin();\n        renderer.drawImage(atlas._surface, 0, 0, size.width, size.height, 0, 0);\n        renderer.end();\n        var bitmapFont = new BitmapFont_1.BitmapFont({\n            src: surface,\n            map: glyphAreaMap,\n            defaultGlyphWidth: 0,\n            defaultGlyphHeight: this.size,\n            missingGlyph: missingGlyph\n        });\n        return bitmapFont;\n    };\n    DynamicFont.prototype.destroy = function () {\n        if (this._isSurfaceAtlasSetOwner) {\n            this._atlasSet.destroy();\n        }\n        this._glyphs = undefined;\n        this._glyphFactory = undefined;\n        this._destroyed = true;\n    };\n    DynamicFont.prototype.destroyed = function () {\n        return this._destroyed;\n    };\n    return DynamicFont;\n}(Font_1.Font));\nexports.DynamicFont = DynamicFont;\n//# sourceMappingURL=DynamicFont.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/DynamicFont.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/EntityStateFlags.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/EntityStateFlags.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=EntityStateFlags.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/EntityStateFlags.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Event.js":
/*!***********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Event.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SeedEvent = exports.PlayerInfoEvent = exports.TimestampEvent = exports.LeaveEvent = exports.JoinEvent = exports.OperationEvent = exports.MessageEvent = exports.PointMoveEventBase = exports.PointUpEventBase = exports.PointDownEventBase = exports.PointEventBase = void 0;\n/**\n * ポインティング操作を表すイベントの基底クラス。\n * PointEvent#targetでそのポインティング操作の対象が、\n * PointEvent#pointでその対象からの相対座標が取得できる。\n *\n * 本イベントはマルチタッチに対応しており、PointEvent#pointerIdを参照することで識別することが出来る。\n *\n * abstract\n */\nvar PointEventBase = /** @class */ (function () {\n    function PointEventBase(pointerId, target, point, player, local, eventFlags, button) {\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.local = !!local;\n        this.player = player;\n        this.pointerId = pointerId;\n        this.target = target;\n        this.point = point;\n        this.button = button !== null && button !== void 0 ? button : 0;\n    }\n    return PointEventBase;\n}());\nexports.PointEventBase = PointEventBase;\n/**\n * ポインティング操作の開始を表すイベントの基底クラス。\n */\nvar PointDownEventBase = /** @class */ (function (_super) {\n    __extends(PointDownEventBase, _super);\n    function PointDownEventBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"point-down\";\n        return _this;\n    }\n    return PointDownEventBase;\n}(PointEventBase));\nexports.PointDownEventBase = PointDownEventBase;\n/**\n * ポインティング操作の終了を表すイベントの基底クラス。\n * PointDownEvent後にのみ発生する。\n *\n * PointUpEvent#startDeltaによってPointDownEvent時からの移動量が、\n * PointUpEvent#prevDeltaによって直近のPointMoveEventからの移動量が取得出来る。\n * PointUpEvent#pointにはPointDownEvent#pointと同じ値が格納される。\n */\nvar PointUpEventBase = /** @class */ (function (_super) {\n    __extends(PointUpEventBase, _super);\n    function PointUpEventBase(pointerId, target, point, prevDelta, startDelta, player, local, eventFlags, button) {\n        var _this = _super.call(this, pointerId, target, point, player, local, eventFlags, button) || this;\n        _this.type = \"point-up\";\n        _this.prevDelta = prevDelta;\n        _this.startDelta = startDelta;\n        return _this;\n    }\n    return PointUpEventBase;\n}(PointEventBase));\nexports.PointUpEventBase = PointUpEventBase;\n/**\n * ポインティング操作の移動を表すイベント。\n * PointDownEvent後にのみ発生するため、MouseMove相当のものが本イベントとして発生することはない。\n *\n * PointMoveEvent#startDeltaによってPointDownEvent時からの移動量が、\n * PointMoveEvent#prevDeltaによって直近のPointMoveEventからの移動量が取得出来る。\n * PointMoveEvent#pointにはPointMoveEvent#pointと同じ値が格納される。\n *\n * 本イベントは、プレイヤーがポインティングデバイスを移動していなくても、\n * カメラの移動等視覚的にポイントが変化している場合にも発生する。\n */\nvar PointMoveEventBase = /** @class */ (function (_super) {\n    __extends(PointMoveEventBase, _super);\n    function PointMoveEventBase(pointerId, target, point, prevDelta, startDelta, player, local, eventFlags, button) {\n        var _this = _super.call(this, pointerId, target, point, player, local, eventFlags, button) || this;\n        _this.type = \"point-move\";\n        _this.prevDelta = prevDelta;\n        _this.startDelta = startDelta;\n        return _this;\n    }\n    return PointMoveEventBase;\n}(PointEventBase));\nexports.PointMoveEventBase = PointMoveEventBase;\n/**\n * 汎用的なメッセージを表すイベント。\n * MessageEvent#dataによってメッセージ内容を取得出来る。\n */\nvar MessageEvent = /** @class */ (function () {\n    function MessageEvent(data, player, local, eventFlags) {\n        this.type = \"message\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.local = !!local;\n        this.player = player;\n        this.data = data;\n    }\n    return MessageEvent;\n}());\nexports.MessageEvent = MessageEvent;\n/**\n * 操作プラグインが通知する操作を表すイベント。\n * プラグインを識別する `OperationEvent#code` と、プラグインごとの内容 `OperationEvent#data` を持つ。\n */\nvar OperationEvent = /** @class */ (function () {\n    function OperationEvent(code, data, player, local, eventFlags) {\n        this.type = \"operation\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.local = !!local;\n        this.player = player;\n        this.code = code;\n        this.data = data;\n    }\n    return OperationEvent;\n}());\nexports.OperationEvent = OperationEvent;\n/**\n * プレイヤーの参加を表すイベント。\n * JoinEvent#playerによって、参加したプレイヤーを取得出来る。\n */\nvar JoinEvent = /** @class */ (function () {\n    function JoinEvent(player, eventFlags) {\n        this.type = \"join\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.player = player;\n    }\n    return JoinEvent;\n}());\nexports.JoinEvent = JoinEvent;\n/**\n * プレイヤーの離脱を表すイベント。\n * LeaveEvent#playerによって、離脱したプレイヤーを取得出来る。\n */\nvar LeaveEvent = /** @class */ (function () {\n    function LeaveEvent(player, eventFlags) {\n        this.type = \"leave\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.player = player;\n    }\n    return LeaveEvent;\n}());\nexports.LeaveEvent = LeaveEvent;\n/**\n * タイムスタンプを表すイベント。\n */\nvar TimestampEvent = /** @class */ (function () {\n    function TimestampEvent(timestamp, player, eventFlags) {\n        this.type = \"timestamp\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.player = player;\n        this.timestamp = timestamp;\n    }\n    return TimestampEvent;\n}());\nexports.TimestampEvent = TimestampEvent;\n/**\n * プレイヤー情報を表すイベント。\n * PointInfoEvent#player.nameによってプレイヤー名を、PlayerInfoEvent#player.userDataによって送信者依存の追加データを取得できる。\n */\nvar PlayerInfoEvent = /** @class */ (function () {\n    function PlayerInfoEvent(player, eventFlags) {\n        this.type = \"player-info\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.player = player;\n    }\n    return PlayerInfoEvent;\n}());\nexports.PlayerInfoEvent = PlayerInfoEvent;\n/**\n * 新しい乱数の発生を表すイベント。\n * SeedEvent#generatorによって、本イベントで発生したRandomGeneratorを取得出来る。\n */\nvar SeedEvent = /** @class */ (function () {\n    function SeedEvent(generator, eventFlags) {\n        this.type = \"seed\";\n        // @ts-ignore TODO: eventFlags のデフォルト値の扱い\n        this.eventFlags = eventFlags;\n        this.generator = generator;\n    }\n    return SeedEvent;\n}());\nexports.SeedEvent = SeedEvent;\n//# sourceMappingURL=Event.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Event.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/EventConverter.js":
/*!********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/EventConverter.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EventConverter = void 0;\nvar E_1 = __webpack_require__(/*! ./entities/E */ \"./node_modules/@akashic/akashic-engine/lib/entities/E.js\");\nvar Event_1 = __webpack_require__(/*! ./Event */ \"./node_modules/@akashic/akashic-engine/lib/Event.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\n/**\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n * @ignore\n */\nvar EventConverter = /** @class */ (function () {\n    function EventConverter(param) {\n        var _a;\n        this._game = param.game;\n        this._playerId = (_a = param.playerId) !== null && _a !== void 0 ? _a : null;\n        this._playerTable = {};\n    }\n    /**\n     * playlog.Eventからg.Eventへ変換する。\n     */\n    EventConverter.prototype.toGameEvent = function (pev) {\n        var pointerId;\n        var entityId;\n        var target;\n        var point;\n        var startDelta;\n        var prevDelta;\n        var local;\n        var timestamp;\n        var button;\n        var eventCode = pev[0 /* EventIndex.General.Code */];\n        var prio = pev[1 /* EventIndex.General.EventFlags */];\n        var playerId = pev[2 /* EventIndex.General.PlayerId */];\n        // @ts-ignore\n        var player = this._playerTable[playerId] || { id: playerId };\n        switch (eventCode) {\n            case 0 /* pl.EventCode.Join */:\n                player = {\n                    id: playerId,\n                    name: pev[3 /* EventIndex.Join.PlayerName */]\n                };\n                // @ts-ignore\n                if (this._playerTable[playerId] && this._playerTable[playerId].userData != null) {\n                    // @ts-ignore\n                    player.userData = this._playerTable[playerId].userData;\n                }\n                // @ts-ignore\n                this._playerTable[playerId] = player;\n                return new Event_1.JoinEvent(player, prio);\n            case 1 /* pl.EventCode.Leave */:\n                delete this._playerTable[player.id];\n                return new Event_1.LeaveEvent(player, prio);\n            case 2 /* pl.EventCode.Timestamp */:\n                timestamp = pev[3 /* EventIndex.Timestamp.Timestamp */];\n                return new Event_1.TimestampEvent(timestamp, player, prio);\n            case 3 /* pl.EventCode.PlayerInfo */:\n                var playerName = pev[3 /* EventIndex.PlayerInfo.PlayerName */];\n                var userData = pev[4 /* EventIndex.PlayerInfo.UserData */];\n                player = {\n                    id: playerId,\n                    name: playerName,\n                    userData: userData\n                };\n                // @ts-ignore\n                this._playerTable[playerId] = player;\n                return new Event_1.PlayerInfoEvent(player, prio);\n            case 32 /* pl.EventCode.Message */:\n                local = pev[4 /* EventIndex.Message.Local */];\n                return new Event_1.MessageEvent(pev[3 /* EventIndex.Message.Message */], player, local, prio);\n            case 33 /* pl.EventCode.PointDown */:\n                local = pev[8 /* EventIndex.PointDown.Local */];\n                pointerId = pev[3 /* EventIndex.PointDown.PointerId */];\n                entityId = pev[6 /* EventIndex.PointDown.EntityId */];\n                target = entityId == null ? undefined : entityId >= 0 ? this._game.db.get(entityId) : this._game._localDb.get(entityId);\n                point = {\n                    x: pev[4 /* EventIndex.PointDown.X */],\n                    y: pev[5 /* EventIndex.PointDown.Y */]\n                };\n                button = pev[7 /* EventIndex.PointDown.Button */];\n                return new E_1.PointDownEvent(pointerId, target, point, player, local, prio, button);\n            case 34 /* pl.EventCode.PointMove */:\n                local = pev[12 /* EventIndex.PointMove.Local */];\n                pointerId = pev[3 /* EventIndex.PointMove.PointerId */];\n                entityId = pev[10 /* EventIndex.PointMove.EntityId */];\n                target = entityId == null ? undefined : entityId >= 0 ? this._game.db.get(entityId) : this._game._localDb.get(entityId);\n                point = {\n                    x: pev[4 /* EventIndex.PointMove.X */],\n                    y: pev[5 /* EventIndex.PointMove.Y */]\n                };\n                startDelta = {\n                    x: pev[6 /* EventIndex.PointMove.StartDeltaX */],\n                    y: pev[7 /* EventIndex.PointMove.StartDeltaY */]\n                };\n                prevDelta = {\n                    x: pev[8 /* EventIndex.PointMove.PrevDeltaX */],\n                    y: pev[9 /* EventIndex.PointMove.PrevDeltaY */]\n                };\n                button = pev[11 /* EventIndex.PointMove.Button */];\n                return new E_1.PointMoveEvent(pointerId, target, point, prevDelta, startDelta, player, local, prio, button);\n            case 35 /* pl.EventCode.PointUp */:\n                local = pev[12 /* EventIndex.PointUp.Local */];\n                pointerId = pev[3 /* EventIndex.PointUp.PointerId */];\n                entityId = pev[10 /* EventIndex.PointUp.EntityId */];\n                target = entityId == null ? undefined : entityId >= 0 ? this._game.db.get(entityId) : this._game._localDb.get(entityId);\n                point = {\n                    x: pev[4 /* EventIndex.PointUp.X */],\n                    y: pev[5 /* EventIndex.PointUp.Y */]\n                };\n                startDelta = {\n                    x: pev[6 /* EventIndex.PointUp.StartDeltaX */],\n                    y: pev[7 /* EventIndex.PointUp.StartDeltaY */]\n                };\n                prevDelta = {\n                    x: pev[8 /* EventIndex.PointUp.PrevDeltaX */],\n                    y: pev[9 /* EventIndex.PointUp.PrevDeltaY */]\n                };\n                button = pev[11 /* EventIndex.PointUp.Button */];\n                return new E_1.PointUpEvent(pointerId, target, point, prevDelta, startDelta, player, local, prio, button);\n            case 64 /* pl.EventCode.Operation */:\n                local = pev[5 /* EventIndex.Operation.Local */];\n                var operationCode = pev[3 /* EventIndex.Operation.OperationCode */];\n                var operationData = pev[4 /* EventIndex.Operation.OperationData */];\n                var decodedData = this._game._decodeOperationPluginOperation(operationCode, operationData);\n                return new Event_1.OperationEvent(operationCode, decodedData, player, local, prio);\n            default:\n                // TODO handle error\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"EventConverter#toGameEvent\");\n        }\n    };\n    /**\n     * g.Eventからplaylog.Eventに変換する。\n     */\n    EventConverter.prototype.toPlaylogEvent = function (e, preservePlayer) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var targetId;\n        var playerId;\n        switch (e.type) {\n            case \"join\":\n            case \"leave\":\n                // akashic-engine は決して Join と Leave を生成しない\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"EventConverter#toPlaylogEvent: Invalid type: \" + e.type);\n            case \"timestamp\":\n                var ts = e;\n                playerId = preservePlayer ? ((_a = ts.player.id) !== null && _a !== void 0 ? _a : null) : this._playerId;\n                return [\n                    2 /* pl.EventCode.Timestamp */, // 0: イベントコード\n                    ts.eventFlags, //          1: イベントフラグ値\n                    playerId, //               2: プレイヤーID\n                    ts.timestamp //            3: タイムスタンプ\n                ];\n            case \"player-info\":\n                var playerInfo = e;\n                playerId = preservePlayer ? ((_b = playerInfo.player.id) !== null && _b !== void 0 ? _b : null) : this._playerId;\n                return [\n                    3 /* pl.EventCode.PlayerInfo */, //   0: イベントコード\n                    playerInfo.eventFlags, //     1: イベントフラグ値\n                    playerId, //                  2: プレイヤーID\n                    playerInfo.player.name, //    3: プレイヤー名\n                    playerInfo.player.userData // 4: ユーザデータ\n                ];\n            case \"point-down\":\n                var pointDown = e;\n                targetId = pointDown.target ? pointDown.target.id : null;\n                playerId = preservePlayer && pointDown.player ? ((_c = pointDown.player.id) !== null && _c !== void 0 ? _c : null) : this._playerId;\n                return [\n                    33 /* pl.EventCode.PointDown */, // 0: イベントコード\n                    pointDown.eventFlags, //   1: イベントフラグ値\n                    playerId, //               2: プレイヤーID\n                    pointDown.pointerId, //    3: ポインターID\n                    pointDown.point.x, //      4: X座標\n                    pointDown.point.y, //      5: Y座標\n                    targetId, //               6?: エンティティID\n                    pointDown.button, //       7?: ボタンの種類\n                    !!pointDown.local //       8?: ローカルイベントかどうか\n                ];\n            case \"point-move\":\n                var pointMove = e;\n                targetId = pointMove.target ? pointMove.target.id : null;\n                playerId = preservePlayer && pointMove.player ? ((_d = pointMove.player.id) !== null && _d !== void 0 ? _d : null) : this._playerId;\n                return [\n                    34 /* pl.EventCode.PointMove */, // 0: イベントコード\n                    pointMove.eventFlags, //   1: イベントフラグ値\n                    playerId, //               2: プレイヤーID\n                    pointMove.pointerId, //    3: ポインターID\n                    pointMove.point.x, //      4: X座標\n                    pointMove.point.y, //      5: Y座標\n                    pointMove.startDelta.x, // 6: ポイントダウンイベントからのX座標の差\n                    pointMove.startDelta.y, // 7: ポイントダウンイベントからのY座標の差\n                    pointMove.prevDelta.x, //  8: 直前のポイントムーブイベントからのX座標の差\n                    pointMove.prevDelta.y, //  9: 直前のポイントムーブイベントからのY座標の差\n                    targetId, //               10?: エンティティID\n                    pointMove.button, //       11?:\n                    !!pointMove.local //       12?: ローカルイベントかどうか\n                ];\n            case \"point-up\":\n                var pointUp = e;\n                targetId = pointUp.target ? pointUp.target.id : null;\n                playerId = preservePlayer && pointUp.player ? ((_e = pointUp.player.id) !== null && _e !== void 0 ? _e : null) : this._playerId;\n                return [\n                    35 /* pl.EventCode.PointUp */, // 0: イベントコード\n                    pointUp.eventFlags, //   1: イベントフラグ値\n                    playerId, //             2: プレイヤーID\n                    pointUp.pointerId, //    3: ポインターID\n                    pointUp.point.x, //      4: X座標\n                    pointUp.point.y, //      5: Y座標\n                    pointUp.startDelta.x, // 6: ポイントダウンイベントからのX座標の差\n                    pointUp.startDelta.y, // 7: ポイントダウンイベントからのY座標の差\n                    pointUp.prevDelta.x, //  8: 直前のポイントムーブイベントからのX座標の差\n                    pointUp.prevDelta.y, //  9: 直前のポイントムーブイベントからのY座標の差\n                    targetId, //             10?: エンティティID\n                    pointUp.button, //       11?:\n                    !!pointUp.local //       12?: ローカルイベントかどうか\n                ];\n            case \"message\":\n                var message = e;\n                playerId = preservePlayer && message.player ? ((_f = message.player.id) !== null && _f !== void 0 ? _f : null) : this._playerId;\n                return [\n                    32 /* pl.EventCode.Message */, // 0: イベントコード\n                    message.eventFlags, //   1: イベントフラグ値\n                    playerId, //             2: プレイヤーID\n                    message.data, //         3: 汎用的なデータ\n                    !!message.local //       4?: ローカル\n                ];\n            case \"operation\":\n                var op = e;\n                playerId = preservePlayer && op.player ? ((_g = op.player.id) !== null && _g !== void 0 ? _g : null) : this._playerId;\n                return [\n                    64 /* pl.EventCode.Operation */, // 0: イベントコード\n                    op.eventFlags, //          1: イベントフラグ値\n                    playerId, //               2: プレイヤーID\n                    op.code, //                3: 操作プラグインコード\n                    op.data, //                4: 操作プラグインデータ\n                    !!op.local //              5?: ローカル\n                ];\n            default:\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Unknown type: \" + e.type);\n        }\n    };\n    EventConverter.prototype.makePlaylogOperationEvent = function (op) {\n        var playerId = this._playerId;\n        var eventFlags = op.priority != null ? op.priority & 3 /* pl.EventFlagsMask.Priority */ : 0;\n        return [\n            64 /* pl.EventCode.Operation */, // 0: イベントコード\n            eventFlags, //             1: イベントフラグ値\n            playerId, //               2: プレイヤーID\n            op._code, //               3: 操作プラグインコード\n            op.data, //                4: 操作プラグインデータ\n            !!op.local //              5: ローカル\n        ];\n    };\n    return EventConverter;\n}());\nexports.EventConverter = EventConverter;\n//# sourceMappingURL=EventConverter.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/EventConverter.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/EventFilter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/EventFilter.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=EventFilter.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/EventFilter.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/EventFilterController.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/EventFilterController.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=EventFilterController.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/EventFilterController.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/EventIndex.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/EventIndex.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=EventIndex.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/EventIndex.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/EventPriority.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/EventPriority.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=EventPriority.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/EventPriority.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExceptionFactory = void 0;\n/**\n * 例外生成ファクトリ。\n * エンジン内部での例外生成に利用するもので、ゲーム開発者は通常本モジュールを利用する必要はない。\n */\nvar ExceptionFactory;\n(function (ExceptionFactory) {\n    function createAssertionError(message, cause) {\n        var e = new Error(message);\n        e.name = \"AssertionError\";\n        e.cause = cause;\n        return e;\n    }\n    ExceptionFactory.createAssertionError = createAssertionError;\n    function createTypeMismatchError(methodName, expected, actual, cause) {\n        var message = \"Type mismatch on \" + methodName + \",\" + \" expected type is \" + expected;\n        if (arguments.length > 2) {\n            // actual 指定時\n            try {\n                var actualString = void 0;\n                if (actual && actual.constructor && actual.constructor.name) {\n                    actualString = actual.constructor.name;\n                }\n                else {\n                    actualString = typeof actual;\n                }\n                message += \", actual type is \" + (actualString.length > 40 ? actualString.substr(0, 40) : actualString);\n            }\n            catch (_ex) {\n                // メッセージ取得時に例外が発生したらactualの型情報出力はあきらめる\n            }\n        }\n        message += \".\";\n        var e = new Error(message);\n        e.name = \"TypeMismatchError\";\n        e.cause = cause;\n        e.expected = expected;\n        e.actual = actual;\n        return e;\n    }\n    ExceptionFactory.createTypeMismatchError = createTypeMismatchError;\n    function createAssetLoadError(message, retriable, _type, // 歴史的経緯により残っている値。利用していない。\n    cause) {\n        if (retriable === void 0) { retriable = true; }\n        if (_type === void 0) { _type = null; }\n        var e = new Error(message);\n        e.name = \"AssetLoadError\";\n        e.cause = cause;\n        e.retriable = retriable;\n        return e;\n    }\n    ExceptionFactory.createAssetLoadError = createAssetLoadError;\n    function createRequestAssetLoadError(message, detail, cause) {\n        var e = new Error(message);\n        e.name = \"RequestAssetLoadError\";\n        e.detail = detail;\n        e.cause = cause;\n        return e;\n    }\n    ExceptionFactory.createRequestAssetLoadError = createRequestAssetLoadError;\n})(ExceptionFactory || (exports.ExceptionFactory = ExceptionFactory = {}));\n//# sourceMappingURL=ExceptionFactory.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Font.js":
/*!**********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Font.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Font = void 0;\nvar Util_1 = __webpack_require__(/*! ./Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\");\n/**\n * フォント。\n */\nvar Font = /** @class */ (function () {\n    function Font() {\n    }\n    /**\n     * 対象の文字列を一行で描画した際の計測情報を返す。\n     *\n     * @param text 文字列\n     */\n    Font.prototype.measureText = function (text) {\n        var width = 0;\n        var actualBoundingBoxLeft = 0;\n        var actualBoundingBoxRight = 0;\n        var lastGlyph = null;\n        for (var i = 0; i < text.length; i++) {\n            var code = Util_1.Util.charCodeAt(text, i);\n            if (!code)\n                continue;\n            var glyph = this.glyphForCharacter(code);\n            if (!glyph || glyph.x < 0 || glyph.y < 0 || glyph.width < 0 || glyph.height < 0)\n                continue;\n            if (i === 0) {\n                actualBoundingBoxLeft = -glyph.offsetX;\n            }\n            lastGlyph = glyph;\n            width += glyph.advanceWidth;\n        }\n        if (lastGlyph) {\n            actualBoundingBoxRight = width + lastGlyph.offsetX + lastGlyph.width - lastGlyph.advanceWidth;\n        }\n        return {\n            width: width,\n            actualBoundingBoxLeft: actualBoundingBoxLeft,\n            actualBoundingBoxRight: actualBoundingBoxRight\n        };\n    };\n    return Font;\n}());\nexports.Font = Font;\n//# sourceMappingURL=Font.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Font.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Game.js":
/*!**********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Game.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Game = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar AssetAccessor_1 = __webpack_require__(/*! ./AssetAccessor */ \"./node_modules/@akashic/akashic-engine/lib/AssetAccessor.js\");\nvar AssetManager_1 = __webpack_require__(/*! ./AssetManager */ \"./node_modules/@akashic/akashic-engine/lib/AssetManager.js\");\nvar AudioSystemManager_1 = __webpack_require__(/*! ./AudioSystemManager */ \"./node_modules/@akashic/akashic-engine/lib/AudioSystemManager.js\");\nvar DefaultLoadingScene_1 = __webpack_require__(/*! ./DefaultLoadingScene */ \"./node_modules/@akashic/akashic-engine/lib/DefaultLoadingScene.js\");\nvar DefaultSkippingScene_1 = __webpack_require__(/*! ./DefaultSkippingScene */ \"./node_modules/@akashic/akashic-engine/lib/DefaultSkippingScene.js\");\nvar EventConverter_1 = __webpack_require__(/*! ./EventConverter */ \"./node_modules/@akashic/akashic-engine/lib/EventConverter.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar InitialScene_1 = __webpack_require__(/*! ./InitialScene */ \"./node_modules/@akashic/akashic-engine/lib/InitialScene.js\");\nvar LoadingScene_1 = __webpack_require__(/*! ./LoadingScene */ \"./node_modules/@akashic/akashic-engine/lib/LoadingScene.js\");\nvar ModuleManager_1 = __webpack_require__(/*! ./ModuleManager */ \"./node_modules/@akashic/akashic-engine/lib/ModuleManager.js\");\nvar OperationPluginManager_1 = __webpack_require__(/*! ./OperationPluginManager */ \"./node_modules/@akashic/akashic-engine/lib/OperationPluginManager.js\");\nvar PointEventResolver_1 = __webpack_require__(/*! ./PointEventResolver */ \"./node_modules/@akashic/akashic-engine/lib/PointEventResolver.js\");\nvar SurfaceAtlasSet_1 = __webpack_require__(/*! ./SurfaceAtlasSet */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSet.js\");\nvar WeakRefKVS_1 = __webpack_require__(/*! ./WeakRefKVS */ \"./node_modules/@akashic/akashic-engine/lib/WeakRefKVS.js\");\nvar XorshiftRandomGenerator_1 = __webpack_require__(/*! ./XorshiftRandomGenerator */ \"./node_modules/@akashic/akashic-engine/lib/XorshiftRandomGenerator.js\");\n/**\n * コンテンツそのものを表すクラス。\n *\n * 本クラスのインスタンスは暗黙に生成され、ゲーム開発者が生成することはない。\n * ゲーム開発者は `g.game` によって本クラスのインスタンスを参照できる。\n *\n * 本クラスをゲーム開発者が利用するのは以下のようなケースである。\n * 1. Sceneの生成時、コンストラクタに引数として渡す\n * 2. Sceneに紐付かないイベント Game#join, Game#leave, Game#playerInfo, Game#seed を処理する\n * 3. 乱数を発生させるため、Game#randomにアクセスしRandomGeneratorを取得する\n * 4. ゲームのメタ情報を確認するため、Game#width, Game#height, Game#fpsにアクセスする\n * 5. グローバルアセットを取得するため、Game#assetsにアクセスする\n * 6. LoadingSceneを変更するため、Game#loadingSceneにゲーム開発者の定義したLoadingSceneを指定する\n * 7. スナップショットに対応するため、Game#requestSaveSnapshot()を呼び出す\n * 8. 現在フォーカスされているCamera情報を得るため、Game#focusingCameraにアクセスする\n * 9. AudioSystemを直接制御するため、Game#audioにアクセスする\n * 10.Sceneのスタック情報を調べるため、Game#scenesにアクセスする\n * 11.操作プラグインを直接制御するため、Game#operationPluginManagerにアクセスする\n */\nvar Game = /** @class */ (function () {\n    /**\n     * `Game` のインスタンスを生成する。\n     *\n     * @param param この `Game` に指定するパラメータ\n     */\n    function Game(param) {\n        var gameConfiguration = this._normalizeConfiguration(param.configuration);\n        this.fps = gameConfiguration.fps;\n        this.width = gameConfiguration.width;\n        this.height = gameConfiguration.height;\n        this.renderers = [];\n        this.scenes = [];\n        this.age = 0;\n        this.assetBase = param.assetBase || \"\";\n        this.resourceFactory = param.resourceFactory;\n        this.handlerSet = param.handlerSet;\n        this.selfId = param.selfId;\n        this.db = undefined;\n        this.loadingScene = undefined;\n        this.operationPlugins = undefined;\n        this.random = undefined;\n        this.localRandom = undefined;\n        this._defaultLoadingScene = undefined;\n        this._defaultSkippingScene = undefined;\n        this._eventConverter = undefined;\n        this._pointEventResolver = undefined;\n        this._idx = undefined;\n        this._localDb = undefined;\n        this._localIdx = undefined;\n        this._cameraIdx = undefined;\n        this._isTerminated = undefined;\n        this._modified = undefined;\n        this._postTickTasks = undefined;\n        this._toBeDestroyedScenes = [];\n        this.playId = undefined;\n        this.isSkipping = false;\n        this.joinedPlayerIds = [];\n        this.audio = new AudioSystemManager_1.AudioSystemManager(this.resourceFactory);\n        this.defaultAudioSystemId = \"sound\";\n        this.assets = {};\n        this.surfaceAtlasSet = new SurfaceAtlasSet_1.SurfaceAtlasSet({ resourceFactory: this.resourceFactory });\n        this.onJoin = new trigger_1.Trigger();\n        this.onLeave = new trigger_1.Trigger();\n        this.onPlayerInfo = new trigger_1.Trigger();\n        this.onSeed = new trigger_1.Trigger();\n        this.join = this.onJoin;\n        this.leave = this.onLeave;\n        this.playerInfo = this.onPlayerInfo;\n        this.seed = this.onSeed;\n        this._eventTriggerMap = {\n            unknown: undefined,\n            timestamp: undefined,\n            join: this.onJoin,\n            leave: this.onLeave,\n            \"player-info\": this.onPlayerInfo,\n            seed: this.onSeed,\n            message: undefined,\n            \"point-down\": undefined,\n            \"point-move\": undefined,\n            \"point-up\": undefined,\n            operation: undefined\n        };\n        this.onResized = new trigger_1.Trigger();\n        this.onSkipChange = new trigger_1.Trigger();\n        this.resized = this.onResized;\n        this.skippingChanged = this.onSkipChange;\n        this.isLastTickLocal = true;\n        this.lastOmittedLocalTickCount = 0;\n        this.lastLocalTickMode = null;\n        this.lastTickGenerationMode = null;\n        this._onLoad = new trigger_1.Trigger();\n        this._onStart = new trigger_1.Trigger();\n        this._loaded = this._onLoad;\n        this._started = this._onStart;\n        this.isLoaded = false;\n        this.onSnapshotRequest = new trigger_1.Trigger();\n        this.snapshotRequest = this.onSnapshotRequest;\n        this.external = {};\n        this._runtimeValueBase = Object.create(param.engineModule, {\n            game: {\n                value: this,\n                enumerable: true\n            }\n        });\n        this._main = gameConfiguration.main;\n        this._mainFunc = param.mainFunc;\n        this._mainParameter = undefined;\n        this._configuration = gameConfiguration;\n        // TODO: AssetConfiguration[]のサポートができたらこの例外処理は削除する\n        if (Array.isArray(gameConfiguration.assets)) {\n            throw new Error(\"Game#constructor: array type of configuration.assets is not yet supported\");\n        }\n        this._assetManager = new AssetManager_1.AssetManager(this, gameConfiguration.assets, gameConfiguration.audio, gameConfiguration.moduleMainScripts, gameConfiguration.moduleMainPaths);\n        this._moduleManager = undefined;\n        this.asset = new AssetAccessor_1.AssetAccessor(this._assetManager);\n        this.operationPluginManager = new OperationPluginManager_1.OperationPluginManager(this, param.operationPluginViewInfo || null);\n        this._onOperationPluginOperated = new trigger_1.Trigger();\n        this._operationPluginOperated = this._onOperationPluginOperated;\n        this._onOperationPluginOperated.add(this._handleOperationPluginOperated, this);\n        this.onSceneChange = new trigger_1.Trigger();\n        this._onSceneChange = new trigger_1.Trigger();\n        this._onSceneChange.add(this._handleSceneChanged, this);\n        this._sceneChanged = this._onSceneChange;\n        this.onUpdate = new trigger_1.Trigger();\n        this._initialScene = new InitialScene_1.InitialScene({\n            game: this,\n            assetIds: this._assetManager.globalAssetIds(),\n            local: true,\n            name: \"akashic:initial-scene\"\n        });\n        this._initialScene.onAllAssetsLoad.add(this._handleInitialSceneLoad, this);\n        this._reset({ age: 0 });\n    }\n    Object.defineProperty(Game.prototype, \"focusingCamera\", {\n        /**\n         * 使用中のカメラ。\n         *\n         * `Game#draw()`, `Game#findPointSource()` のデフォルト値として使用される。\n         * この値を変更した場合、変更を描画に反映するためには `Game#modified()` を呼び出す必要がある。\n         */\n        // focusingCameraが変更されても古いカメラをtargetCamerasに持つエンティティのEntityStateFlags.Modifiedを取りこぼすことが無いように、変更時にはrenderを呼べるようアクセサを使う\n        get: function () {\n            return this._focusingCamera;\n        },\n        set: function (c) {\n            if (c === this._focusingCamera)\n                return;\n            if (this._modified)\n                this.render();\n            this._focusingCamera = c;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Game.prototype, \"skippingScene\", {\n        /**\n         * スキッピングシーン。\n         * ゲームが早送りとなった際に描画される特殊なシーンであり、以下の制限を持つ。\n         *\n         * * サポートするシーンの種別は \"full-local\" のみ\n         * * 非グローバルアセットを利用してはならない\n         * * シーン内で発生した一切のイベントは処理されない\n         * * 早送りが複数回発生した場合でも、対象のシーンの onLoad は2度目以降発火せずにインスタンスが使い回される\n         *\n         * 初期値は `undefined` である。\n         */\n        get: function () {\n            return this._skippingScene;\n        },\n        set: function (scene) {\n            if (scene === this._skippingScene)\n                return;\n            if (scene) {\n                if (scene.local !== \"full-local\") {\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#skippingScene: only 'full-local' scene is supported.\");\n                }\n                if (scene._needsLoading()) {\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#skippingScene: must not depend on any assets.\");\n                }\n            }\n            this._skippingScene = scene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * シーンスタックへのシーンの追加と、そのシーンへの遷移を要求する。\n     *\n     * このメソッドは要求を行うだけである。呼び出し直後にはシーン遷移は行われていないことに注意。\n     * 実際のシーン遷移は現在のフレームの終わり(Scene#update の fire 後) まで遅延される。\n     * このメソッドの呼び出しにより、現在のシーンの `stateChanged` が引数 `\"deactive\"` でfireされる。\n     * その後 `scene.stateChanged` が引数 `\"active\"` でfireされる。\n     * @param scene 遷移後のシーン\n     * @param option 遷移時のオプション\n     */\n    Game.prototype.pushScene = function (scene, option) {\n        this._postTickTasks.push({\n            type: 0 /* PostTickTaskType.PushScene */,\n            scene: scene,\n            prepare: option === null || option === void 0 ? void 0 : option.prepare\n        });\n    };\n    Game.prototype.replaceScene = function (scene, preserveCurrentOrOption) {\n        var preserveCurrent;\n        var prepare;\n        if (typeof preserveCurrentOrOption === \"object\") {\n            preserveCurrent = !!preserveCurrentOrOption.preserveCurrent;\n            prepare = preserveCurrentOrOption.prepare;\n        }\n        else {\n            preserveCurrent = !!preserveCurrentOrOption;\n        }\n        this._postTickTasks.push({\n            type: 1 /* PostTickTaskType.ReplaceScene */,\n            scene: scene,\n            preserveCurrent: preserveCurrent,\n            prepare: prepare\n        });\n    };\n    /**\n     * シーンスタックから現在のシーンを取り除くことを要求する\n     *\n     * このメソッドは要求を行うだけである。呼び出し直後にはシーン遷移は行われていないことに注意。\n     * 実際のシーン遷移は次のフレームまでに(次のupdateのfireまでに)行われる。\n     * 引数 `preserve` が偽の場合、このメソッドの呼び出しにより取り除かれたシーンは全て破棄される。\n     * またその時 `stateChanged` が引数 `\"destroyed\"` でfireされる。\n     * その後一つ前のシーンの `stateChanged` が引数 `\"active\"` でfireされる。\n     * また、step数がスタックされているシーンの数以上の場合、例外が投げられる。\n     *\n     * @param preserve 真の場合、シーンを破棄しない(ゲーム開発者が明示的に破棄せねばならない)。省略された場合、偽\n     * @param step 取り除くシーンの数。省略された場合、1\n     */\n    Game.prototype.popScene = function (preserve, step) {\n        if (step === void 0) { step = 1; }\n        for (var i = 0; i < step; i++) {\n            this._postTickTasks.push({ type: 2 /* PostTickTaskType.PopScene */, preserveCurrent: !!preserve });\n        }\n    };\n    /**\n     * 現在のシーンを返す。\n     * ない場合、 `undefined` を返す。\n     */\n    Game.prototype.scene = function () {\n        if (!this.scenes.length)\n            return undefined;\n        return this.scenes[this.scenes.length - 1];\n    };\n    /**\n     * この `Game` の時間経過とそれに伴う処理を行う。\n     *\n     * 現在の `Scene` に対して `Scene#update` をfireし、 `events` に設定されたイベントを処理する。\n     * このメソッドは暗黙に呼び出される。ゲーム開発者がこのメソッドを利用する必要はない。\n     *\n     * 戻り値は呼び出し前後でシーンが変わった(別のシーンに遷移した)場合、真。でなければ偽。\n     * @param advanceAge 偽を与えた場合、`this.age` を進めない。\n     * @param omittedTickCount タイムスタンプ待ちを省略する動作などにより、(前回の呼び出し以降に)省かれたローカルティックの数。省略された場合、 `0` 。\n     * @param events ティックに含ませるイベント。省略された場合、 `undefined` 。\n     */\n    Game.prototype.tick = function (advanceAge, omittedTickCount, events) {\n        var scene = null;\n        if (this._isTerminated)\n            return false;\n        this.isLastTickLocal = !advanceAge;\n        this.lastOmittedLocalTickCount = omittedTickCount || 0;\n        if (this.scenes.length) {\n            scene = this.scenes[this.scenes.length - 1];\n            if (events && events.length) {\n                for (var i = 0; i < events.length; ++i) {\n                    var event = this._eventConverter.toGameEvent(events[i]);\n                    var trigger = this._eventTriggerMap[event.type];\n                    // @ts-ignore 処理の高速化のため以下の箇所のみ型の厳格なチェックをなくす\n                    if (trigger)\n                        trigger.fire(event);\n                }\n            }\n            scene.onUpdate.fire();\n            if (advanceAge)\n                ++this.age;\n        }\n        this.onUpdate.fire();\n        if (this._postTickTasks.length) {\n            this._flushPostTickTasks();\n            return scene !== this.scenes[this.scenes.length - 1];\n        }\n        return false;\n    };\n    /**\n     * このGameを描画する。\n     *\n     * このゲームに紐づけられた `Renderer` (`this.renderers` に含まれるすべての `Renderer` で、この `Game` の描画を行う。\n     * 描画内容に変更がない場合、描画処理がスキップされる点に注意。強制的に描画をする場合は `this.modified()` を呼ぶこと。\n     * このメソッドは暗黙に呼び出される。ゲーム開発者がこのメソッドを利用する必要はない。\n     */\n    Game.prototype.render = function () {\n        var _a;\n        var scene;\n        var skippingScene = (_a = this._skippingScene) !== null && _a !== void 0 ? _a : this._defaultSkippingScene;\n        if (skippingScene && this.isSkipping) {\n            scene = skippingScene;\n            scene.onUpdate.fire();\n        }\n        else {\n            scene = this.scene();\n        }\n        if (!this._modified)\n            return;\n        if (!scene)\n            return;\n        var camera = this.focusingCamera;\n        var renderers = this.renderers; // unsafe\n        // 描画するべき一番底のシーンを先に探しておく\n        var index = this.scenes.length - 1;\n        while (index >= 0 && this.scenes[index].seethrough)\n            --index;\n        var renderBottomIndex = index;\n        for (var i = 0; i < renderers.length; ++i) {\n            var renderer = renderers[i];\n            renderer.begin();\n            renderer.save();\n            renderer.clear();\n            if (camera) {\n                renderer.save();\n                camera._applyTransformToRenderer(renderer);\n            }\n            if (scene === skippingScene) {\n                for (var k = 0; k < scene.children.length; ++k)\n                    scene.children[k].render(renderer, camera);\n            }\n            else {\n                for (var j = renderBottomIndex; j < this.scenes.length; ++j) {\n                    var children = this.scenes[j].children;\n                    for (var k = 0; k < children.length; ++k)\n                        children[k].render(renderer, camera);\n                }\n            }\n            if (camera) {\n                renderer.restore();\n            }\n            renderer.restore();\n            renderer.end();\n        }\n        this._modified = false;\n    };\n    /**\n     * 対象のポイントイベントのターゲットエンティティ(`PointTarget#target`)を解決し、それを補完した playlog.Event を返す。\n     * Down -> Move -> Up とは異なる順番で呼び出された場合 `null` を返す。\n     * このメソッドは暗黙に呼び出される。ゲーム開発者がこのメソッドを利用する必要はない。\n     * @param e プラットフォームのポイントイベント\n     */\n    Game.prototype.resolvePointEvent = function (e) {\n        switch (e.type) {\n            case 0 /* PlatformPointType.Down */:\n                return this._pointEventResolver.pointDown(e);\n            case 1 /* PlatformPointType.Move */:\n                return this._pointEventResolver.pointMove(e);\n            case 2 /* PlatformPointType.Up */:\n                return this._pointEventResolver.pointUp(e);\n        }\n    };\n    /**\n     * その座標に反応する `PointSource` を返す。\n     *\n     * 戻り値は、対象が見つかった場合、 `target` に見つかった `E` を持つ `PointSource` である。\n     * 対象が見つからなかった場合、 `undefined` である。\n     *\n     * 戻り値が `undefined` でない場合、その `target` プロパティは次を満たす:\n     * - `E#touchable` が真である\n     * - カメラ `camera` から可視である中で最も手前にある\n     *\n     * @param point 対象の座標\n     * @param camera 対象のカメラ。指定しなければ `Game.focusingCamera` が使われる\n     */\n    Game.prototype.findPointSource = function (point, camera) {\n        if (!camera)\n            camera = this.focusingCamera;\n        var scene = this.scene();\n        if (!scene)\n            return undefined;\n        return scene.findPointSourceByPoint(point, false, camera);\n    };\n    /**\n     * このGameにエンティティを登録する。\n     *\n     * このメソッドは各エンティティに対して暗黙に呼び出される。ゲーム開発者がこのメソッドを明示的に利用する必要はない。\n     * `e.id` が `undefined` である場合、このメソッドの呼び出し後、 `e.id` には `this` に一意の値が設定される。\n     * `e.local` が偽である場合、このメソッドの呼び出し後、 `this.db[e.id] === e` が成立する。\n     * `e.local` が真である場合、 `e.id` の値は不定である。\n     *\n     * @param e 登録するエンティティ\n     */\n    Game.prototype.register = function (e) {\n        if (e.local) {\n            if (e.id === undefined) {\n                e.id = --this._localIdx;\n            }\n            else {\n                // register前にidがある: スナップショットからの復元用パス\n                // スナップショットはローカルエンティティを残さないはずだが、実装上はできるようにしておく。\n                if (e.id > 0)\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#register: invalid local id: \" + e.id);\n                if (this._localDb.has(e.id))\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#register: conflicted id: \" + e.id);\n                if (this._localIdx > e.id)\n                    this._localIdx = e.id;\n            }\n            this._localDb.set(e.id, e);\n        }\n        else {\n            if (e.id === undefined) {\n                e.id = ++this._idx;\n            }\n            else {\n                // register前にidがある: スナップショットからの復元用パス\n                if (e.id < 0)\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#register: invalid non-local id: \" + e.id);\n                if (this.db.has(e.id))\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#register: conflicted id: \" + e.id);\n                // _idxがユニークな値を作れるよう更新しておく\n                if (this._idx < e.id)\n                    this._idx = e.id;\n            }\n            this.db.set(e.id, e);\n        }\n    };\n    /**\n     * このGameからエンティティの登録を削除する。\n     *\n     * このメソッドは各エンティティに対して暗黙に呼び出される。ゲーム開発者がこのメソッドを明示的に利用する必要はない。\n     * このメソッドの呼び出し後、 `this.db[e.id]` は未定義である。\n     * @param e 登録を削除するエンティティ\n     */\n    Game.prototype.unregister = function (e) {\n        if (e.local) {\n            this._localDb.delete(e.id);\n        }\n        else {\n            this.db.delete(e.id);\n        }\n    };\n    /**\n     * このゲームを終了する。\n     *\n     * エンジンに対して続行の断念を通知する。\n     * このメソッドの呼び出し後、このクライアントの操作要求は送信されない。\n     * またこのクライアントのゲーム実行は行われない(updateを含むイベントのfireはおきない)。\n     */\n    Game.prototype.terminateGame = function () {\n        this._isTerminated = true;\n        this._terminateGame();\n    };\n    /**\n     * 画面更新が必要のフラグを設定する。\n     */\n    Game.prototype.modified = function () {\n        this._modified = true;\n    };\n    /**\n     * イベントを発生させる。\n     *\n     * ゲーム開発者は、このメソッドを呼び出すことで、エンジンに指定のイベントを発生させることができる。\n     *\n     * @param e 発生させるイベント\n     */\n    Game.prototype.raiseEvent = function (e) {\n        this.handlerSet.raiseEvent(this._eventConverter.toPlaylogEvent(e));\n    };\n    /**\n     * ティックを発生させる。\n     *\n     * ゲーム開発者は、このメソッドを呼び出すことで、エンジンに時間経過を要求することができる。\n     * 現在のシーンのティック生成モード `Scene#tickGenerationMode` が `\"manual\"` でない場合、エラー。\n     *\n     * @param events そのティックで追加で発生させるイベント\n     */\n    Game.prototype.raiseTick = function (events) {\n        if (events == null || !events.length) {\n            this.handlerSet.raiseTick();\n            return;\n        }\n        var plEvents = [];\n        for (var i = 0; i < events.length; i++) {\n            plEvents.push(this._eventConverter.toPlaylogEvent(events[i]));\n        }\n        this.handlerSet.raiseTick(plEvents);\n    };\n    /**\n     * イベントフィルタを追加する。\n     *\n     * 一つ以上のイベントフィルタが存在する場合、このゲームで発生したイベントは、通常の処理の代わりにイベントフィルタに渡される。\n     * エンジンは、イベントフィルタが戻り値として返したイベントを、まるでそのイベントが発生したかのように処理する。\n     *\n     * イベントフィルタはローカルイベントに対しても適用される。\n     * イベントフィルタはローカルティック補間シーンやローカルシーンの間であっても適用される。\n     * 複数のイベントフィルタが存在する場合、そのすべてが適用される。適用順は登録の順である。\n     *\n     * @param filter 追加するイベントフィルタ\n     * @param handleEmpty イベントが存在しない場合でも定期的にフィルタを呼び出すか否か。省略された場合、偽。\n     */\n    Game.prototype.addEventFilter = function (filter, handleEmpty) {\n        this.handlerSet.addEventFilter(filter, handleEmpty);\n    };\n    /**\n     * イベントフィルタを削除する。\n     *\n     * @param filter 削除するイベントフィルタ\n     */\n    Game.prototype.removeEventFilter = function (filter) {\n        this.handlerSet.removeEventFilter(filter);\n    };\n    /**\n     * このインスタンスにおいてスナップショットの保存を行うべきかを返す。\n     *\n     * スナップショット保存に対応するゲームであっても、\n     * 必ずしもすべてのインスタンスにおいてスナップショット保存を行うべきとは限らない。\n     * たとえば多人数プレイ時には、複数のクライアントで同一のゲームが実行される。\n     * スナップショットを保存するのはそのうちの一つのインスタンスのみでよい。\n     * 本メソッドはそのような場合に、自身がスナップショットを保存すべきかどうかを判定するために用いることができる。\n     *\n     * スナップショット保存に対応するゲームは、このメソッドが真を返す時にのみ `Game#saveSnapshot()` を呼び出すべきである。\n     * 戻り値は、スナップショットの保存を行うべきであれば真、でなければ偽である。\n     *\n     * @deprecated 非推奨である。`saveSnapshot()` (非推奨) の利用時にしか必要ないため。アクティブインスタンスの判定には `isActiveInstance()` を用いること。\n     */\n    Game.prototype.shouldSaveSnapshot = function () {\n        return this.handlerSet.shouldSaveSnapshot();\n    };\n    /**\n     * スナップショットを保存する。\n     *\n     * このメソッドは `Game#shouldSaveSnapshot()` が真を返す `Game` に対してのみ呼び出されるべきである。\n     * そうでない場合、このメソッドの動作は不定である。\n     *\n     * このメソッドで保存されたスナップショットは、\n     * main スクリプト (ゲーム開始時に最初に実行されるスクリプト) の関数に、\n     * 引数 (の `snapshot` プロパティ) として与えられる場合がある。\n     * (e.g. マルチプレイのゲームプレイ画面を途中から開いた場合)\n     * スナップショットが与えられた場合、ゲームはそのスナップショットから保存時の実行状態を復元しなければならない。\n     *\n     * @param snapshot 保存するスナップショット。JSONとして妥当な値でなければならない。\n     * @param timestamp 保存時の時刻。 `g.TimestampEvent` を利用するゲームの場合、それらと同じ基準の時間情報を与えなければならない。\n     * @deprecated 非推奨である。互換性のために残されているが、この関数では適切なタイミングのスナップショット保存ができない場合がある。代わりに `requestSaveSnapshot()` を利用すること。\n     */\n    Game.prototype.saveSnapshot = function (snapshot, timestamp) {\n        this.handlerSet.saveSnapshot(this.age, snapshot, this.random.serialize(), this._idx, timestamp);\n    };\n    /**\n     * スナップショットを保存する。\n     *\n     * (`saveSnapshot()` と同じ機能だが、インターフェースが異なる。こちらを利用すること。)\n     *\n     * 引数として与えた関数 `func()` がフレームの終了時に呼び出される。\n     * エンジンは、`func()` の返した値に基づいて、実行環境にスナップショットの保存を要求する。\n     *\n     * 保存されたスナップショットは、必要に応じてゲームの起動時に与えられる。\n     * 詳細は `g.GameMainParameterObject` を参照のこと。\n     *\n     * このメソッドを 1 フレーム中に複数回呼び出した場合、引数に与えた関数 `func()` の呼び出し順は保証されない。\n     * (スナップショットはフレームごとに定まるので、1フレーム中に複数回呼び出す必要はない。)\n     *\n     * @param func フレーム終了時に呼び出す関数。 `SnapshotSaveRequest` を返した場合、スナップショット保存が要求される。\n     * @param owner func の呼び出し時に `this` として使われる値。指定しなかった場合、 `undefined` 。\n     */\n    Game.prototype.requestSaveSnapshot = function (func, owner) {\n        var _this = this;\n        // 他の箇所と異なり push でなく unshift しているのは、他の処理 (シーン遷移処理) と重なった時に先行するため。\n        // 効率はよくないが、このメソッドの利用頻度は高くないので許容。\n        this._postTickTasks.unshift({\n            type: 3 /* PostTickTaskType.Call */,\n            fun: function () {\n                if (!_this.handlerSet.shouldSaveSnapshot())\n                    return;\n                var req = func.call(owner);\n                if (!req)\n                    return; // (null に限らず) falsy は全部弾く。空の値を保存しても不具合の温床にしかならないため。\n                _this.handlerSet.saveSnapshot(_this.age, req.snapshot, _this.random.serialize(), _this._idx, req.timestamp);\n            },\n            owner: null\n        });\n    };\n    /**\n     * 現在時刻を取得する。\n     *\n     * 値は1970-01-01T00:00:00Zからのミリ秒での経過時刻である。\n     * `Date.now()` と異なり、この値は消化されたティックの数から算出される擬似的な時刻である。\n     */\n    Game.prototype.getCurrentTime = function () {\n        return this.handlerSet.getCurrentTime();\n    };\n    /**\n     * このインスタンスがアクティブインスタンスであるかどうか返す。\n     *\n     * ゲーム開発者は、この値の真偽に起因する処理で、ゲームのローカルな実行状態を変更してはならず、\n     * `raiseEvent()` などによって、グローバルな状態を更新する必要がある。\n     */\n    Game.prototype.isActiveInstance = function () {\n        return this.handlerSet.getInstanceType() === \"active\";\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._pushPostTickTask = function (fun, owner) {\n        this._postTickTasks.push({\n            type: 3 /* PostTickTaskType.Call */,\n            fun: fun,\n            owner: owner\n        });\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._popSceneRaw = function (preserveCurrent) {\n        this._postTickTasks.push({ type: 4 /* PostTickTaskType.PopSceneRaw */, preserveCurrent: preserveCurrent });\n    };\n    /**\n     * @private\n     */\n    Game.prototype._normalizeConfiguration = function (gameConfiguration) {\n        if (!gameConfiguration)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_normalizeConfiguration: invalid arguments\");\n        if (gameConfiguration.assets == null)\n            gameConfiguration.assets = {};\n        if (gameConfiguration.fps == null)\n            gameConfiguration.fps = 30;\n        if (typeof gameConfiguration.fps !== \"number\")\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_normalizeConfiguration: fps must be given as a number\");\n        if (!(0 <= gameConfiguration.fps && gameConfiguration.fps <= 60))\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_normalizeConfiguration: fps must be a number in (0, 60].\");\n        if (typeof gameConfiguration.width !== \"number\")\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_normalizeConfiguration: width must be given as a number\");\n        if (typeof gameConfiguration.height !== \"number\")\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_normalizeConfiguration: height must be given as a number\");\n        return gameConfiguration;\n    };\n    /**\n     * @private\n     */\n    Game.prototype._setAudioPlaybackRate = function (playbackRate) {\n        this.audio._setPlaybackRate(playbackRate);\n    };\n    /**\n     * @private\n     */\n    Game.prototype._startSuppressAudio = function () {\n        this.audio._startSuppress();\n    };\n    /**\n     * @private\n     */\n    Game.prototype._endSuppressAudio = function () {\n        this.audio._endSuppress();\n    };\n    /**\n     * @private\n     */\n    Game.prototype._setMuted = function (muted) {\n        this.audio._setMuted(muted);\n    };\n    /**\n     * g.OperationEventのデータをデコードする。\n     * @private\n     */\n    Game.prototype._decodeOperationPluginOperation = function (code, op) {\n        var plugin = this.operationPluginManager.plugins[code];\n        if (!plugin || !plugin.decode)\n            return op;\n        return plugin.decode(op);\n    };\n    /**\n     * ゲーム状態のリセット。\n     * @private\n     */\n    Game.prototype._reset = function (param) {\n        var _a;\n        this.operationPluginManager.reset();\n        this.operationPluginManager.onOperate.add(this._onOperationPluginOperated.fire, this._onOperationPluginOperated);\n        if (this.scene()) {\n            while (this.scene() !== this._initialScene) {\n                this._popSceneRaw(false);\n                this._flushPostTickTasks();\n            }\n            if (!this.isLoaded) {\n                // _initialSceneの読み込みが終わっていない: _initialScene自体は使い回すので単にpopする。\n                this.scenes.pop();\n            }\n        }\n        if (this._skippingScene && !this._skippingScene.destroyed()) {\n            this._skippingScene.destroy();\n        }\n        if (param) {\n            if (param.age !== undefined)\n                this.age = param.age;\n            if (param.randGenSer !== undefined) {\n                this.random = XorshiftRandomGenerator_1.XorshiftRandomGenerator.deserialize(param.randGenSer);\n            }\n            else if (param.randSeed !== undefined) {\n                this.random = new XorshiftRandomGenerator_1.XorshiftRandomGenerator(param.randSeed);\n            }\n        }\n        this.audio._reset();\n        this._onLoad.removeAll({ func: this._handleLoad, owner: this });\n        this.onJoin.removeAll();\n        this.onLeave.removeAll();\n        this.onSeed.removeAll();\n        this.onResized.removeAll();\n        this.onSkipChange.removeAll();\n        this.onSceneChange.removeAll();\n        this.onUpdate.removeAll();\n        this.handlerSet.removeAllEventFilters();\n        this.isSkipping = false;\n        this.onSkipChange.add(this._handleSkipChange, this);\n        this.joinedPlayerIds = [];\n        this.onJoin.add(this._handleJoinEvent, this);\n        this.onLeave.add(this._handleLeaveEvent, this);\n        this._idx = (_a = param === null || param === void 0 ? void 0 : param.nextEntityId) !== null && _a !== void 0 ? _a : 0;\n        this._localIdx = 0;\n        this._cameraIdx = 0;\n        this.db = new WeakRefKVS_1.WeakRefKVS();\n        this._localDb = new WeakRefKVS_1.WeakRefKVS();\n        this._modified = true;\n        this.loadingScene = undefined;\n        this._skippingScene = undefined;\n        this._focusingCamera = undefined;\n        this.lastLocalTickMode = null;\n        this.lastTickGenerationMode = null;\n        this.onSnapshotRequest.removeAll();\n        this._postTickTasks = [];\n        this._toBeDestroyedScenes = [];\n        this._eventConverter = new EventConverter_1.EventConverter({ game: this, playerId: this.selfId }); // TODO: selfId が null のときの挙動\n        // TODO: selfId が null のときの挙動\n        this._pointEventResolver = new PointEventResolver_1.PointEventResolver({\n            sourceResolver: this,\n            playerId: this.selfId,\n            maxPoints: this._configuration.maxPoints\n        });\n        // ES5だとNumber.MAX_SAFE_INTEGERは使えないのでその値(9007199254740991)を直接かける\n        this.localRandom = new XorshiftRandomGenerator_1.XorshiftRandomGenerator(Math.floor(9007199254740991 * Math.random()));\n        this._isTerminated = false;\n        this.vars = {};\n        this._moduleManager = new ModuleManager_1.ModuleManager(this._runtimeValueBase, this._assetManager);\n        this.surfaceAtlasSet.destroy();\n        this.surfaceAtlasSet = new SurfaceAtlasSet_1.SurfaceAtlasSet({ resourceFactory: this.resourceFactory });\n        switch (this._configuration.defaultLoadingScene) {\n            case \"none\":\n                // Note: 何も描画しない実装として利用している\n                this._defaultLoadingScene = new LoadingScene_1.LoadingScene({ game: this });\n                break;\n            case \"compact\":\n                this._defaultLoadingScene = new DefaultLoadingScene_1.DefaultLoadingScene({ game: this, style: \"compact\" });\n                break;\n            default:\n                this._defaultLoadingScene = new DefaultLoadingScene_1.DefaultLoadingScene({ game: this });\n                break;\n        }\n        switch (this._configuration.defaultSkippingScene) {\n            case \"none\":\n                this._defaultSkippingScene = new DefaultSkippingScene_1.DefaultSkippingScene({ game: this, style: \"none\" });\n                break;\n            case \"indicator\":\n                this._defaultSkippingScene = new DefaultSkippingScene_1.DefaultSkippingScene({ game: this, style: \"indicator\" });\n                break;\n            default:\n                this._defaultSkippingScene = undefined;\n                break;\n        }\n    };\n    /**\n     * ゲームを破棄する。\n     * エンジンユーザとコンテンツに開放された一部プロパティ(external, vars)は維持する点に注意。\n     * @private\n     */\n    Game.prototype._destroy = function () {\n        // ユーザコードを扱う操作プラグインを真っ先に破棄\n        this.operationPluginManager.destroy();\n        // 到達できるシーンを全て破棄\n        if (this.scene()) {\n            while (this.scene() !== this._initialScene) {\n                this.popScene();\n                this._flushPostTickTasks();\n            }\n        }\n        this._initialScene.destroy();\n        if (this.loadingScene && !this.loadingScene.destroyed()) {\n            this.loadingScene.destroy();\n        }\n        if (!this._defaultLoadingScene.destroyed()) {\n            this._defaultLoadingScene.destroy();\n        }\n        if (this._defaultSkippingScene && !this._defaultSkippingScene.destroyed()) {\n            this._defaultSkippingScene.destroy();\n        }\n        if (this._skippingScene && !this._skippingScene.destroyed()) {\n            this._skippingScene.destroy();\n        }\n        // NOTE: fps, width, height, external, vars はそのまま保持しておく\n        this.db = undefined;\n        this.renderers = undefined;\n        this.scenes = undefined;\n        this.random = undefined;\n        this._modified = false;\n        this.age = 0;\n        this.assets = undefined; // this._initialScene.assets のエイリアスなので、特に破棄処理はしない。\n        this.isLoaded = false;\n        this.loadingScene = undefined;\n        this.assetBase = \"\";\n        this.selfId = undefined;\n        this.audio.music.stopAll();\n        this.audio.sound.stopAll();\n        this.audio = undefined;\n        this.defaultAudioSystemId = undefined;\n        this.handlerSet = undefined;\n        this.localRandom = undefined;\n        this.onJoin.destroy();\n        this.onJoin = undefined;\n        this.onLeave.destroy();\n        this.onLeave = undefined;\n        this.onSeed.destroy();\n        this.onSeed = undefined;\n        this.onPlayerInfo.destroy();\n        this.onPlayerInfo = undefined;\n        this.onResized.destroy();\n        this.onResized = undefined;\n        this.onSkipChange.destroy();\n        this.onSkipChange = undefined;\n        this.onSceneChange.destroy();\n        this.onSceneChange = undefined;\n        this.onUpdate.destroy();\n        this.onUpdate = undefined;\n        this.onSnapshotRequest.destroy();\n        this.onSnapshotRequest = undefined;\n        this.join = undefined;\n        this.leave = undefined;\n        this.seed = undefined;\n        this.playerInfo = undefined;\n        this.snapshotRequest = undefined;\n        this.resized = undefined;\n        this.skippingChanged = undefined;\n        this._sceneChanged = undefined;\n        this._loaded = undefined;\n        this._started = undefined;\n        this._operationPluginOperated = undefined;\n        this._onSceneChange.destroy();\n        this._onSceneChange = undefined;\n        this._onLoad.destroy();\n        this._onLoad = undefined;\n        this._onStart.destroy();\n        this._onStart = undefined;\n        // TODO より能動的にdestroy処理を入れるべきかもしれない\n        this.resourceFactory = undefined;\n        this.playId = undefined;\n        this.operationPlugins = undefined; // this._operationPluginManager.pluginsのエイリアスなので、特に破棄処理はしない。\n        this._eventTriggerMap = undefined;\n        this._initialScene = undefined;\n        this._defaultLoadingScene = undefined;\n        this._main = undefined;\n        this._mainFunc = undefined;\n        this._mainParameter = undefined;\n        this._assetManager.destroy();\n        this._assetManager = undefined;\n        this.asset = undefined;\n        this._eventConverter = undefined;\n        this._pointEventResolver = undefined;\n        this.operationPluginManager = undefined;\n        this._onOperationPluginOperated.destroy();\n        this._onOperationPluginOperated = undefined;\n        this._idx = 0;\n        this._localDb = undefined;\n        this._localIdx = 0;\n        this._cameraIdx = 0;\n        this._isTerminated = true;\n        this._focusingCamera = undefined;\n        this._skippingScene = undefined;\n        this._configuration = undefined;\n        this._postTickTasks = undefined;\n        this.surfaceAtlasSet.destroy();\n        this.surfaceAtlasSet = undefined;\n        this._moduleManager = undefined;\n    };\n    /**\n     * ゲームを開始する。\n     *\n     * 存在するシーンをすべて(_initialScene以外; あるなら)破棄し、グローバルアセットを読み込み、完了後ゲーム開発者の実装コードの実行を開始する。\n     * このメソッドの二度目以降の呼び出しの前には、 `this._reset()` を呼び出す必要がある。\n     * @param param ゲームのエントリポイントに渡す値\n     * @private\n     */\n    Game.prototype._loadAndStart = function (param) {\n        this._mainParameter = param || {};\n        if (!this.isLoaded) {\n            this._onLoad.add(this._handleLoad, this);\n            this.pushScene(this._initialScene);\n            this._flushPostTickTasks();\n        }\n        else {\n            this._handleLoad();\n        }\n    };\n    /**\n     * グローバルアセットの読み込みを開始する。\n     * 単体テスト用 (mainSceneなど特定アセットの存在を前提にする_loadAndStart()はテストに使いにくい) なので、通常ゲーム開発者が利用することはない\n     * @private\n     */\n    Game.prototype._startLoadingGlobalAssets = function () {\n        if (this.isLoaded)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_startLoadingGlobalAssets: already loaded.\");\n        this.pushScene(this._initialScene);\n        this._flushPostTickTasks();\n    };\n    /**\n     * @private\n     */\n    Game.prototype._updateEventTriggers = function (scene) {\n        this._modified = true;\n        if (!scene) {\n            this._eventTriggerMap.message = undefined;\n            this._eventTriggerMap[\"point-down\"] = undefined;\n            this._eventTriggerMap[\"point-move\"] = undefined;\n            this._eventTriggerMap[\"point-up\"] = undefined;\n            this._eventTriggerMap.operation = undefined;\n            return;\n        }\n        this._eventTriggerMap.message = scene.onMessage;\n        this._eventTriggerMap[\"point-down\"] = scene.onPointDownCapture;\n        this._eventTriggerMap[\"point-move\"] = scene.onPointMoveCapture;\n        this._eventTriggerMap[\"point-up\"] = scene.onPointUpCapture;\n        this._eventTriggerMap.operation = scene.onOperation;\n        scene._activate();\n    };\n    /**\n     * @private\n     */\n    Game.prototype._handleInitialSceneLoad = function () {\n        this._initialScene.onLoad.remove(this._handleInitialSceneLoad, this);\n        this.assets = this._initialScene.assets;\n        this.isLoaded = true;\n        this._onLoad.fire(this);\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._handleOperationPluginOperated = function (op) {\n        var pev = this._eventConverter.makePlaylogOperationEvent(op);\n        this.handlerSet.raiseEvent(pev);\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._handleSceneChanged = function (scene) {\n        this._updateEventTriggers(scene);\n        var local = scene ? scene.local : \"full-local\";\n        var tickGenerationMode = scene ? scene.tickGenerationMode : \"by-clock\";\n        if (this.lastLocalTickMode === local && this.lastTickGenerationMode === tickGenerationMode) {\n            return;\n        }\n        this.lastLocalTickMode = local;\n        this.lastTickGenerationMode = tickGenerationMode;\n        this.handlerSet.changeSceneMode({\n            local: local,\n            tickGenerationMode: tickGenerationMode\n        });\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._handleSkippingSceneReady = function (scene) {\n        this._pushPostTickTask(scene._fireLoaded, scene);\n    };\n    /**\n     * @private\n     */\n    Game.prototype._terminateGame = function () {\n        // do nothing.\n    };\n    /**\n     * post-tick タスクを実行する。\n     *\n     * `pushScene()` などのシーン遷移や `_pushPostTickTask()` によって要求された post-tick タスクを実行する。\n     * 通常このメソッドは、毎フレーム一度、フレームの最後に呼び出されることを期待する (`Game#tick()` がこの呼び出しを行う)。\n     * ただしゲーム開始時 (グローバルアセット読み込み・スナップショットローダ起動後またはmainScene実行開始時) に関しては、\n     * シーン追加がゲーム開発者の記述によらない (`tick()` の外側である) ため、それぞれの箇所で明示的にこのメソッドを呼び出す。\n     * @private\n     */\n    Game.prototype._flushPostTickTasks = function () {\n        do {\n            var reqs = this._postTickTasks;\n            this._postTickTasks = [];\n            for (var i = 0; i < reqs.length; ++i) {\n                var req = reqs[i];\n                switch (req.type) {\n                    case 0 /* PostTickTaskType.PushScene */:\n                        var oldScene = this.scene();\n                        if (oldScene) {\n                            oldScene._deactivate();\n                        }\n                        this._doPushScene(req.scene, false, req.prepare\n                            ? this._createPreparingLoadingScene(req.scene, req.prepare, \"akashic:preparing-\".concat(req.scene.name))\n                            : undefined);\n                        break;\n                    case 1 /* PostTickTaskType.ReplaceScene */:\n                        // NOTE: replaceSceneの場合、pop時点では_sceneChangedをfireしない。_doPushScene() で一度だけfireする。\n                        this._doPopScene(req.preserveCurrent, false, false);\n                        this._doPushScene(req.scene, false, req.prepare\n                            ? this._createPreparingLoadingScene(req.scene, req.prepare, \"akashic:preparing-\".concat(req.scene.name))\n                            : undefined);\n                        break;\n                    case 2 /* PostTickTaskType.PopScene */:\n                        this._doPopScene(req.preserveCurrent, false, true);\n                        break;\n                    case 3 /* PostTickTaskType.Call */:\n                        req.fun.call(req.owner);\n                        break;\n                    case 4 /* PostTickTaskType.PopSceneRaw */:\n                        this._doPopScene(req.preserveCurrent, true, true);\n                        break;\n                    default:\n                        throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_flushPostTickTasks: unknown post-tick task type.\");\n                }\n            }\n        } while (this._postTickTasks.length > 0); // flush中に追加される限りflushを続行する\n        if (this._toBeDestroyedScenes.length > 0) {\n            for (var _i = 0, _a = this._toBeDestroyedScenes; _i < _a.length; _i++) {\n                var scene = _a[_i];\n                scene.destroy();\n            }\n            this._toBeDestroyedScenes = [];\n        }\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._handleSkipChange = function (isSkipping) {\n        var _a;\n        this.isSkipping = isSkipping;\n        if (isSkipping) {\n            var skippingScene = (_a = this._skippingScene) !== null && _a !== void 0 ? _a : this._defaultSkippingScene;\n            if (skippingScene && !skippingScene._loaded) {\n                skippingScene._load();\n                skippingScene._onReady.addOnce(this._handleSkippingSceneReady, this);\n            }\n        }\n        this._cleanDB();\n        this._modified = true;\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._handleJoinEvent = function (event) {\n        if (!event.player.id || this.joinedPlayerIds.indexOf(event.player.id) !== -1) {\n            return;\n        }\n        this.joinedPlayerIds.push(event.player.id);\n    };\n    /**\n     * @ignore\n     */\n    Game.prototype._handleLeaveEvent = function (event) {\n        this.joinedPlayerIds = this.joinedPlayerIds.filter(function (id) { return id !== event.player.id; });\n    };\n    /**\n     * シーンスタックからシーンを取り除く。\n     *\n     * @ignore\n     * @param preserveCurrent 取り除いたシーンを破棄せずそのままにするか\n     * @param raw (ローディングシーンを考慮せず)そのまま取り除くか。偽の場合、シーンスタックトップのローディングシーンを全て除いてから取り除く\n     * @param fireSceneChanged onSceneChangeをfireして通知するか\n     */\n    Game.prototype._doPopScene = function (preserveCurrent, raw, fireSceneChanged) {\n        var _a;\n        var scene = this.scenes.pop();\n        if (!raw) {\n            while (scene && scene instanceof LoadingScene_1.LoadingScene) {\n                scene._clearTargetScene();\n                scene = this.scenes.pop();\n            }\n        }\n        if (!scene)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_doPopScene: invalid call; scene stack underflow\");\n        if (scene === this._initialScene)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_doPopScene: invalid call; attempting to pop the initial scene\");\n        if (!preserveCurrent) {\n            if (!this._toBeDestroyedScenes.includes(scene)) {\n                this._toBeDestroyedScenes.push(scene);\n            }\n        }\n        if (!raw) {\n            // 取り除いた結果スタックトップがロード中のシーンになった場合はローディングシーンを積み直す\n            var nextScene = this.scene();\n            if (nextScene && nextScene._needsLoading() && nextScene._loadingState !== \"loaded-fired\") {\n                var loadingScene = nextScene._waitingPrepare\n                    ? this._createPreparingLoadingScene(nextScene, nextScene._waitingPrepare, \"akashic:preparing-\".concat(nextScene.name))\n                    : ((_a = this.loadingScene) !== null && _a !== void 0 ? _a : this._defaultLoadingScene);\n                this._doPushScene(loadingScene, true, this._defaultLoadingScene);\n                loadingScene.reset(nextScene);\n            }\n        }\n        if (fireSceneChanged) {\n            var nextScene = this.scene();\n            this.onSceneChange.fire(nextScene);\n            this._onSceneChange.fire(nextScene);\n        }\n    };\n    Game.prototype._handleLoad = function () {\n        var operationPluginsField = this._configuration.operationPlugins || [];\n        // `game.json` の `operationPlugins` フィールドの登録は `game._onLoad` のfire後でなければならない。\n        for (var _i = 0, operationPluginsField_1 = operationPluginsField; _i < operationPluginsField_1.length; _i++) {\n            var pluginInfo = operationPluginsField_1[_i];\n            if (!pluginInfo.script)\n                continue;\n            var pluginClass = this._moduleManager._internalRequire(pluginInfo.script);\n            var plugin = this.operationPluginManager.register(pluginClass, pluginInfo.code, pluginInfo.option);\n            if (!pluginInfo.manualStart && plugin) {\n                plugin.start();\n            }\n        }\n        this.operationPlugins = this.operationPluginManager.plugins;\n        var preloadAssetPaths = this._assetManager.preloadScriptAssetPaths();\n        for (var _a = 0, preloadAssetPaths_1 = preloadAssetPaths; _a < preloadAssetPaths_1.length; _a++) {\n            var preloadAssetPath = preloadAssetPaths_1[_a];\n            var fun = this._moduleManager._internalRequire(preloadAssetPath);\n            if (!fun || typeof fun !== \"function\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_handleLoad: \".concat(preloadAssetPath, \" has no-exported function.\"));\n            fun();\n        }\n        if (this._mainFunc) {\n            this._mainFunc(this._runtimeValueBase, this._mainParameter || {});\n        }\n        else if (this._main) {\n            var mainFun = this._moduleManager._internalRequire(this._main);\n            if (!mainFun || typeof mainFun !== \"function\")\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_handleLoad: Entry point \".concat(this._main, \" not found.\"));\n            mainFun(this._mainParameter);\n        }\n        else {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_handleLoad: does not have an entry point\");\n        }\n        this._flushPostTickTasks(); // シーン遷移を要求する可能性がある(というかまずする)\n        this._onStart.fire();\n    };\n    /**\n     * シーンをシーンスタックに追加する。\n     *\n     * @ignore\n     * @param scene 追加するシーン\n     * @param raw (ローディングシーンを考慮せず)そのまま追加するか。偽の場合、スタックトップのローディングシーンを除いてから追加する\n     * @param loadingScene ロードが必要な場合に利用するローディングシーン\n     */\n    Game.prototype._doPushScene = function (scene, raw, loadingScene) {\n        var scenes = this.scenes;\n        if (!raw) {\n            while (scenes.length > 0 && scenes[scenes.length - 1] instanceof LoadingScene_1.LoadingScene) {\n                var top = scenes.pop();\n                top._clearTargetScene();\n            }\n        }\n        if (!loadingScene)\n            loadingScene = this.loadingScene || this._defaultLoadingScene;\n        scenes.push(scene);\n        if (scene._needsLoading() && scene._loadingState !== \"loaded-fired\") {\n            if (this._defaultLoadingScene._needsLoading())\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Game#_doPushScene: _defaultLoadingScene must not depend on any assets.\");\n            this._doPushScene(loadingScene, true, this._defaultLoadingScene);\n            loadingScene.reset(scene);\n        }\n        else {\n            this.onSceneChange.fire(scene);\n            this._onSceneChange.fire(scene);\n            // 読み込み待ちのアセットがなければその場で(loadingSceneに任せず)ロード、SceneReadyを発生させてからLoadingSceneEndを起こす。\n            if (!scene._loaded) {\n                scene._load();\n                this._pushPostTickTask(scene._fireLoaded, scene);\n            }\n        }\n        this._modified = true;\n    };\n    /**\n     * 引数に指定したハンドラが完了するまで待機する空のローディングシーンを作成する。\n     */\n    Game.prototype._createPreparingLoadingScene = function (scene, prepare, name) {\n        var _this = this;\n        scene._waitingPrepare = prepare;\n        var loadingScene = new LoadingScene_1.LoadingScene({\n            game: this,\n            explicitEnd: true,\n            name: name\n        });\n        // prepare 対象シーンを保持するためクロージャを許容\n        loadingScene.onTargetReady.addOnce(function () {\n            var done = function () {\n                if (_this._isTerminated)\n                    return;\n                loadingScene.end();\n            };\n            var prepare = scene._waitingPrepare;\n            scene._waitingPrepare = undefined;\n            if (prepare) {\n                prepare(done);\n            }\n            else {\n                // NOTE: 異常系ではあるが prepare が存在しない場合は loadingScene.end() を直接呼ぶ\n                _this._pushPostTickTask(loadingScene.end, loadingScene);\n            }\n        });\n        return loadingScene;\n    };\n    Game.prototype._cleanDB = function () {\n        this.db.clean();\n        this._localDb.clean();\n    };\n    return Game;\n}());\nexports.Game = Game;\n//# sourceMappingURL=Game.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Game.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/GameHandlerSet.js":
/*!********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/GameHandlerSet.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=GameHandlerSet.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/GameHandlerSet.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/GameMainParameterObject.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/GameMainParameterObject.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=GameMainParameterObject.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/GameMainParameterObject.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/InitialScene.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/InitialScene.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InitialScene = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar Scene_1 = __webpack_require__(/*! ./Scene */ \"./node_modules/@akashic/akashic-engine/lib/Scene.js\");\n/**\n * グローバルアセットを読み込むための初期シーン。\n */\nvar InitialScene = /** @class */ (function (_super) {\n    __extends(InitialScene, _super);\n    function InitialScene(param) {\n        var _this = _super.call(this, param) || this;\n        _this.onAllAssetsLoad = new trigger_1.Trigger();\n        _this.onLoad.add(_this._handleLoad, _this);\n        return _this;\n    }\n    InitialScene.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (!this.onAllAssetsLoad.destroyed()) {\n            this.onAllAssetsLoad.destroy();\n        }\n        this.onAllAssetsLoad = undefined;\n    };\n    InitialScene.prototype._handleLoad = function () {\n        if (this.game._configuration.assetBundle) {\n            var assetBundle = this.game._moduleManager._internalRequire(this.game._configuration.assetBundle);\n            this.game._assetManager.setAssetBundle(assetBundle);\n            var assetIds = Object.keys(assetBundle.assets);\n            this.requestAssets(assetIds, this._handleRequestAssets.bind(this));\n        }\n        else {\n            this.onAllAssetsLoad.fire();\n        }\n    };\n    InitialScene.prototype._handleRequestAssets = function () {\n        this.onAllAssetsLoad.fire();\n    };\n    return InitialScene;\n}(Scene_1.Scene));\nexports.InitialScene = InitialScene;\n//# sourceMappingURL=InitialScene.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/InitialScene.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/InternalOperationPluginInfo.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/InternalOperationPluginInfo.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=InternalOperationPluginInfo.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/InternalOperationPluginInfo.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/LoadingScene.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/LoadingScene.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LoadingScene = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar Scene_1 = __webpack_require__(/*! ./Scene */ \"./node_modules/@akashic/akashic-engine/lib/Scene.js\");\n/**\n * Assetの読み込み中に表示されるシーン。\n *\n * 本シーンは通常のシーンと異なり、ゲーム内時間(`Game#age`)と独立に実行される。\n * アセットやストレージデータを読み込んでいる間、ゲーム内時間が進んでいない状態でも、\n * `LoadingScene` は画面に変化を与えることができる(`update` がfireされる)。\n *\n * ゲーム開発者は、ローディング中の演出を実装した独自の `LoadingScene` を\n * `Game#loadingScene` に代入することでエンジンに利用させることができる。\n *\n * ゲーム内時間と独立に処理される `LoadingScene` での処理には再現性がない(他プレイヤーと状態が共有されない)。\n * そのため `Game` に対して副作用のある操作を行ってはならない点に注意すること。\n */\nvar LoadingScene = /** @class */ (function (_super) {\n    __extends(LoadingScene, _super);\n    /**\n     * `LoadingScene` のインスタンスを生成する。\n     * @param param 初期化に用いるパラメータのオブジェクト\n     */\n    function LoadingScene(param) {\n        var _this = this;\n        param.local = true; // LoadingScene は強制的にローカルにする\n        _this = _super.call(this, param) || this;\n        _this.onTargetReset = new trigger_1.Trigger();\n        _this.onTargetReady = new trigger_1.Trigger();\n        _this.onTargetAssetLoad = new trigger_1.Trigger();\n        _this.targetReset = _this.onTargetReset;\n        _this.targetReady = _this.onTargetReady;\n        _this.targetAssetLoaded = _this.onTargetAssetLoad;\n        _this._explicitEnd = !!param.explicitEnd;\n        _this._targetScene = undefined;\n        return _this;\n    }\n    LoadingScene.prototype.destroy = function () {\n        this._clearTargetScene();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * アセットロード待ち対象シーンを変更する。\n     *\n     * このメソッドは、新たにシーンのロード待ちが必要になった場合にエンジンによって呼び出される。\n     * (派生クラスはこの処理をオーバーライドしてもよいが、その場合その中で\n     * このメソッド自身 (`g.LoadingScene.prototype.reset`) を呼び出す (`call()` する) 必要がある。)\n     *\n     * @param targetScene アセットロード待ちが必要なシーン\n     */\n    LoadingScene.prototype.reset = function (targetScene) {\n        this._clearTargetScene();\n        this._targetScene = targetScene;\n        if (this._loadingState !== \"loaded-fired\") {\n            this.onLoad.addOnce(this._doReset, this);\n        }\n        else {\n            this._doReset();\n        }\n    };\n    /**\n     * アセットロード待ち対象シーンの残りのロード待ちアセット数を取得する。\n     */\n    LoadingScene.prototype.getTargetWaitingAssetsCount = function () {\n        return this._targetScene ? this._targetScene._sceneAssetHolder.waitingAssetsCount : 0;\n    };\n    /**\n     * ローディングシーンを終了する。\n     *\n     * `Scene#end()` と異なり、このメソッドの呼び出しはこのシーンを破棄しない。(ローディングシーンは再利用される。)\n     * このメソッドが呼び出される時、 `targetReady` がfireされた後でなければならない。\n     */\n    LoadingScene.prototype.end = function () {\n        if (!this._targetScene || this._targetScene._loadingState === \"initial\") {\n            var state = this._targetScene ? this._targetScene._loadingState : \"(no scene)\";\n            var msg = \"LoadingScene#end(): the target scene is in invalid state: \" + state;\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(msg);\n        }\n        this.game._popSceneRaw(true);\n        this.game._pushPostTickTask(this._targetScene._fireLoaded, this._targetScene);\n        this._clearTargetScene();\n    };\n    /**\n     * @private\n     */\n    LoadingScene.prototype._clearTargetScene = function () {\n        if (!this._targetScene)\n            return;\n        this.onLoad.removeAll({ owner: this, func: this._doReset });\n        this._targetScene._onReady.removeAll({ owner: this });\n        this._targetScene.onAssetLoad.removeAll({ owner: this });\n        this._targetScene = undefined;\n    };\n    /**\n     * @private\n     */\n    LoadingScene.prototype._doReset = function () {\n        this.onTargetReset.fire(this._targetScene);\n        if (this._targetScene._loadingState === \"initial\" || this._targetScene._loadingState === \"ready\") {\n            this._targetScene._onReady.add(this._handleReady, this);\n            this._targetScene.onAssetLoad.add(this._handleAssetLoad, this);\n            this._targetScene._load();\n        }\n        else {\n            this._handleReady(this._targetScene);\n        }\n    };\n    /**\n     * @private\n     */\n    LoadingScene.prototype._handleAssetLoad = function (asset) {\n        this.onTargetAssetLoad.fire(asset);\n    };\n    /**\n     * @private\n     */\n    LoadingScene.prototype._handleReady = function (scene) {\n        this.onTargetReady.fire(scene);\n        if (!this._explicitEnd) {\n            this.end();\n        }\n    };\n    return LoadingScene;\n}(Scene_1.Scene));\nexports.LoadingScene = LoadingScene;\n//# sourceMappingURL=LoadingScene.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/LoadingScene.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/LocalTickModeString.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/LocalTickModeString.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=LocalTickModeString.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/LocalTickModeString.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Matrix.js":
/*!************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Matrix.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PlainMatrix = void 0;\n/**\n * 変換行列を一般的なJavaScriptのみで表したクラス。\n * 通常ゲーム開発者が本クラスを直接利用する事はない。\n * 各フィールド、メソッドの詳細は `Matrix` インターフェースの説明を参照。\n */\nvar PlainMatrix = /** @class */ (function () {\n    function PlainMatrix(widthOrSrc, height, scaleX, scaleY, angle, anchorX, anchorY) {\n        // TODO: (GAMEDEV-845) Float32Arrayの方が速いらしいので、polyfillして使うかどうか検討\n        if (widthOrSrc === undefined) {\n            this._modified = false;\n            this._matrix = [1, 0, 0, 1, 0, 0];\n        }\n        else if (typeof widthOrSrc === \"number\") {\n            this._modified = false;\n            // TODO: [0, 0, 0, 0, 0, 0]と速度比較\n            this._matrix = new Array(6);\n            // @ts-ignore\n            this.update(widthOrSrc, height, scaleX, scaleY, angle, 0, 0, anchorX, anchorY);\n        }\n        else {\n            this._modified = widthOrSrc._modified;\n            this._matrix = [\n                widthOrSrc._matrix[0],\n                widthOrSrc._matrix[1],\n                widthOrSrc._matrix[2],\n                widthOrSrc._matrix[3],\n                widthOrSrc._matrix[4],\n                widthOrSrc._matrix[5]\n            ];\n        }\n    }\n    PlainMatrix.prototype.update = function (width, height, scaleX, scaleY, angle, x, y, anchorX, anchorY) {\n        if (anchorX == null || anchorY == null) {\n            this._updateWithoutAnchor(width, height, scaleX, scaleY, angle, x, y);\n            return;\n        }\n        // ここで求める変換行列Mは、引数で指定された変形を、拡大・回転・平行移動の順に適用するものである。\n        // 変形の原点は (anchorX * width, anchorY * height) である。従って\n        //    M = A^-1 T R S A\n        // である。ただしここでA, S, R, Tは、それぞれ以下を表す変換行列である:\n        //    A: アンカーを原点に移す(平行移動する)変換\n        //    S: X軸方向にscaleX倍、Y軸方向にscaleY倍する変換\n        //    R: angle度だけ回転する変換\n        //    T: x, yの値だけ平行移動する変換\n        // それらは次のように表せる:\n        //           1    0   -w           sx    0    0            c   -s    0            1    0    x\n        //    A = [  0    1   -h]    S = [  0   sy    0]    R = [  s    c    0]    T = [  0    1    y]\n        //           0    0    1            0    0    1            0    0    1            0    0    1\n        // ここで sx, sy は scaleX, scaleY であり、c, s は cos(theta), sin(theta)\n        // (ただし theta = angle * PI / 180)、w = anchorX * width, h = anchorY * height である。\n        // 以下の実装は、M の各要素をそれぞれ計算して直接求めている。\n        var r = (angle * Math.PI) / 180;\n        var _cos = Math.cos(r);\n        var _sin = Math.sin(r);\n        var a = _cos * scaleX;\n        var b = _sin * scaleX;\n        var c = _sin * scaleY;\n        var d = _cos * scaleY;\n        var w = anchorX * width;\n        var h = anchorY * height;\n        this._matrix[0] = a;\n        this._matrix[1] = b;\n        this._matrix[2] = -c;\n        this._matrix[3] = d;\n        this._matrix[4] = -a * w + c * h + x;\n        this._matrix[5] = -b * w - d * h + y;\n    };\n    /**\n     * このメソッドは anchorX, anchorY が存在しなかった当時との互換性のため存在する。将来この互換性を破棄する時に削除する予定である。\n     * @private\n     */\n    PlainMatrix.prototype._updateWithoutAnchor = function (width, height, scaleX, scaleY, angle, x, y) {\n        // ここで求める変換行列Mは、引数で指定された変形を、拡大・回転・平行移動の順に適用するものである。\n        // 変形の原点は引数で指定された矩形の中心、すなわち (width/2, height/2) の位置である。従って\n        //    M = A^-1 T R S A\n        // である。ただしここでA, S, R, Tは、それぞれ以下を表す変換行列である:\n        //    A: 矩形の中心を原点に移す(平行移動する)変換\n        //    S: X軸方向にscaleX倍、Y軸方向にscaleY倍する変換\n        //    R: angle度だけ回転する変換\n        //    T: x, yの値だけ平行移動する変換\n        // それらは次のように表せる:\n        //           1    0   -w           sx    0    0            c   -s    0            1    0    x\n        //    A = [  0    1   -h]    S = [  0   sy    0]    R = [  s    c    0]    T = [  0    1    y]\n        //           0    0    1            0    0    1            0    0    1            0    0    1\n        // ここで sx, sy は scaleX, scaleY であり、c, s は cos(theta), sin(theta)\n        // (ただし theta = angle * PI / 180)、w = (width / 2), h = (height / 2) である。\n        // 以下の実装は、M の各要素をそれぞれ計算して直接求めている。\n        var r = (angle * Math.PI) / 180;\n        var _cos = Math.cos(r);\n        var _sin = Math.sin(r);\n        var a = _cos * scaleX;\n        var b = _sin * scaleX;\n        var c = _sin * scaleY;\n        var d = _cos * scaleY;\n        var w = width / 2;\n        var h = height / 2;\n        this._matrix[0] = a;\n        this._matrix[1] = b;\n        this._matrix[2] = -c;\n        this._matrix[3] = d;\n        this._matrix[4] = -a * w + c * h + w + x;\n        this._matrix[5] = -b * w - d * h + h + y;\n    };\n    PlainMatrix.prototype.updateByInverse = function (width, height, scaleX, scaleY, angle, x, y, anchorX, anchorY) {\n        if (anchorX == null || anchorY == null) {\n            this._updateByInverseWithoutAnchor(width, height, scaleX, scaleY, angle, x, y);\n            return;\n        }\n        // ここで求める変換行列は、update() の求める行列Mの逆行列、M^-1である。update() のコメントに記述のとおり、\n        //    M = A^-1 T R S A\n        // であるから、\n        //    M^-1 = A^-1 S^-1 R^-1 T^-1 A\n        // それぞれは次のように表せる:\n        //              1    0    w             1/sx     0    0               c    s    0               1    0   -x+w\n        //    A^-1 = [  0    1    h]    S^-1 = [   0  1/sy    0]    R^-1 = [ -s    c    0]    T^-1 = [  0    1   -y+h]\n        //              0    0    1                0     0    1               0    0    1               0    0    1\n        // ここで各変数は update() のコメントのものと同様である。\n        // 以下の実装は、M^-1 の各要素をそれぞれ計算して直接求めている。\n        var r = (angle * Math.PI) / 180;\n        var _cos = Math.cos(r);\n        var _sin = Math.sin(r);\n        var a = _cos / scaleX;\n        var b = _sin / scaleY;\n        var c = _sin / scaleX;\n        var d = _cos / scaleY;\n        var w = anchorX * width;\n        var h = anchorY * height;\n        this._matrix[0] = a;\n        this._matrix[1] = -b;\n        this._matrix[2] = c;\n        this._matrix[3] = d;\n        this._matrix[4] = -a * x - c * y + w;\n        this._matrix[5] = b * x - d * y + h;\n    };\n    /**\n     * このメソッドは anchorX, anchorY が存在しなかった当時との互換性のため存在する。将来この互換性を破棄する時に削除する予定である。\n     * @private\n     */\n    PlainMatrix.prototype._updateByInverseWithoutAnchor = function (width, height, scaleX, scaleY, angle, x, y) {\n        // ここで求める変換行列は、update() の求める行列Mの逆行列、M^-1である。update() のコメントに記述のとおり、\n        //    M = A^-1 T R S A\n        // であるから、\n        //    M^-1 = A^-1 S^-1 R^-1 T^-1 A\n        // それぞれは次のように表せる:\n        //              1    0    w             1/sx     0    0               c    s    0               1    0   -x\n        //    A^-1 = [  0    1    h]    S^-1 = [   0  1/sy    0]    R^-1 = [ -s    c    0]    T^-1 = [  0    1   -y]\n        //              0    0    1                0     0    1               0    0    1               0    0    1\n        // ここで各変数は update() のコメントのものと同様である。\n        // 以下の実装は、M^-1 の各要素をそれぞれ計算して直接求めている。\n        var r = (angle * Math.PI) / 180;\n        var _cos = Math.cos(r);\n        var _sin = Math.sin(r);\n        var a = _cos / scaleX;\n        var b = _sin / scaleY;\n        var c = _sin / scaleX;\n        var d = _cos / scaleY;\n        var w = width / 2;\n        var h = height / 2;\n        this._matrix[0] = a;\n        this._matrix[1] = -b;\n        this._matrix[2] = c;\n        this._matrix[3] = d;\n        this._matrix[4] = -a * (w + x) - c * (h + y) + w;\n        this._matrix[5] = b * (w + x) - d * (h + y) + h;\n    };\n    PlainMatrix.prototype.multiply = function (matrix) {\n        var m1 = this._matrix;\n        var m2 = matrix._matrix;\n        var m10 = m1[0];\n        var m11 = m1[1];\n        var m12 = m1[2];\n        var m13 = m1[3];\n        m1[0] = m10 * m2[0] + m12 * m2[1];\n        m1[1] = m11 * m2[0] + m13 * m2[1];\n        m1[2] = m10 * m2[2] + m12 * m2[3];\n        m1[3] = m11 * m2[2] + m13 * m2[3];\n        m1[4] = m10 * m2[4] + m12 * m2[5] + m1[4];\n        m1[5] = m11 * m2[4] + m13 * m2[5] + m1[5];\n    };\n    PlainMatrix.prototype.multiplyLeft = function (matrix) {\n        var m1 = matrix._matrix;\n        var m2 = this._matrix;\n        var m20 = m2[0];\n        var m22 = m2[2];\n        var m24 = m2[4];\n        m2[0] = m1[0] * m20 + m1[2] * m2[1];\n        m2[1] = m1[1] * m20 + m1[3] * m2[1];\n        m2[2] = m1[0] * m22 + m1[2] * m2[3];\n        m2[3] = m1[1] * m22 + m1[3] * m2[3];\n        m2[4] = m1[0] * m24 + m1[2] * m2[5] + m1[4];\n        m2[5] = m1[1] * m24 + m1[3] * m2[5] + m1[5];\n    };\n    PlainMatrix.prototype.multiplyNew = function (matrix) {\n        var ret = this.clone();\n        ret.multiply(matrix);\n        return ret;\n    };\n    PlainMatrix.prototype.reset = function (x, y) {\n        this._matrix[0] = 1;\n        this._matrix[1] = 0;\n        this._matrix[2] = 0;\n        this._matrix[3] = 1;\n        this._matrix[4] = x || 0;\n        this._matrix[5] = y || 0;\n    };\n    PlainMatrix.prototype.clone = function () {\n        return new PlainMatrix(this);\n    };\n    PlainMatrix.prototype.multiplyInverseForPoint = function (point) {\n        var m = this._matrix;\n        // id = inverse of the determinant\n        var _id = 1 / (m[0] * m[3] + m[2] * -m[1]);\n        return {\n            x: m[3] * _id * point.x + -m[2] * _id * point.y + (m[5] * m[2] - m[4] * m[3]) * _id,\n            y: m[0] * _id * point.y + -m[1] * _id * point.x + (-m[5] * m[0] + m[4] * m[1]) * _id\n        };\n    };\n    PlainMatrix.prototype.scale = function (x, y) {\n        var m = this._matrix;\n        m[0] *= x;\n        m[1] *= y;\n        m[2] *= x;\n        m[3] *= y;\n        m[4] *= x;\n        m[5] *= y;\n    };\n    PlainMatrix.prototype.multiplyPoint = function (point) {\n        var m = this._matrix;\n        var x = m[0] * point.x + m[2] * point.y + m[4];\n        var y = m[1] * point.x + m[3] * point.y + m[5];\n        return { x: x, y: y };\n    };\n    return PlainMatrix;\n}());\nexports.PlainMatrix = PlainMatrix;\n//# sourceMappingURL=Matrix.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Matrix.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Module.js":
/*!************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Module.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Module = void 0;\nvar PathUtil_1 = __webpack_require__(/*! @akashic/game-configuration/lib/utils/PathUtil */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/utils/PathUtil.js\");\n/**\n * Node.js が提供する module の互換クラス。\n */\nvar Module = /** @class */ (function () {\n    function Module(param) {\n        var _this = this;\n        var path = param.path;\n        var dirname = PathUtil_1.PathUtil.resolveDirname(path);\n        // `virtualPath` と `virtualDirname` は　`DynamicAsset` の場合は `undefined` になる。\n        var virtualPath = param.virtualPath;\n        var virtualDirname = virtualPath ? PathUtil_1.PathUtil.resolveDirname(virtualPath) : undefined;\n        var requireFunc = param.requireFunc;\n        var resolveFunc = param.resolveFunc;\n        this._runtimeValue = Object.create(param.runtimeValueBase, {\n            filename: {\n                value: path,\n                enumerable: true\n            },\n            dirname: {\n                value: dirname,\n                enumerable: true\n            },\n            module: {\n                value: this,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            }\n        });\n        this.id = param.id;\n        this.filename = param.path;\n        this.exports = {};\n        this.parent = null; // Node.js と互換\n        this.loaded = false;\n        this.children = [];\n        this.paths = virtualDirname ? PathUtil_1.PathUtil.makeNodeModulePaths(virtualDirname) : [];\n        this._dirname = dirname;\n        this._virtualDirname = virtualDirname;\n        // メソッドとしてではなく単体で呼ばれるのでメソッドにせずここで実体を代入する\n        var require = (function (path) {\n            return requireFunc(path, _this);\n        });\n        require.resolve = function (path) {\n            return resolveFunc(path, _this);\n        };\n        this.require = require;\n    }\n    return Module;\n}());\nexports.Module = Module;\n//# sourceMappingURL=Module.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Module.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/ModuleManager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/ModuleManager.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ModuleManager = void 0;\nvar PathUtil_1 = __webpack_require__(/*! @akashic/game-configuration/lib/utils/PathUtil */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/utils/PathUtil.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar Module_1 = __webpack_require__(/*! ./Module */ \"./node_modules/@akashic/akashic-engine/lib/Module.js\");\nvar RequireCachedValue_1 = __webpack_require__(/*! ./RequireCachedValue */ \"./node_modules/@akashic/akashic-engine/lib/RequireCachedValue.js\");\nvar ScriptAssetContext_1 = __webpack_require__(/*! ./ScriptAssetContext */ \"./node_modules/@akashic/akashic-engine/lib/ScriptAssetContext.js\");\n/**\n * `Module` を管理するクラス。\n * このクラスのインスタンスは `Game` に一つ存在し、スクリプトアセットの require() の解決に利用される。\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n */\nvar ModuleManager = /** @class */ (function () {\n    function ModuleManager(runtimeBase, assetManager) {\n        this._assetManager = assetManager;\n        this._runtimeValueBase = runtimeBase;\n        this._scriptCaches = {};\n    }\n    /**\n     * エンジン内部で利用する _require() を wrap した関数\n     *\n     * 引数の仕様については `_require()` の仕様を参照のこと。\n     * _require() の戻り値で __esModule が真の場合に戻り値の .default を返す。\n     * 現状 Akashic Engine では ESM を扱えていない。そのため、対象の __esModule を参照し .default を返すことで、\n     * TypeScript/Babel 向けの簡易対応とし exports.default を扱えるようにしている。\n     * 通常、ゲーム開発者がこのメソッドを利用する必要はない。\n     *\n     * @ignore\n     */\n    ModuleManager.prototype._internalRequire = function (path, currentModule) {\n        var module = this._require(path, currentModule);\n        return module.__esModule ? module.default : module;\n    };\n    /**\n     * node.js の require() ライクな読み込み処理を行い、その結果を返す。\n     *\n     * node.jsのrequireに限りなく近いモデルでrequireする。\n     * ただしアセットIDで該当すればそちらを優先する。また node.js のコアモジュールには対応していない。\n     * 通常、ゲーム開発者が利用するのは `Module#require()` であり、このメソッドはその内部実装を提供する。\n     *\n     * @ignore\n     * @param path requireのパス。相対パスと、Asset識別名を利用することが出来る。\n     *              なお、./xxx.json のようにjsonを指定する場合、そのAssetはTextAssetである必要がある。\n     *              その他の形式である場合、そのAssetはScriptAssetである必要がある。\n     * @param currentModule このrequireを実行した Module\n     * @returns {any} スクリプト実行結果。通常はScriptAsset#executeの結果。\n     *                 例外的に、jsonであればTextAsset#dataをJSON.parseした結果が返る\n     */\n    ModuleManager.prototype._require = function (path, currentModule) {\n        // Node.js の require の挙動については http://nodejs.jp/nodejs.org_ja/api/modules.html も参照。\n        var _this = this;\n        var targetScriptAsset;\n        var resolvedPath;\n        var liveAssetVirtualPathTable = this._assetManager._liveAssetVirtualPathTable;\n        var moduleMainScripts = this._assetManager._moduleMainScripts;\n        // 0. アセットIDらしい場合はまず当該アセットを探す\n        if (path.indexOf(\"/\") === -1) {\n            if (this._assetManager._assets.hasOwnProperty(path)) {\n                targetScriptAsset = this._assetManager._assets[path];\n                resolvedPath = this._assetManager._liveAssetPathTable[targetScriptAsset.path];\n            }\n        }\n        if (!resolvedPath) {\n            resolvedPath = this._resolvePath(path, currentModule);\n            // 戻り値は先頭に \"/\" が付くので削除している。( moduleMainScripts を参照して返される値には先頭に \"/\" は付かない)\n            if (/^\\//.test(resolvedPath))\n                resolvedPath = resolvedPath.slice(1);\n        }\n        if (this._scriptCaches.hasOwnProperty(resolvedPath)) {\n            return this._scriptCaches[resolvedPath]._cachedValue();\n        }\n        // akashic-engine独自仕様: 対象の `path` が `moduleMainScripts` に指定されていたらそちらを参照する\n        // moduleMainScripts は将来的に非推奨となるが、後方互換性のため moduleMainScripts が存在すれば moduleMainScripts を優先する\n        if (moduleMainScripts[path]) {\n            targetScriptAsset = liveAssetVirtualPathTable[resolvedPath];\n        }\n        else {\n            targetScriptAsset = this._findAssetByPathAsFile(resolvedPath, liveAssetVirtualPathTable);\n        }\n        if (targetScriptAsset) {\n            // @ts-ignore\n            if (this._scriptCaches.hasOwnProperty(resolvedPath))\n                return this._scriptCaches[resolvedPath]._cachedValue();\n            if (targetScriptAsset.type === \"script\") {\n                var module = new Module_1.Module({\n                    runtimeValueBase: this._runtimeValueBase,\n                    id: targetScriptAsset.id,\n                    path: targetScriptAsset.path,\n                    virtualPath: this._assetManager._liveAssetPathTable[targetScriptAsset.path],\n                    requireFunc: function (path, mod) { return _this._require(path, mod); },\n                    resolveFunc: function (path, mod) { return _this._resolvePath(path, mod); }\n                });\n                var script = new ScriptAssetContext_1.ScriptAssetContext(targetScriptAsset, module);\n                // @ts-ignore\n                this._scriptCaches[resolvedPath] = script;\n                return script._executeScript(currentModule);\n            }\n            else if (targetScriptAsset.type === \"text\") {\n                // JSONの場合の特殊挙動をトレースするためのコード。node.jsの仕様に準ずる\n                if (targetScriptAsset && PathUtil_1.PathUtil.resolveExtname(path) === \".json\") {\n                    // Note: node.jsではここでBOMの排除をしているが、いったんakashicでは排除しないで実装\n                    // @ts-ignore\n                    var cache = (this._scriptCaches[resolvedPath] = new RequireCachedValue_1.RequireCachedValue(JSON.parse(targetScriptAsset.data)));\n                    return cache._cachedValue();\n                }\n            }\n        }\n        throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"g._require: can not find module: \" + path);\n    };\n    /**\n     * 対象のモジュールからの相対パスを、 game.json のディレクトリをルート (`/`) とする `/` 区切りの絶対パス形式として解決する。\n     * `this._require()` と違い `path` にアセットIDが指定されても解決しない点に注意。\n     * 通常、ゲーム開発者が利用するのは `require.resolve()` であり、このメソッドはその内部実装を提供する。\n     *\n     * @ignore\n     * @param path resolve する対象のパス。相対パスを利用することができる。\n     * @param currentModule この require を実行した Module 。\n     * @returns {string} 絶対パス\n     */\n    ModuleManager.prototype._resolvePath = function (path, currentModule) {\n        var resolvedPath = null;\n        var liveAssetVirtualPathTable = this._assetManager._liveAssetVirtualPathTable;\n        var moduleMainScripts = this._assetManager._moduleMainScripts;\n        // require(X) from module at path Y\n        // 1. If X is a core module,\n        // (何もしない。コアモジュールには対応していない。ゲーム開発者は自分でコアモジュールへの依存を解決する必要がある)\n        if (/^\\.\\/|^\\.\\.\\/|^\\//.test(path)) {\n            // 2. If X begins with './' or '/' or '../'\n            if (currentModule) {\n                if (!currentModule._virtualDirname) {\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"g._require.resolve: couldn't resolve the module path without virtualPath\");\n                }\n                resolvedPath = PathUtil_1.PathUtil.resolvePath(currentModule._virtualDirname, path);\n            }\n            else {\n                if (/^\\.\\//.test(path)) {\n                    resolvedPath = path.substring(2);\n                }\n                else if (/^\\//.test(path)) {\n                    resolvedPath = path.substring(1);\n                }\n                else {\n                    throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"g._require.resolve: entry point path must start with './'\");\n                }\n            }\n            // 2.a. LOAD_AS_FILE(Y + X)\n            var targetPath = this._resolveAbsolutePathAsFile(resolvedPath, liveAssetVirtualPathTable);\n            if (targetPath) {\n                return targetPath;\n            }\n            // 2.b. LOAD_AS_DIRECTORY(Y + X)\n            targetPath = this._resolveAbsolutePathAsDirectory(resolvedPath, liveAssetVirtualPathTable);\n            if (targetPath) {\n                return targetPath;\n            }\n        }\n        else {\n            // 3. LOAD_NODE_MODULES(X, dirname(Y))\n            // akashic-engine独自仕様: 対象の `path` が `moduleMainScripts` に指定されていたらそちらを返す\n            // moduleMainScripts は将来的に非推奨となるが、後方互換性のため moduleMainScripts が存在すれば moduleMainScripts を優先する\n            if (moduleMainScripts[path]) {\n                return moduleMainScripts[path];\n            }\n            // 3.a LOAD_NODE_MODULES(X, START)\n            var dirs = currentModule ? currentModule.paths.concat() : [];\n            dirs.push(\"node_modules\");\n            for (var i = 0; i < dirs.length; ++i) {\n                var dir = dirs[i];\n                var targetPath = PathUtil_1.PathUtil.resolvePath(dir, path);\n                resolvedPath = this._resolveAbsolutePathAsFile(targetPath, liveAssetVirtualPathTable);\n                if (resolvedPath) {\n                    return resolvedPath;\n                }\n                resolvedPath = this._resolveAbsolutePathAsDirectory(targetPath, liveAssetVirtualPathTable);\n                if (resolvedPath) {\n                    return resolvedPath;\n                }\n            }\n        }\n        throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"g._require.resolve: couldn't resolve the path: \" + path);\n    };\n    /**\n     * 与えられたパス文字列がファイルパスであると仮定して、対応するアセットを探す。\n     * 見つかった場合そのアセットを、そうでない場合 `undefined` を返す。\n     * 通常、ゲーム開発者がファイルパスを扱うことはなく、このメソッドを呼び出す必要はない。\n     *\n     * @ignore\n     * @param resolvedPath パス文字列\n     * @param liveAssetPathTable パス文字列のプロパティに対応するアセットを格納したオブジェクト\n     */\n    ModuleManager.prototype._findAssetByPathAsFile = function (resolvedPath, liveAssetPathTable) {\n        if (liveAssetPathTable.hasOwnProperty(resolvedPath))\n            return liveAssetPathTable[resolvedPath];\n        if (liveAssetPathTable.hasOwnProperty(resolvedPath + \".js\"))\n            return liveAssetPathTable[resolvedPath + \".js\"];\n        return undefined;\n    };\n    /**\n     * 与えられたパス文字列がファイルパスであると仮定して、対応するアセットの絶対パスを解決する。\n     * アセットが存在した場合はそのパスを、そうでない場合 `null` を返す。\n     * 通常、ゲーム開発者がファイルパスを扱うことはなく、このメソッドを呼び出す必要はない。\n     *\n     * @ignore\n     * @param resolvedPath パス文字列\n     * @param liveAssetPathTable パス文字列のプロパティに対応するアセットを格納したオブジェクト\n     */\n    ModuleManager.prototype._resolveAbsolutePathAsFile = function (resolvedPath, liveAssetPathTable) {\n        if (liveAssetPathTable.hasOwnProperty(resolvedPath))\n            return \"/\" + resolvedPath;\n        if (liveAssetPathTable.hasOwnProperty(resolvedPath + \".js\"))\n            return \"/\" + resolvedPath + \".js\";\n        return null;\n    };\n    /**\n     * 与えられたパス文字列がディレクトリパスであると仮定して、対応するアセットの絶対パスを解決する。\n     * アセットが存在した場合はそのパスを、そうでない場合 `null` を返す。\n     * 通常、ゲーム開発者がファイルパスを扱うことはなく、このメソッドを呼び出す必要はない。\n     * ディレクトリ内に package.json が存在する場合、package.json 自体もアセットとして\n     * `liveAssetPathTable` から参照可能でなければならないことに注意。\n     *\n     * @ignore\n     * @param resolvedPath パス文字列\n     * @param liveAssetPathTable パス文字列のプロパティに対応するアセットを格納したオブジェクト\n     */\n    ModuleManager.prototype._resolveAbsolutePathAsDirectory = function (resolvedPath, liveAssetPathTable) {\n        var path = resolvedPath + \"/package.json\";\n        var asset = liveAssetPathTable[path];\n        var moduleMainPaths = this._assetManager._moduleMainPaths;\n        if (moduleMainPaths && moduleMainPaths[path]) {\n            return moduleMainPaths[path];\n        }\n        // liveAssetPathTable[path] != null だけではpathと同名のprototypeプロパティがある場合trueになってしまうので hasOwnProperty() を利用\n        if (liveAssetPathTable.hasOwnProperty(path) && asset.type === \"text\") {\n            var pkg = JSON.parse(asset.data);\n            if (pkg && typeof pkg.main === \"string\") {\n                var targetPath = this._resolveAbsolutePathAsFile(PathUtil_1.PathUtil.resolvePath(resolvedPath, pkg.main), liveAssetPathTable);\n                if (targetPath) {\n                    return targetPath;\n                }\n            }\n        }\n        path = resolvedPath + \"/index.js\";\n        if (liveAssetPathTable.hasOwnProperty(path)) {\n            return \"/\" + path;\n        }\n        return null;\n    };\n    return ModuleManager;\n}());\nexports.ModuleManager = ModuleManager;\n//# sourceMappingURL=ModuleManager.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/ModuleManager.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/NinePatchSurfaceEffector.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/NinePatchSurfaceEffector.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NinePatchSurfaceEffector = void 0;\nvar SurfaceUtil_1 = __webpack_require__(/*! ./SurfaceUtil */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js\");\n/**\n * ナインパッチによる描画処理を提供するSurfaceEffector。\n *\n * このSurfaceEffectorは、画像素材の拡大・縮小において「枠」の表現を実現するものである。\n * 画像の上下左右の「枠」部分の幅・高さを渡すことで、上下の「枠」を縦に引き延ばすことなく、\n * また左右の「枠」を横に引き延ばすことなく画像を任意サイズに拡大・縮小できる。\n * ゲームにおけるメッセージウィンドウやダイアログの表現に利用することを想定している。\n *\n * @deprecated 非推奨である。将来的に削除される。代わりに `SurfaceUtil#drawNinePatch()` を利用すること。\n */\nvar NinePatchSurfaceEffector = /** @class */ (function () {\n    /**\n     * `NinePatchSurfaceEffector` のインスタンスを生成する。\n     * @deprecated 非推奨である。将来的に削除される。代わりに `SurfaceUtil#drawNinePatch()` を利用すること。\n     * @param game このインスタンスが属する `Game`。\n     * @param borderWidth 上下左右の「拡大しない」領域の大きさ。すべて同じ値なら数値一つを渡すことができる。省略された場合、 `4`\n     */\n    function NinePatchSurfaceEffector(game, borderWidth) {\n        if (borderWidth === void 0) { borderWidth = 4; }\n        this.game = game;\n        if (typeof borderWidth === \"number\") {\n            this.borderWidth = {\n                top: borderWidth,\n                bottom: borderWidth,\n                left: borderWidth,\n                right: borderWidth\n            };\n        }\n        else {\n            this.borderWidth = borderWidth;\n        }\n    }\n    /**\n     * 指定の大きさに拡大・縮小した描画結果の `Surface` を生成して返す。詳細は `SurfaceEffector#render` の項を参照。\n     */\n    NinePatchSurfaceEffector.prototype.render = function (srcSurface, width, height) {\n        if (!this._surface || this._surface.width !== width || this._surface.height !== height || this._beforeSrcSurface !== srcSurface) {\n            this._surface = this.game.resourceFactory.createSurface(Math.ceil(width), Math.ceil(height));\n            this._beforeSrcSurface = srcSurface;\n        }\n        SurfaceUtil_1.SurfaceUtil.drawNinePatch(this._surface, srcSurface, this.borderWidth);\n        return this._surface;\n    };\n    return NinePatchSurfaceEffector;\n}());\nexports.NinePatchSurfaceEffector = NinePatchSurfaceEffector;\n//# sourceMappingURL=NinePatchSurfaceEffector.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/NinePatchSurfaceEffector.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Object2D.js":
/*!**************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Object2D.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Object2D = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar Matrix_1 = __webpack_require__(/*! ./Matrix */ \"./node_modules/@akashic/akashic-engine/lib/Matrix.js\");\n/**\n * 二次元の幾何的オブジェクト。位置とサイズ (に加えて傾きや透明度も) を持つ。\n * ゲーム開発者は `E` を使えばよく、通常このクラスを意識する必要はない。\n */\nvar Object2D = /** @class */ (function () {\n    function Object2D(param) {\n        if (!param) {\n            this.x = 0;\n            this.y = 0;\n            this.width = 0;\n            this.height = 0;\n            this.opacity = 1;\n            this.scaleX = 1;\n            this.scaleY = 1;\n            this.angle = 0;\n            this.compositeOperation = undefined;\n            this.anchorX = 0;\n            this.anchorY = 0;\n            this._matrix = undefined;\n        }\n        else {\n            this.x = param.x || 0;\n            this.y = param.y || 0;\n            this.width = param.width || 0;\n            this.height = param.height || 0;\n            this.opacity = param.opacity != null ? param.opacity : 1;\n            this.scaleX = param.scaleX != null ? param.scaleX : 1;\n            this.scaleY = param.scaleY != null ? param.scaleY : 1;\n            this.angle = param.angle || 0;\n            this.compositeOperation = param.compositeOperation;\n            // `null` に後方互換性のための意味を持たせているので、 `=== undefined` で比較する\n            this.anchorX = param.anchorX === undefined ? 0 : param.anchorX;\n            this.anchorY = param.anchorY === undefined ? 0 : param.anchorY;\n            this._matrix = undefined;\n        }\n    }\n    Object2D.prototype.moveTo = function (posOrX, y) {\n        if (typeof posOrX === \"number\" && typeof y !== \"number\") {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Object2D#moveTo: arguments must be CommonOffset or pair of x and y as a number.\");\n        }\n        if (typeof posOrX === \"number\") {\n            this.x = posOrX;\n            this.y = y;\n        }\n        else {\n            this.x = posOrX.x;\n            this.y = posOrX.y;\n        }\n    };\n    /**\n     * オブジェクトを相対的に移動する。\n     * このメソッドは `x` と `y` を同時に加算するためのユーティリティメソッドである。\n     * `E` や `Camera2D` においてこのメソッドを呼び出した場合、 `modified()` を呼び出す必要がある。\n     * @param x X座標に加算する値\n     * @param y Y座標に加算する値\n     */\n    Object2D.prototype.moveBy = function (x, y) {\n        this.x += x;\n        this.y += y;\n    };\n    Object2D.prototype.resizeTo = function (sizeOrWidth, height) {\n        if (typeof sizeOrWidth === \"number\" && typeof height !== \"number\") {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Object2D#resizeTo: arguments must be CommonSize or pair of width and height as a number.\");\n        }\n        if (typeof sizeOrWidth === \"number\") {\n            this.width = sizeOrWidth;\n            this.height = height;\n        }\n        else {\n            this.width = sizeOrWidth.width;\n            this.height = sizeOrWidth.height;\n        }\n    };\n    /**\n     * オブジェクトのサイズを相対的に変更する。\n     * このメソッドは `width` と `height` を同時に加算するためのユーティリティメソッドである。\n     * `E` や `Camera2D` においてこのメソッドを呼び出した場合、 `modified()` を呼び出す必要がある。\n     * @param width 加算する幅\n     * @param height 加算する高さ\n     */\n    Object2D.prototype.resizeBy = function (width, height) {\n        this.width += width;\n        this.height += height;\n    };\n    /**\n     * オブジェクトの拡大率を設定する。\n     * このメソッドは `scaleX` と `scaleY` に同じ値を同時に設定するためのユーティリティメソッドである。\n     * `E` や `Camera2D` においてこのメソッドを呼び出した場合、 `modified()` を呼び出す必要がある。\n     * @param scale 拡大率\n     */\n    Object2D.prototype.scale = function (scale) {\n        this.scaleX = scale;\n        this.scaleY = scale;\n    };\n    /**\n     * オブジェクトのアンカーの位置を設定する。\n     * このメソッドは `anchorX` と `anchorY` を同時に設定するためのユーティリティメソッドである。\n     * `E` や `Camera2D` においてこのメソッドを呼び出した場合、 `modified()` を呼び出す必要がある。\n     */\n    Object2D.prototype.anchor = function (x, y) {\n        this.anchorX = x;\n        this.anchorY = y;\n    };\n    /**\n     * このオブジェクトの変換行列を得る。\n     */\n    Object2D.prototype.getMatrix = function () {\n        if (!this._matrix) {\n            this._matrix = new Matrix_1.PlainMatrix();\n        }\n        else if (!this._matrix._modified) {\n            return this._matrix;\n        }\n        this._updateMatrix();\n        this._matrix._modified = false;\n        return this._matrix;\n    };\n    /**\n     * 公開のプロパティから内部の変換行列キャッシュを更新する。\n     * @private\n     */\n    Object2D.prototype._updateMatrix = function () {\n        if (this.angle || this.scaleX !== 1 || this.scaleY !== 1 || this.anchorX !== 0 || this.anchorY !== 0) {\n            // @ts-ignore\n            this._matrix.update(this.width, this.height, this.scaleX, this.scaleY, this.angle, this.x, this.y, this.anchorX, this.anchorY);\n        }\n        else {\n            // @ts-ignore\n            this._matrix.reset(this.x, this.y);\n        }\n    };\n    return Object2D;\n}());\nexports.Object2D = Object2D;\n//# sourceMappingURL=Object2D.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Object2D.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/OperationPlugin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/OperationPlugin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=OperationPlugin.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/OperationPlugin.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/OperationPluginManager.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/OperationPluginManager.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OperationPluginManager = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\n/**\n * 操作プラグインからの通知をハンドルするクラス。\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n * @ignore\n */\nvar OperationHandler = /** @class */ (function () {\n    function OperationHandler(code, owner, handler) {\n        this._code = code;\n        this._handler = handler;\n        this._handlerOwner = owner;\n    }\n    OperationHandler.prototype.onOperation = function (op) {\n        var iop;\n        if (Array.isArray(op)) {\n            iop = { _code: this._code, data: op };\n        }\n        else {\n            iop = __assign({ _code: this._code }, op);\n        }\n        this._handler.call(this._handlerOwner, iop);\n    };\n    return OperationHandler;\n}());\n/**\n * 操作プラグインを管理するクラス。\n * 通常は game.json の `operationPlugins` フィールドを基に自動的に初期化される他、\n * ゲーム開発者は本クラスを用いて直接操作プラグインを登録することもできる。\n * 詳細は `this.register()` のコメントを参照。\n *\n * 本クラスのインスタンスをゲーム開発者が直接生成することない。\n */\nvar OperationPluginManager = /** @class */ (function () {\n    function OperationPluginManager(game, viewInfo) {\n        this.onOperate = new trigger_1.Trigger();\n        this.operated = this.onOperate;\n        this.plugins = {};\n        this._game = game;\n        this._viewInfo = viewInfo;\n    }\n    /**\n     * 操作プラグインを手動で登録する。\n     * このメソッドを利用する場合、game.json の `operationPlugins` フィールドから該当の定義を省略する必要がある。\n     * 登録後、ゲーム開発者自身で `OperationPluginManager#start()` を呼び出さなければならない点に注意。\n     * @param pluginClass new 可能な操作プラグインの実態\n     * @param code 操作プラグインの識別コード\n     * @param option 操作プラグインのコンストラクタに渡すパラメータ\n     */\n    OperationPluginManager.prototype.register = function (pluginClass, code, option) {\n        return this._instantiateOperationPlugin(pluginClass, code, option);\n    };\n    /**\n     * 対象の操作プラグインを開始する。\n     * @param code 操作プラグインの識別コード\n     */\n    OperationPluginManager.prototype.start = function (code) {\n        var plugin = this.plugins[code];\n        if (!plugin)\n            return;\n        plugin.start();\n    };\n    /**\n     * 対象の操作プラグインを終了する。\n     * @param code 操作プラグインの識別コード\n     */\n    OperationPluginManager.prototype.stop = function (code) {\n        var plugin = this.plugins[code];\n        if (!plugin)\n            return;\n        plugin.stop();\n    };\n    OperationPluginManager.prototype.destroy = function () {\n        this.stopAll();\n        this.onOperate.destroy();\n        this.onOperate = undefined;\n        this.operated = undefined;\n        this.plugins = undefined;\n        this._game = undefined;\n        this._viewInfo = undefined;\n    };\n    OperationPluginManager.prototype.reset = function () {\n        this.stopAll();\n        this.onOperate.removeAll();\n        this.plugins = {};\n    };\n    OperationPluginManager.prototype.stopAll = function () {\n        for (var code in this.plugins) {\n            if (!this.plugins.hasOwnProperty(code))\n                continue;\n            var plugin = this.plugins[code];\n            if (plugin)\n                plugin.stop();\n        }\n    };\n    OperationPluginManager.prototype._instantiateOperationPlugin = function (pluginClass, code, option) {\n        if (!pluginClass.isSupported()) {\n            return;\n        }\n        if (this.plugins[code]) {\n            throw new Error(\"Plugin#code conflicted for code: \".concat(code));\n        }\n        var plugin = new pluginClass(this._game, this._viewInfo, option);\n        this.plugins[code] = plugin;\n        var handler = new OperationHandler(code, this.onOperate, this.onOperate.fire);\n        plugin.operationTrigger.add(handler.onOperation, handler);\n        return plugin;\n    };\n    return OperationPluginManager;\n}());\nexports.OperationPluginManager = OperationPluginManager;\n//# sourceMappingURL=OperationPluginManager.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/OperationPluginManager.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/OperationPluginOperation.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/OperationPluginOperation.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=OperationPluginOperation.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/OperationPluginOperation.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/OperationPluginStatic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/OperationPluginStatic.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=OperationPluginStatic.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/OperationPluginStatic.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Player.js":
/*!************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Player.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=Player.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Player.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/PointEventResolver.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/PointEventResolver.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PointEventResolver = void 0;\n/**\n * PlatformPointEventからg.Eventへの変換機構。\n *\n * ほぼ座標しか持たないPlatformPointEventに対して、g.Point(Down|Move|Up)Eventはその座標にあるエンティティや、\n * (g.Point(Move|Up)Eventの場合)g.PointDownEventからの座標の差分を持っている。\n * それらの足りない情報を管理・追加して、PlatformPointEventをg.Eventに変換するクラス。\n * Platform実装はpointDown()なしでpointMove()を呼び出してくることも考えられるため、\n * Down -> Move -> Up の流れを保証する機能も持つ。\n *\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n * @ignore\n */\nvar PointEventResolver = /** @class */ (function () {\n    function PointEventResolver(param) {\n        var _a;\n        this._currentPoints = 0;\n        // g.Eと関連した座標データ\n        this._pointEventMap = {};\n        this._sourceResolver = param.sourceResolver;\n        this._playerId = param.playerId;\n        this._maxPoints = (_a = param.maxPoints) !== null && _a !== void 0 ? _a : null;\n    }\n    PointEventResolver.prototype.pointDown = function (e) {\n        if (this._maxPoints != null && this._currentPoints >= this._maxPoints) {\n            return null;\n        }\n        var source = this._sourceResolver.findPointSource(e.offset);\n        // @ts-ignore\n        var point = source.point ? source.point : e.offset;\n        // @ts-ignore\n        var targetId = source.target ? source.target.id : undefined;\n        // @ts-ignore\n        var local = source.local;\n        this._pointEventMap[e.identifier] = {\n            targetId: targetId,\n            local: local,\n            point: point,\n            start: { x: e.offset.x, y: e.offset.y },\n            prev: { x: e.offset.x, y: e.offset.y }\n        };\n        this._currentPoints++;\n        // NOTE: 優先度は機械的にJoinedをつけておく。Joinしていない限りPointDownEventなどはリジェクトされる。\n        var ret = [\n            33 /* pl.EventCode.PointDown */, // 0: イベントコード\n            2 /* EventPriority.Joined */, //   1: 優先度\n            this._playerId, //         2: プレイヤーID\n            e.identifier, //           3: ポインターID\n            point.x, //                4: X座標\n            point.y, //                5: Y座標\n            targetId, //               6?: エンティティID\n            e.button //                7?: ボタンの種類\n        ];\n        if (source && source.local)\n            ret.push(source.local); // 8?: ローカル\n        return ret;\n    };\n    PointEventResolver.prototype.pointMove = function (e) {\n        var holder = this._pointEventMap[e.identifier];\n        if (!holder)\n            return null;\n        var prev = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        this._pointMoveAndUp(holder, e.offset, prev, start);\n        var ret = [\n            34 /* pl.EventCode.PointMove */, // 0: イベントコード\n            2 /* EventPriority.Joined */, //   1: 優先度\n            this._playerId, //         2: プレイヤーID\n            e.identifier, //           3: ポインターID\n            holder.point.x, //         4: X座標\n            holder.point.y, //         5: Y座標\n            start.x, //                6: ポイントダウンイベントからのX座標の差\n            start.y, //                7: ポイントダウンイベントからのY座標の差\n            prev.x, //                 8: 直前のポイントムーブイベントからのX座標の差\n            prev.y, //                 9: 直前のポイントムーブイベントからのY座標の差\n            holder.targetId, //        10?: エンティティID\n            e.button //                11?: ボタンの種類\n        ];\n        if (holder.local)\n            ret.push(holder.local); // 11?: ローカル\n        return ret;\n    };\n    PointEventResolver.prototype.pointUp = function (e) {\n        var holder = this._pointEventMap[e.identifier];\n        if (!holder)\n            return null;\n        var prev = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        this._pointMoveAndUp(holder, e.offset, prev, start);\n        delete this._pointEventMap[e.identifier];\n        this._currentPoints--;\n        var ret = [\n            35 /* pl.EventCode.PointUp */, // 0: イベントコード\n            2 /* EventPriority.Joined */, // 1: 優先度\n            this._playerId, //       2: プレイヤーID\n            e.identifier, //         3: ポインターID\n            holder.point.x, //       4: X座標\n            holder.point.y, //       5: Y座標\n            start.x, //              6: ポイントダウンイベントからのX座標の差\n            start.y, //              7: ポイントダウンイベントからのY座標の差\n            prev.x, //               8: 直前のポイントムーブイベントからのX座標の差\n            prev.y, //               9: 直前のポイントムーブイベントからのY座標の差\n            holder.targetId, //      10?: エンティティID\n            e.button //              11?: ボタンの種類\n        ];\n        if (holder.local)\n            ret.push(holder.local); // 11?: ローカル\n        return ret;\n    };\n    PointEventResolver.prototype._pointMoveAndUp = function (holder, offset, prevDelta, startDelta) {\n        startDelta.x = offset.x - holder.start.x;\n        startDelta.y = offset.y - holder.start.y;\n        prevDelta.x = offset.x - holder.prev.x;\n        prevDelta.y = offset.y - holder.prev.y;\n        holder.prev.x = offset.x;\n        holder.prev.y = offset.y;\n    };\n    return PointEventResolver;\n}());\nexports.PointEventResolver = PointEventResolver;\n//# sourceMappingURL=PointEventResolver.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/PointEventResolver.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/RandomGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/RandomGenerator.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RandomGenerator = void 0;\n/**\n * 乱数生成器。\n * `RandomGenerator#get()` によって、新しい乱数を生成することができる。\n */\nvar RandomGenerator = /** @class */ (function () {\n    function RandomGenerator(seed) {\n        this.seed = seed;\n    }\n    return RandomGenerator;\n}());\nexports.RandomGenerator = RandomGenerator;\n//# sourceMappingURL=RandomGenerator.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/RandomGenerator.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Require.js":
/*!*************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Require.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=Require.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Require.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/RequireCacheable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/RequireCacheable.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=RequireCacheable.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/RequireCacheable.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/RequireCachedValue.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/RequireCachedValue.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RequireCachedValue = void 0;\nvar RequireCachedValue = /** @class */ (function () {\n    function RequireCachedValue(value) {\n        this._value = value;\n    }\n    /**\n     * @private\n     */\n    RequireCachedValue.prototype._cachedValue = function () {\n        return this._value;\n    };\n    return RequireCachedValue;\n}());\nexports.RequireCachedValue = RequireCachedValue;\n//# sourceMappingURL=RequireCachedValue.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/RequireCachedValue.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Scene.js":
/*!***********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Scene.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scene = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar AssetHolder_1 = __webpack_require__(/*! ./AssetHolder */ \"./node_modules/@akashic/akashic-engine/lib/AssetHolder.js\");\nvar Camera2D_1 = __webpack_require__(/*! ./Camera2D */ \"./node_modules/@akashic/akashic-engine/lib/Camera2D.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar TimerManager_1 = __webpack_require__(/*! ./TimerManager */ \"./node_modules/@akashic/akashic-engine/lib/TimerManager.js\");\n/**\n * シーンを表すクラス。\n */\nvar Scene = /** @class */ (function () {\n    /**\n     * 各種パラメータを指定して `Scene` のインスタンスを生成する。\n     * @param param 初期化に用いるパラメータのオブジェクト\n     */\n    function Scene(param) {\n        var game = param.game;\n        var local = param.local === undefined\n            ? \"non-local\"\n            : param.local === false\n                ? \"non-local\"\n                : param.local === true\n                    ? \"full-local\"\n                    : param.local;\n        var tickGenerationMode = param.tickGenerationMode !== undefined ? param.tickGenerationMode : \"by-clock\";\n        this.name = param.name;\n        this.game = game;\n        this.local = local;\n        this.tickGenerationMode = tickGenerationMode;\n        this.onLoad = new trigger_1.Trigger();\n        this.loaded = this.onLoad;\n        this._onReady = new trigger_1.Trigger();\n        this._ready = this._onReady;\n        this.assets = {};\n        this.asset = game.asset;\n        this.vars = {};\n        this._loaded = false;\n        this._prefetchRequested = false;\n        this._loadingState = \"initial\";\n        this.onUpdate = new trigger_1.Trigger();\n        this.update = this.onUpdate;\n        this._timer = new TimerManager_1.TimerManager(this.onUpdate, this.game.fps);\n        this.onAssetLoad = new trigger_1.Trigger();\n        this.onAssetLoadFailure = new trigger_1.Trigger();\n        this.onAssetLoadComplete = new trigger_1.Trigger();\n        this.assetLoaded = this.onAssetLoad;\n        this.assetLoadFailed = this.onAssetLoadFailure;\n        this.assetLoadCompleted = this.onAssetLoadComplete;\n        this.onMessage = new trigger_1.Trigger();\n        this.onPointDownCapture = new trigger_1.Trigger();\n        this.onPointMoveCapture = new trigger_1.Trigger();\n        this.onPointUpCapture = new trigger_1.Trigger();\n        this.onOperation = new trigger_1.Trigger();\n        this.message = this.onMessage;\n        this.pointDownCapture = this.onPointDownCapture;\n        this.pointMoveCapture = this.onPointMoveCapture;\n        this.pointUpCapture = this.onPointUpCapture;\n        this.operation = this.onOperation;\n        this.children = [];\n        this.state = \"standby\";\n        this.onStateChange = new trigger_1.Trigger();\n        this._assetHolders = [];\n        this._sceneAssetHolder = new AssetHolder_1.AssetHolder({\n            assetManager: this.game._assetManager,\n            assetIds: param.assetIds,\n            assetPaths: param.assetPaths,\n            handlerSet: {\n                owner: this,\n                handleLoad: this._handleSceneAssetLoad,\n                handleLoadFailure: this._handleSceneAssetLoadFailure,\n                handleFinish: this._handleSceneAssetLoadFinish\n            },\n            userData: null\n        });\n        this.seethrough = param.seethrough != null ? param.seethrough : false;\n    }\n    /**\n     * このシーンが変更されたことをエンジンに通知する。\n     *\n     * このメソッドは、このシーンに紐づいている `E` の `modified()` を呼び出すことで暗黙に呼び出される。\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     * @param _isBubbling この関数をこのシーンの子の `modified()` から呼び出す場合、真を渡さなくてはならない。省略された場合、偽。\n     */\n    Scene.prototype.modified = function (_isBubbling) {\n        this.game.modified();\n    };\n    /**\n     * このシーンを破棄する。\n     *\n     * 破棄処理の開始時に、このシーンの `onStateChange` が引数 `BeforeDestroyed` でfireされる。\n     * 破棄処理の終了時に、このシーンの `onStateChange` が引数 `Destroyed` でfireされる。\n     * このシーンに紐づいている全ての `E` と全てのTimerは破棄される。\n     * `Scene#setInterval()`, `Scene#setTimeout()` に渡された関数は呼び出されなくなる。\n     *\n     * このメソッドは `Scene#end` や `Game#popScene` などによって要求されたシーンの遷移時に暗黙に呼び出される。\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     */\n    Scene.prototype.destroy = function () {\n        this.state = \"before-destroyed\";\n        this.onStateChange.fire(this.state);\n        // TODO: (GAMEDEV-483) Sceneスタックがそれなりの量になると重くなるのでScene#dbが必要かもしれない\n        for (var _i = 0, _a = [this.game.db, this.game._localDb]; _i < _a.length; _i++) {\n            var db = _a[_i];\n            for (var _b = 0, _c = db.keys(); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var e = db.get(key);\n                if ((e === null || e === void 0 ? void 0 : e.scene) === this) {\n                    e.destroy();\n                }\n            }\n        }\n        this._timer.destroy();\n        this.onUpdate.destroy();\n        this.onMessage.destroy();\n        this.onPointDownCapture.destroy();\n        this.onPointMoveCapture.destroy();\n        this.onPointUpCapture.destroy();\n        this.onOperation.destroy();\n        this.onLoad.destroy();\n        this.onAssetLoad.destroy();\n        this.onAssetLoadFailure.destroy();\n        this.onAssetLoadComplete.destroy();\n        this.assets = {};\n        this.vars = {};\n        // アセットを参照しているEより先に解放しないよう最後に解放する\n        for (var i = 0; i < this._assetHolders.length; ++i)\n            this._assetHolders[i].destroy();\n        this._sceneAssetHolder.destroy();\n        this.game = undefined;\n        this._waitingPrepare = undefined;\n        this.state = \"destroyed\";\n        this.onStateChange.fire(this.state);\n        this.onStateChange.destroy();\n    };\n    /**\n     * 破棄済みであるかを返す。\n     */\n    Scene.prototype.destroyed = function () {\n        return this.game === undefined;\n    };\n    /**\n     * 一定間隔で定期的に処理を実行するTimerを作成して返す。\n     *\n     * 戻り値は作成されたTimerである。\n     * 通常は `Scene#setInterval` を利用すればよく、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     * `Timer` はフレーム経過処理(`Scene#onUpdate`)で実現される疑似的なタイマーである。実時間の影響は受けない。\n     * @param interval Timerの実行間隔（ミリ秒）\n     */\n    Scene.prototype.createTimer = function (interval) {\n        return this._timer.createTimer(interval);\n    };\n    /**\n     * Timerを削除する。\n     * `Scene#createTimer()`と同様に、通常はゲーム開発者がこのメソッドを呼び出す必要はない。\n     * このメソッドを利用する場合、メソッド実行前に対象のTimerのonElapseに登録したハンドラを全て削除しておく必要がある。\n     * @param timer 削除するTimer\n     */\n    Scene.prototype.deleteTimer = function (timer) {\n        this._timer.deleteTimer(timer);\n    };\n    /**\n     * 一定間隔で定期的に実行される処理を作成する。\n     *\n     * `interval` ミリ秒おきに `owner` を `this` として `handler` を呼び出す。\n     * 戻り値は `Scene#clearInterval` の引数に指定して定期実行を解除するために使える値である。\n     * このタイマーはフレーム経過処理(`Scene#onUpdate`)で実現される疑似的なタイマーである。実時間の影響は受けない。\n     * 関数は指定時間の経過直後ではなく、経過後最初のフレームで呼び出される。\n     * @param handler 処理\n     * @param interval 実行間隔(ミリ秒)\n     * @param owner handlerの所有者。省略された場合、null\n     */\n    Scene.prototype.setInterval = function (handler, interval, owner) {\n        return this._timer.setInterval(handler, interval, owner);\n    };\n    /**\n     * setIntervalで作成した定期処理を解除する。\n     * @param identifier 解除対象\n     */\n    Scene.prototype.clearInterval = function (identifier) {\n        this._timer.clearInterval(identifier);\n    };\n    /**\n     * 一定時間後に一度だけ実行される処理を作成する。\n     *\n     * `milliseconds` ミリ秒後(以降)に、一度だけ `owner` を `this` として `handler` を呼び出す。\n     * 戻り値は `Scene#clearTimeout` の引数に指定して処理を削除するために使える値である。\n     *\n     * このタイマーはフレーム経過処理(`Scene#onUpdate`)で実現される疑似的なタイマーである。実時間の影響は受けない。\n     * 関数は指定時間の経過直後ではなく、経過後最初のフレームで呼び出される。\n     * (理想的なケースでは、30FPSなら50msのコールバックは66.6ms時点で呼び出される)\n     * 時間経過に対して厳密な処理を行う必要があれば、自力で `Scene#onUpdate` 通知を処理すること。\n     *\n     * @param handler 処理\n     * @param milliseconds 時間(ミリ秒)\n     * @param owner handlerの所有者。省略された場合、null\n     */\n    Scene.prototype.setTimeout = function (handler, milliseconds, owner) {\n        return this._timer.setTimeout(handler, milliseconds, owner);\n    };\n    /**\n     * setTimeoutで作成した処理を削除する。\n     * @param identifier 解除対象\n     */\n    Scene.prototype.clearTimeout = function (identifier) {\n        this._timer.clearTimeout(identifier);\n    };\n    /**\n     * このシーンが現在のシーンであるかどうかを返す。\n     */\n    Scene.prototype.isCurrentScene = function () {\n        return this.game.scene() === this;\n    };\n    /**\n     * 次のシーンへの遷移を要求する。\n     *\n     * このメソッドは、 `toPush` が真ならば `Game#pushScene()` の、でなければ `Game#replaceScene` のエイリアスである。\n     * このメソッドは要求を行うだけである。呼び出し直後にはシーン遷移は行われていないことに注意。\n     * このシーンが現在のシーンでない場合、 `AssertionError` がthrowされる。\n     * @param next 遷移後のシーン\n     * @param toPush 現在のシーンを残したままにするなら真、削除して遷移するなら偽を指定する。省略された場合偽\n     */\n    Scene.prototype.gotoScene = function (next, toPush) {\n        if (!this.isCurrentScene())\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Scene#gotoScene: this scene is not the current scene\");\n        if (toPush) {\n            this.game.pushScene(next);\n        }\n        else {\n            this.game.replaceScene(next);\n        }\n    };\n    /**\n     * このシーンの削除と、一つ前のシーンへの遷移を要求する。\n     *\n     * このメソッドは `Game#popScene()` のエイリアスである。\n     * このメソッドは要求を行うだけである。呼び出し直後にはシーン遷移は行われていないことに注意。\n     * このシーンが現在のシーンでない場合、 `AssertionError` がthrowされる。\n     */\n    Scene.prototype.end = function () {\n        if (!this.isCurrentScene())\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Scene#end: this scene is not the current scene\");\n        this.game.popScene();\n    };\n    /**\n     * このSceneにエンティティを登録する。\n     *\n     * このメソッドは各エンティティに対して暗黙に呼び出される。ゲーム開発者がこのメソッドを明示的に呼び出す必要はない。\n     * @param e 登録するエンティティ\n     */\n    Scene.prototype.register = function (e) {\n        this.game.register(e);\n        e.scene = this;\n    };\n    /**\n     * このSceneからエンティティの登録を削除する。\n     *\n     * このメソッドは各エンティティに対して暗黙に呼び出される。ゲーム開発者がこのメソッドを明示的に呼び出す必要はない。\n     * @param e 登録を削除するエンティティ\n     */\n    Scene.prototype.unregister = function (e) {\n        // @ts-ignore\n        e.scene = undefined;\n        this.game.unregister(e);\n    };\n    /**\n     * 子エンティティを追加する。\n     *\n     * `this.children` の末尾に `e` を追加する(`e` はそれまでに追加されたすべての子エンティティより手前に表示される)。\n     *\n     * @param e 子エンティティとして追加するエンティティ\n     */\n    Scene.prototype.append = function (e) {\n        this.insertBefore(e, undefined);\n    };\n    /**\n     * 子エンティティを挿入する。\n     *\n     * `this.children` の`target`の位置に `e` を挿入する。\n     * `target` が`this` の子でない場合、`append(e)`と同じ動作となる。\n     *\n     * @param e 子エンティティとして追加するエンティティ\n     * @param target 挿入位置にある子エンティティ\n     */\n    Scene.prototype.insertBefore = function (e, target) {\n        if (e.parent)\n            e.remove();\n        e.parent = this;\n        var index = -1;\n        if (target !== undefined && (index = this.children.indexOf(target)) > -1) {\n            this.children.splice(index, 0, e);\n        }\n        else {\n            this.children.push(e);\n        }\n        this.modified(true);\n    };\n    /**\n     * 子エンティティを削除する。\n     * `this` の子から `e` を削除する。 `e` が `this` の子でない場合、何もしない。\n     * @param e 削除する子エンティティ\n     */\n    Scene.prototype.remove = function (e) {\n        var index = this.children.indexOf(e);\n        if (index === -1)\n            return;\n        this.children[index].parent = undefined;\n        this.children.splice(index, 1);\n        this.modified(true);\n    };\n    /**\n     * シーン内でその座標に反応する `PointSource` を返す。\n     * @param point 対象の座標\n     * @param force touchable指定を無視する場合真を指定する。指定されなかった場合偽\n     * @param camera 対象のカメラ。指定されなかった場合undefined\n     */\n    Scene.prototype.findPointSourceByPoint = function (point, force, camera) {\n        var mayConsumeLocalTick = this.local !== \"non-local\";\n        var children = this.children;\n        var m = camera && camera instanceof Camera2D_1.Camera2D ? camera.getMatrix() : undefined;\n        for (var i = children.length - 1; i >= 0; --i) {\n            var ret = children[i].findPointSourceByPoint(point, m, force);\n            if (ret) {\n                ret.local = (ret.target && ret.target.local) || mayConsumeLocalTick;\n                return ret;\n            }\n        }\n        return { target: undefined, point: undefined, local: mayConsumeLocalTick };\n    };\n    /**\n     * アセットの先読みを要求する。\n     *\n     * `Scene` に必要なアセットは、通常、`Game#pushScene()` などによるシーン遷移にともなって暗黙に読み込みが開始される。\n     * ゲーム開発者はこのメソッドを呼び出すことで、シーン遷移前にアセット読み込みを開始する(先読みする)ことができる。\n     * 先読み開始後、シーン遷移時までに読み込みが完了していない場合、通常の読み込み処理同様にローディングシーンが表示される。\n     */\n    Scene.prototype.prefetch = function () {\n        if (this._loaded) {\n            // _load() 呼び出し後に prefetch() する意味はない(先読みではない)。\n            return;\n        }\n        if (this._prefetchRequested)\n            return;\n        this._prefetchRequested = true;\n        this._sceneAssetHolder.request();\n    };\n    Scene.prototype.requestAssets = function (assetIdsOrConf, handler) {\n        var _this = this;\n        if (this._loadingState !== \"ready-fired\" && this._loadingState !== \"loaded-fired\") {\n            // このメソッドは読み込み完了前には呼び出せない。これは実装上の制限である。\n            // やろうと思えば _load() で読み込む対象として加えることができる。が、その場合 `handler` を呼び出す方法が単純でないので対応を見送る。\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"Scene#requestAssets(): can be called after loaded.\");\n        }\n        var assetIds;\n        var alwaysNotifyFinish;\n        if (Array.isArray(assetIdsOrConf)) {\n            assetIds = assetIdsOrConf;\n            alwaysNotifyFinish = false;\n        }\n        else {\n            assetIds = assetIdsOrConf.assetIds;\n            alwaysNotifyFinish = !!assetIdsOrConf.notifyErrorOnCallback;\n        }\n        var holder = new AssetHolder_1.AssetHolder({\n            assetManager: this.game._assetManager,\n            assetIds: assetIds,\n            alwaysNotifyFinish: alwaysNotifyFinish,\n            handlerSet: {\n                owner: this,\n                handleLoad: this._handleSceneAssetLoad,\n                handleLoadFailure: this._handleSceneAssetLoadFailure,\n                handleFinish: this._handleSceneAssetLoadFinish\n            },\n            userData: function () {\n                // 不要なクロージャは避けたいが生存チェックのため不可避\n                if (!_this.destroyed()) {\n                    var failureAssetIds = holder._getFailureAssetIds();\n                    if (failureAssetIds.length) {\n                        // このパスに入るのは AssetHolder の alwaysNotifyFinish フラグを真にした時のみであることに注意\n                        var error = ExceptionFactory_1.ExceptionFactory.createRequestAssetLoadError(\"Scene#requestAssets(): failed to load the asset. refer to the 'detail' property for more information.\", { failureAssetIds: failureAssetIds });\n                        handler(error);\n                    }\n                    else {\n                        handler();\n                    }\n                }\n            }\n        });\n        this._assetHolders.push(holder);\n        holder.request();\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._activate = function () {\n        this.state = \"active\";\n        this.onStateChange.fire(this.state);\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._deactivate = function () {\n        this.state = \"deactive\";\n        this.onStateChange.fire(this.state);\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._needsLoading = function () {\n        return this._sceneAssetHolder.waitingAssetsCount > 0 || !!this._waitingPrepare;\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._load = function () {\n        if (this._loaded)\n            return;\n        this._loaded = true;\n        if (!this._sceneAssetHolder.request()) {\n            this._notifySceneReady();\n        }\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._handleSceneAssetLoad = function (asset) {\n        this.assets[asset.id] = asset;\n        this.onAssetLoad.fire(asset);\n        this.onAssetLoadComplete.fire(asset);\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._handleSceneAssetLoadFailure = function (failureInfo) {\n        this.onAssetLoadFailure.fire(failureInfo);\n        this.onAssetLoadComplete.fire(failureInfo.asset);\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._handleSceneAssetLoadFinish = function (holder, succeed) {\n        if (!succeed) {\n            this.game.terminateGame();\n            return;\n        }\n        // 動的アセット (`requestAssets()` 由来) の場合\n        if (holder.userData) {\n            this.game._pushPostTickTask(holder.userData, null);\n            return;\n        }\n        if (!this._loaded) {\n            // prefetch() で開始されたアセット読み込みを完了したが、_load() がまだ呼ばれていない。\n            // _notifySceneReady() は _load() 呼び出し後まで遅延する。\n            return;\n        }\n        this._notifySceneReady();\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._notifySceneReady = function () {\n        // 即座に `_onReady` をfireすることはしない。tick()のタイミングで行うため、リクエストをgameに投げておく。\n        this._loadingState = \"ready\";\n        this.game._pushPostTickTask(this._fireReady, this);\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._fireReady = function () {\n        if (this.destroyed())\n            return;\n        this._onReady.fire(this);\n        this._loadingState = \"ready-fired\";\n    };\n    /**\n     * @private\n     */\n    Scene.prototype._fireLoaded = function () {\n        if (this.destroyed())\n            return;\n        if (this._loadingState === \"loaded-fired\")\n            return;\n        this.onLoad.fire(this);\n        this._loadingState = \"loaded-fired\";\n    };\n    return Scene;\n}());\nexports.Scene = Scene;\n//# sourceMappingURL=Scene.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Scene.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/ScriptAssetContext.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/ScriptAssetContext.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScriptAssetContext = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\n/**\n * `ScriptAsset` の実行コンテキスト。\n * 通常スクリプトアセットを実行するためにはこのクラスを経由する。\n *\n * ゲーム開発者がこのクラスを利用する必要はない。\n * スクリプトアセットを実行する場合は、暗黙にこのクラスを利用する `require()` を用いること。\n */\nvar ScriptAssetContext = /** @class */ (function () {\n    function ScriptAssetContext(asset, module) {\n        this._asset = asset;\n        this._module = module;\n        this._started = false;\n    }\n    /**\n     * @private\n     */\n    ScriptAssetContext.prototype._cachedValue = function () {\n        if (!this._started)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"ScriptAssetContext#_cachedValue: not executed yet.\");\n        return this._module.exports;\n    };\n    /**\n     * @private\n     */\n    ScriptAssetContext.prototype._executeScript = function (currentModule) {\n        if (this._started)\n            return this._module.exports;\n        if (currentModule) {\n            // Node.js 互換挙動: Module#parent は一番最初に require() した module になる\n            this._module.parent = currentModule;\n            // Node.js 互換挙動: 親 module の children には自身が実行中の段階で既に追加されている\n            currentModule.children.push(this._module);\n        }\n        this._started = true;\n        this._asset.execute(this._module._runtimeValue);\n        this._module.loaded = true;\n        return this._module.exports;\n    };\n    return ScriptAssetContext;\n}());\nexports.ScriptAssetContext = ScriptAssetContext;\n//# sourceMappingURL=ScriptAssetContext.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/ScriptAssetContext.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/ShaderProgram.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/ShaderProgram.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShaderProgram = void 0;\n/**\n * akashic-engineにおけるシェーダ機能を提供するクラス。\n * 現バージョンのakashic-engineではフラグメントシェーダのみをサポートする。\n */\nvar ShaderProgram = /** @class */ (function () {\n    /**\n     * 各種パラメータを指定して `ShaderProgram` のインスタンスを生成する。\n     * @param param `ShaderProgram` に設定するパラメータ\n     */\n    function ShaderProgram(param) {\n        this.fragmentShader = param.fragmentShader;\n        this.uniforms = param.uniforms;\n    }\n    return ShaderProgram;\n}());\nexports.ShaderProgram = ShaderProgram;\n//# sourceMappingURL=ShaderProgram.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/ShaderProgram.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SnapshotSaveRequest.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SnapshotSaveRequest.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=SnapshotSaveRequest.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SnapshotSaveRequest.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SpriteFactory.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SpriteFactory.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpriteFactory = void 0;\nvar Sprite_1 = __webpack_require__(/*! ./entities/Sprite */ \"./node_modules/@akashic/akashic-engine/lib/entities/Sprite.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar SpriteFactory = /** @class */ (function () {\n    function SpriteFactory() {\n    }\n    /**\n     * e の描画内容を持つ Sprite を生成する。\n     * @param scene 作成したSpriteを登録するScene\n     * @param e Sprite化したいE\n     * @param camera 使用カメラ\n     */\n    SpriteFactory.createSpriteFromE = function (scene, e, camera) {\n        var oldX = e.x;\n        var oldY = e.y;\n        var x = 0;\n        var y = 0;\n        var width = e.width;\n        var height = e.height;\n        var boundingRect = e.calculateBoundingRect();\n        if (!boundingRect) {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"SpriteFactory.createSpriteFromE: camera must look e\");\n        }\n        width = boundingRect.right - boundingRect.left;\n        height = boundingRect.bottom - boundingRect.top;\n        if (boundingRect.left < e.x)\n            x = e.x - boundingRect.left;\n        if (boundingRect.top < e.y)\n            y = e.y - boundingRect.top;\n        e.moveTo(x, y);\n        // 再描画フラグを立てたくないために e._matrix を直接触っている\n        if (e._matrix)\n            e._matrix._modified = true;\n        var surface = scene.game.resourceFactory.createSurface(Math.ceil(width), Math.ceil(height));\n        var renderer = surface.renderer();\n        renderer.begin();\n        e.render(renderer, camera);\n        renderer.end();\n        var s = new Sprite_1.Sprite({\n            scene: scene,\n            src: surface,\n            width: width,\n            height: height\n        });\n        s.moveTo(boundingRect.left, boundingRect.top);\n        e.moveTo(oldX, oldY);\n        if (e._matrix)\n            e._matrix._modified = true;\n        return s;\n    };\n    /**\n     * scene の描画内容を持つ Sprite を生成する。\n     * @param toScene 作ったSpriteを登録するScene\n     * @param fromScene Sprite化したいScene\n     * @param camera 使用カメラ\n     */\n    SpriteFactory.createSpriteFromScene = function (toScene, fromScene, camera) {\n        var surface = toScene.game.resourceFactory.createSurface(Math.ceil(fromScene.game.width), Math.ceil(fromScene.game.height));\n        var renderer = surface.renderer();\n        renderer.begin();\n        var children = fromScene.children;\n        for (var i = 0; i < children.length; ++i)\n            children[i].render(renderer, camera);\n        renderer.end();\n        return new Sprite_1.Sprite({\n            scene: toScene,\n            src: surface,\n            width: fromScene.game.width,\n            height: fromScene.game.height\n        });\n    };\n    return SpriteFactory;\n}());\nexports.SpriteFactory = SpriteFactory;\n//# sourceMappingURL=SpriteFactory.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SpriteFactory.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SurfaceAtlas.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SurfaceAtlas.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SurfaceAtlas = void 0;\nvar SurfaceAtlasSlot_1 = __webpack_require__(/*! ./SurfaceAtlasSlot */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSlot.js\");\nfunction getSurfaceAtlasSlot(slot, width, height) {\n    while (slot) {\n        if (slot.width >= width && slot.height >= height) {\n            return slot;\n        }\n        // @ts-ignore\n        slot = slot.next;\n    }\n    return null;\n}\n/**\n * サーフェスアトラス。\n *\n * 与えられたサーフェスの指定された領域をコピーし一枚のサーフェスにまとめる。\n *\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n */\nvar SurfaceAtlas = /** @class */ (function () {\n    function SurfaceAtlas(surface) {\n        this._surface = surface;\n        this._emptySurfaceAtlasSlotHead = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(0, 0, this._surface.width, this._surface.height);\n        this._accessScore = 0;\n        this._usedRectangleAreaSize = { width: 0, height: 0 };\n    }\n    SurfaceAtlas.prototype.reset = function () {\n        var renderer = this._surface.renderer();\n        renderer.begin();\n        renderer.clear();\n        renderer.end();\n        this._emptySurfaceAtlasSlotHead = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(0, 0, this._surface.width, this._surface.height);\n        this._accessScore = 0;\n        this._usedRectangleAreaSize.width = 0;\n        this._usedRectangleAreaSize.height = 0;\n    };\n    /**\n     * @private\n     */\n    SurfaceAtlas.prototype._acquireSurfaceAtlasSlot = function (width, height) {\n        // Renderer#drawImage()でサーフェス上の一部を描画するとき、\n        // 指定した部分に隣接する画素がにじみ出る現象が確認されている。\n        // ここれではそれを避けるため1pixelの余白を与えている。\n        width += 1;\n        height += 1;\n        var slot = getSurfaceAtlasSlot(this._emptySurfaceAtlasSlotHead, width, height);\n        if (!slot) {\n            return null;\n        }\n        var remainWidth = slot.width - width;\n        var remainHeight = slot.height - height;\n        var left;\n        var right;\n        if (remainWidth <= remainHeight) {\n            left = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(slot.x + width, slot.y, remainWidth, height);\n            right = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(slot.x, slot.y + height, slot.width, remainHeight);\n        }\n        else {\n            left = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(slot.x, slot.y + height, width, remainHeight);\n            right = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(slot.x + width, slot.y, remainWidth, slot.height);\n        }\n        left.prev = slot.prev;\n        left.next = right;\n        if (left.prev === null) {\n            // left is head\n            this._emptySurfaceAtlasSlotHead = left;\n        }\n        else {\n            left.prev.next = left;\n        }\n        right.prev = left;\n        right.next = slot.next;\n        if (right.next) {\n            right.next.prev = right;\n        }\n        var acquiredSlot = new SurfaceAtlasSlot_1.SurfaceAtlasSlot(slot.x, slot.y, width, height);\n        this._updateUsedRectangleAreaSize(acquiredSlot);\n        return acquiredSlot;\n    };\n    /**\n     * @private\n     */\n    SurfaceAtlas.prototype._updateUsedRectangleAreaSize = function (slot) {\n        var slotRight = slot.x + slot.width;\n        var slotBottom = slot.y + slot.height;\n        if (slotRight > this._usedRectangleAreaSize.width) {\n            this._usedRectangleAreaSize.width = slotRight;\n        }\n        if (slotBottom > this._usedRectangleAreaSize.height) {\n            this._usedRectangleAreaSize.height = slotBottom;\n        }\n    };\n    /**\n     * サーフェスを追加する。\n     *\n     * @param surface 追加するサーフェス\n     * @param offsetX サーフェス内におけるX方向のオフセット位置。0以上の数値でなければならない\n     * @param offsetY サーフェス内におけるY方向のオフセット位置。0以上の数値でなければならない\n     * @param width サーフェス内における矩形の幅。0より大きい数値でなければならない\n     * @param height サーフェス内における矩形の高さ。0より大きい数値でなければならない\n     */\n    SurfaceAtlas.prototype.addSurface = function (surface, offsetX, offsetY, width, height) {\n        var slot = this._acquireSurfaceAtlasSlot(width, height);\n        if (!slot) {\n            return null;\n        }\n        var renderer = this._surface.renderer();\n        renderer.begin();\n        renderer.drawImage(surface, offsetX, offsetY, width, height, slot.x, slot.y);\n        renderer.end();\n        return slot;\n    };\n    /**\n     * このSurfaceAtlasの破棄を行う。\n     * 以後、このSurfaceを利用することは出来なくなる。\n     */\n    SurfaceAtlas.prototype.destroy = function () {\n        this._surface.destroy();\n    };\n    /**\n     * このSurfaceAtlasが破棄済であるかどうかを判定する。\n     */\n    SurfaceAtlas.prototype.destroyed = function () {\n        return this._surface.destroyed();\n    };\n    /**\n     * このSurfaceAtlasの大きさを取得する。\n     */\n    SurfaceAtlas.prototype.getAtlasUsedSize = function () {\n        return this._usedRectangleAreaSize;\n    };\n    SurfaceAtlas.prototype.getAccessScore = function () {\n        return this._accessScore;\n    };\n    return SurfaceAtlas;\n}());\nexports.SurfaceAtlas = SurfaceAtlas;\n//# sourceMappingURL=SurfaceAtlas.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SurfaceAtlas.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSet.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSet.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SurfaceAtlasSet = void 0;\nvar SurfaceAtlas_1 = __webpack_require__(/*! ./SurfaceAtlas */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlas.js\");\nfunction calcAtlasSize(hint) {\n    // @ts-ignore\n    var width = Math.ceil(Math.min(hint.initialAtlasWidth, hint.maxAtlasWidth));\n    // @ts-ignore\n    var height = Math.ceil(Math.min(hint.initialAtlasHeight, hint.maxAtlasHeight));\n    return { width: width, height: height };\n}\n/**\n * DynamicFont で使用される SurfaceAtlas を管理するクラス。\n *\n * 歴史的経緯のため、名前に反して DynamicFont 専用のクラスであり、汎用の SurfaceAtlas 管理クラスではない点に注意。\n */\nvar SurfaceAtlasSet = /** @class */ (function () {\n    function SurfaceAtlasSet(params) {\n        this._surfaceAtlases = [];\n        this._atlasGlyphsTable = [];\n        this._resourceFactory = params.resourceFactory;\n        this._currentAtlasIndex = 0;\n        var hint = params.hint ? params.hint : {};\n        this._maxAtlasNum = hint.maxAtlasNum ? hint.maxAtlasNum : SurfaceAtlasSet.INITIAL_MAX_SURFACEATLAS_NUM;\n        // 指定がないとき、やや古いモバイルデバイスでも確保できると言われる\n        // 縦横512pxのテクスチャ一枚のアトラスにまとめる形にする\n        // 2048x2048で確保してしまうと、Edge, Chrome にて処理が非常に遅くなることがある\n        hint.initialAtlasWidth = hint.initialAtlasWidth ? hint.initialAtlasWidth : 512;\n        hint.initialAtlasHeight = hint.initialAtlasHeight ? hint.initialAtlasHeight : 512;\n        hint.maxAtlasWidth = hint.maxAtlasWidth ? hint.maxAtlasWidth : 512;\n        hint.maxAtlasHeight = hint.maxAtlasHeight ? hint.maxAtlasHeight : 512;\n        this._atlasSize = calcAtlasSize(hint);\n    }\n    /**\n     * @private\n     */\n    SurfaceAtlasSet.prototype._deleteAtlas = function (delteNum) {\n        for (var i = 0; i < delteNum; ++i) {\n            var atlas = this._spliceLeastFrequentlyUsedAtlas();\n            if (!atlas)\n                return;\n            atlas.destroy();\n        }\n    };\n    /**\n     * surfaceAtlases の最も利用されていない SurfaceAtlas を探し、 そのインデックスを返す。\n     *\n     * _surfaceAtlases の長さが 0 の場合、 -1 を返す。\n     * @private\n     */\n    SurfaceAtlasSet.prototype._findLeastFrequentlyUsedAtlasIndex = function () {\n        var minScore = Number.MAX_VALUE;\n        var lowScoreAtlasIndex = -1;\n        for (var i = 0; i < this._surfaceAtlases.length; ++i) {\n            if (this._surfaceAtlases[i]._accessScore <= minScore) {\n                minScore = this._surfaceAtlases[i]._accessScore;\n                lowScoreAtlasIndex = i;\n            }\n        }\n        return lowScoreAtlasIndex;\n    };\n    /**\n     * surfaceAtlases の最も利用されていない SurfaceAtlas を切り離して返す。\n     *\n     * 返された SurfaceAtlas に紐づいていたすべての Glyph はサーフェスを失う (_isSurfaceValid が偽になる) 。\n     * _surfaceAtlases の長さが 0 の場合、 何もせず null を返す。\n     * @private\n     */\n    SurfaceAtlasSet.prototype._spliceLeastFrequentlyUsedAtlas = function () {\n        var idx = this._findLeastFrequentlyUsedAtlasIndex();\n        if (idx === -1)\n            return null;\n        if (this._currentAtlasIndex >= idx)\n            --this._currentAtlasIndex;\n        var spliced = this._surfaceAtlases.splice(idx, 1)[0];\n        var glyphs = this._atlasGlyphsTable.splice(idx, 1)[0];\n        for (var i = 0; i < glyphs.length; i++) {\n            var glyph = glyphs[i];\n            glyph.surface = undefined;\n            glyph.isSurfaceValid = false;\n            glyph._atlas = null;\n        }\n        return spliced;\n    };\n    /**\n     * 空き領域のある SurfaceAtlas を探索する。\n     * glyph が持つ情報を SurfaceAtlas へ移動し、移動した SurfaceAtlas の情報で glyph を置き換える。\n     * glyph が持っていた surface は破棄される。\n     *\n     * 移動に成功した場合 `true` を、失敗した (空き領域が見つからなかった) 場合 `false` を返す。\n     * @private\n     */\n    SurfaceAtlasSet.prototype._moveGlyphSurface = function (glyph) {\n        for (var i = 0; i < this._surfaceAtlases.length; ++i) {\n            var index = (this._currentAtlasIndex + i) % this._surfaceAtlases.length;\n            var atlas = this._surfaceAtlases[index];\n            var slot = atlas.addSurface(glyph.surface, glyph.x, glyph.y, glyph.width, glyph.height);\n            if (slot) {\n                this._currentAtlasIndex = index;\n                if (glyph.surface)\n                    glyph.surface.destroy();\n                glyph.surface = atlas._surface;\n                glyph.x = slot.x;\n                glyph.y = slot.y;\n                glyph._atlas = atlas;\n                this._atlasGlyphsTable[index].push(glyph);\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * サーフェスアトラスの再割り当てを行う。\n     * @private\n     */\n    SurfaceAtlasSet.prototype._reallocateAtlas = function () {\n        var atlas = null;\n        if (this._surfaceAtlases.length >= this._maxAtlasNum) {\n            atlas = this._spliceLeastFrequentlyUsedAtlas();\n            atlas.reset();\n        }\n        else {\n            atlas = new SurfaceAtlas_1.SurfaceAtlas(this._resourceFactory.createSurface(this._atlasSize.width, this._atlasSize.height));\n        }\n        this._surfaceAtlases.push(atlas);\n        this._atlasGlyphsTable.push([]);\n        this._currentAtlasIndex = this._surfaceAtlases.length - 1;\n    };\n    /**\n     * 引数で指定されたindexのサーフェスアトラスを取得する。\n     *\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     * @param index 取得対象のインデックス\n     */\n    SurfaceAtlasSet.prototype.getAtlas = function (index) {\n        return this._surfaceAtlases[index];\n    };\n    /**\n     * サーフェスアトラスの保持数を取得する。\n     *\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     */\n    SurfaceAtlasSet.prototype.getAtlasNum = function () {\n        return this._surfaceAtlases.length;\n    };\n    /**\n     * 最大サーフェスアトラス保持数取得する。\n     */\n    SurfaceAtlasSet.prototype.getMaxAtlasNum = function () {\n        return this._maxAtlasNum;\n    };\n    /**\n     * 最大アトラス保持数設定する。\n     *\n     * 設定された値が、現在保持している_surfaceAtlasesの数より大きい場合、\n     * removeLeastFrequentlyUsedAtlas()で設定値まで削除する。\n     * @param value 設定値\n     */\n    SurfaceAtlasSet.prototype.changeMaxAtlasNum = function (value) {\n        this._maxAtlasNum = value;\n        if (this._surfaceAtlases.length > this._maxAtlasNum) {\n            var diff = this._surfaceAtlases.length - this._maxAtlasNum;\n            this._deleteAtlas(diff);\n        }\n    };\n    /**\n     * サーフェスアトラスのサイズを取得する。\n     *\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     */\n    SurfaceAtlasSet.prototype.getAtlasUsedSize = function () {\n        return this._atlasSize;\n    };\n    /**\n     * グリフを追加する。\n     *\n     * glyph が持っていたサーフェスは破棄され、このクラスが管理するいずれかの (サーフェスアトラスの) サーフェスに紐づけられる。\n     * 追加に成功した場合 `true` を、失敗した (空き領域が見つからなかった) 場合 `false` を返す。\n     *\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     * @param glyph グリフ\n     */\n    SurfaceAtlasSet.prototype.addGlyph = function (glyph) {\n        // グリフがアトラスより大きいとき、`_atlasSet.addGlyph()`は失敗する。\n        // `_reallocateAtlas()`でアトラス増やしてもこれは解決できない。\n        // 無駄な空き領域探索とアトラスの再確保を避けるためにここでリターンする。\n        if (glyph.width > this._atlasSize.width || glyph.height > this._atlasSize.height) {\n            return false;\n        }\n        if (this._moveGlyphSurface(glyph))\n            return true;\n        // retry\n        this._reallocateAtlas();\n        return this._moveGlyphSurface(glyph);\n    };\n    /**\n     * グリフの利用を通知する。\n     *\n     * サーフェスが不足した時、このクラスは最も利用頻度の低いサーフェスを解放して再利用する。\n     * このメソッドによるグリフの利用通知は、利用頻度の低いサーフェスを特定するために利用される。\n     *\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     * @param glyph グリフ\n     */\n    SurfaceAtlasSet.prototype.touchGlyph = function (glyph) {\n        // スコア更新\n        // NOTE: LRUを捨てる方式なら単純なタイムスタンプのほうがわかりやすいかもしれない\n        // NOTE: 正確な時刻は必要ないはずで、インクリメンタルなカウンタで代用すればDate()生成コストは省略できる\n        if (glyph._atlas)\n            glyph._atlas._accessScore += 1;\n        for (var i = 0; i < this._surfaceAtlases.length; i++) {\n            var atlas = this._surfaceAtlases[i];\n            atlas._accessScore /= 2;\n        }\n    };\n    /**\n     * このインスタンスを破棄する。\n     */\n    SurfaceAtlasSet.prototype.destroy = function () {\n        for (var i = 0; i < this._surfaceAtlases.length; ++i) {\n            this._surfaceAtlases[i].destroy();\n        }\n        this._surfaceAtlases = undefined;\n        this._resourceFactory = undefined;\n        this._atlasGlyphsTable = undefined;\n    };\n    /**\n     * このインスタンスが破棄済みであるかどうかを返す。\n     */\n    SurfaceAtlasSet.prototype.destroyed = function () {\n        return this._surfaceAtlases === undefined;\n    };\n    /**\n     * SurfaceAtlas最大保持数初期値\n     */\n    SurfaceAtlasSet.INITIAL_MAX_SURFACEATLAS_NUM = 10;\n    return SurfaceAtlasSet;\n}());\nexports.SurfaceAtlasSet = SurfaceAtlasSet;\n//# sourceMappingURL=SurfaceAtlasSet.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSet.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSlot.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSlot.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SurfaceAtlasSlot = void 0;\n/**\n * SurfaceAtlasの空き領域管理クラス。\n *\n * 本クラスのインスタンスをゲーム開発者が直接生成することはなく、ゲーム開発者が利用する必要もない。\n */\nvar SurfaceAtlasSlot = /** @class */ (function () {\n    function SurfaceAtlasSlot(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.prev = null;\n        this.next = null;\n    }\n    return SurfaceAtlasSlot;\n}());\nexports.SurfaceAtlasSlot = SurfaceAtlasSlot;\n//# sourceMappingURL=SurfaceAtlasSlot.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSlot.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SurfaceEffector.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SurfaceEffector.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=SurfaceEffector.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SurfaceEffector.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SurfaceUtil = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\n/**\n * Surface に関連するユーティリティ。\n */\nvar SurfaceUtil;\n(function (SurfaceUtil) {\n    /**\n     * 引数 `src` が `undefined` または `Surface` でそのまま返す。\n     * そうでなくかつ `ImageAsset` であれば `Surface` に変換して返す。\n     *\n     * @param src\n     */\n    function asSurface(src) {\n        if (!src) {\n            return undefined;\n        }\n        else if (\"type\" in src && src.type === \"image\") {\n            return src.asSurface();\n        }\n        else if (\"_drawable\" in src) {\n            return src;\n        }\n        throw ExceptionFactory_1.ExceptionFactory.createTypeMismatchError(\"SurfaceUtil#asSurface\", \"ImageAsset|Surface\", src);\n    }\n    SurfaceUtil.asSurface = asSurface;\n    /**\n     * サーフェスのアニメーティングイベントへのハンドラ登録。\n     *\n     * これはエンジンが利用するものであり、ゲーム開発者が呼び出す必要はない。\n     *\n     * @param animatingHandler アニメーティングハンドラ\n     * @param surface サーフェス\n     */\n    function setupAnimatingHandler(animatingHandler, surface) {\n        if (surface.isPlaying()) {\n            animatingHandler._handleAnimationStart();\n        }\n    }\n    SurfaceUtil.setupAnimatingHandler = setupAnimatingHandler;\n    /**\n     * アニメーティングハンドラを別のサーフェスへ移動する。\n     *\n     * これはエンジンが利用するものであり、ゲーム開発者が呼び出す必要はない。\n     *\n     * @param animatingHandler アニメーティングハンドラ\n     * @param _beforeSurface ハンドラ登録を解除するサーフェス\n     * @param afterSurface ハンドラを登録するサーフェス\n     */\n    function migrateAnimatingHandler(animatingHandler, _beforeSurface, afterSurface) {\n        animatingHandler._handleAnimationStop();\n        if (afterSurface.isPlaying()) {\n            animatingHandler._handleAnimationStart();\n        }\n    }\n    SurfaceUtil.migrateAnimatingHandler = migrateAnimatingHandler;\n    /**\n     * 対象の `Surface` にナインパッチ処理された `Surface` を描画する。\n     *\n     * これは、画像素材の拡大・縮小において「枠」の表現を実現するものである。\n     * 画像の上下左右の「枠」部分の幅・高さを渡すことで、上下の「枠」を縦に引き延ばすことなく、\n     * また左右の「枠」を横に引き延ばすことなく画像を任意サイズに拡大・縮小できる。\n     * ゲームにおけるメッセージウィンドウやダイアログの表現に利用することを想定している。\n     *\n     * @param destSurface 描画先 `Surface`\n     * @param srcSurface 描画元 `Surface`\n     * @param borderWidth 上下左右の「拡大しない」領域の大きさ。すべて同じ値なら数値一つを渡すことができる。省略された場合、 `4`\n     */\n    function drawNinePatch(destSurface, srcSurface, borderWidth) {\n        if (borderWidth === void 0) { borderWidth = 4; }\n        var renderer = destSurface.renderer();\n        renderer.begin();\n        renderer.clear();\n        renderNinePatch(renderer, destSurface.width, destSurface.height, srcSurface, borderWidth);\n        renderer.end();\n    }\n    SurfaceUtil.drawNinePatch = drawNinePatch;\n    /**\n     * 対象の `Renderer` にナインパッチ処理された `Surface` を描画する。\n     *\n     * 開発者は以下のような状況でこの関数を利用すべきである。\n     * * E を継承した独自の Entity を renderSelf() メソッドで描画する場合。この場合描画先の Surface が不明なので drawNinePatch() よりもこの関数の方が適している。\n     * * Surface全体ではなく部分的に描画したい場合。drawNinePatch() では Surface 全体の描画にしか対応していないため。\n     *\n     * @param renderer 描画先 `Renderer`\n     * @param width 描画先の横幅\n     * @param height 描画先の縦幅\n     * @param surface 描画元 `Surface`\n     * @param borderWidth 上下左右の「拡大しない」領域の大きさ。すべて同じ値なら数値一つを渡すことができる。省略された場合、 `4`\n     */\n    function renderNinePatch(renderer, width, height, surface, borderWidth) {\n        if (borderWidth === void 0) { borderWidth = 4; }\n        var border;\n        if (typeof borderWidth === \"number\") {\n            border = {\n                top: borderWidth,\n                bottom: borderWidth,\n                left: borderWidth,\n                right: borderWidth\n            };\n        }\n        else {\n            border = borderWidth;\n        }\n        //    x0  x1                          x2\n        // y0 +-----------------------------------+\n        //    | 1 |             5             | 2 |\n        // y1 |---+---------------------------+---|\n        //    |   |                           |   |\n        //    | 7 |             9             | 8 |\n        //    |   |                           |   |\n        // y2 |---+---------------------------+---|\n        //    | 3 |             6             | 4 |\n        //    +-----------------------------------+\n        //\n        // 1-4: 拡縮無し\n        // 5-6: 水平方向へ拡縮\n        // 7-8: 垂直方向へ拡縮\n        // 9  : 全方向へ拡縮\n        var sx1 = border.left;\n        var sx2 = surface.width - border.right;\n        var sy1 = border.top;\n        var sy2 = surface.height - border.bottom;\n        var dx1 = border.left;\n        var dx2 = width - border.right;\n        var dy1 = border.top;\n        var dy2 = height - border.bottom;\n        // Draw corners\n        var srcCorners = [\n            {\n                x: 0,\n                y: 0,\n                width: border.left,\n                height: border.top\n            },\n            {\n                x: sx2,\n                y: 0,\n                width: border.right,\n                height: border.top\n            },\n            {\n                x: 0,\n                y: sy2,\n                width: border.left,\n                height: border.bottom\n            },\n            {\n                x: sx2,\n                y: sy2,\n                width: border.right,\n                height: border.bottom\n            }\n        ];\n        var destCorners = [\n            { x: 0, y: 0 },\n            { x: dx2, y: 0 },\n            { x: 0, y: dy2 },\n            { x: dx2, y: dy2 }\n        ];\n        for (var i = 0; i < srcCorners.length; ++i) {\n            var c = srcCorners[i];\n            renderer.save();\n            renderer.translate(destCorners[i].x, destCorners[i].y);\n            renderer.drawImage(surface, c.x, c.y, c.width, c.height, 0, 0);\n            renderer.restore();\n        }\n        // Draw borders\n        var srcBorders = [\n            { x: sx1, y: 0, width: sx2 - sx1, height: border.top },\n            { x: 0, y: sy1, width: border.left, height: sy2 - sy1 },\n            { x: sx2, y: sy1, width: border.right, height: sy2 - sy1 },\n            { x: sx1, y: sy2, width: sx2 - sx1, height: border.bottom }\n        ];\n        var destBorders = [\n            { x: dx1, y: 0, width: dx2 - dx1, height: border.top },\n            { x: 0, y: dy1, width: border.left, height: dy2 - dy1 },\n            { x: dx2, y: dy1, width: border.right, height: dy2 - dy1 },\n            { x: dx1, y: dy2, width: dx2 - dx1, height: border.bottom }\n        ];\n        for (var i = 0; i < srcBorders.length; ++i) {\n            var s = srcBorders[i];\n            var d = destBorders[i];\n            renderer.save();\n            renderer.translate(d.x, d.y);\n            renderer.transform([d.width / s.width, 0, 0, d.height / s.height, 0, 0]);\n            renderer.drawImage(surface, s.x, s.y, s.width, s.height, 0, 0);\n            renderer.restore();\n        }\n        // Draw center\n        var sw = sx2 - sx1;\n        var sh = sy2 - sy1;\n        var dw = dx2 - dx1;\n        var dh = dy2 - dy1;\n        renderer.save();\n        renderer.translate(dx1, dy1);\n        renderer.transform([dw / sw, 0, 0, dh / sh, 0, 0]);\n        renderer.drawImage(surface, sx1, sy1, sw, sh, 0, 0);\n        renderer.restore();\n    }\n    SurfaceUtil.renderNinePatch = renderNinePatch;\n})(SurfaceUtil || (exports.SurfaceUtil = SurfaceUtil = {}));\n//# sourceMappingURL=SurfaceUtil.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/TextAlign.js":
/*!***************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/TextAlign.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextAlign = void 0;\n/**\n * テキストの描画位置。\n * @deprecated 非推奨である。将来的に削除される。代わりに `TextAlignString` を利用すること。\n */\nvar TextAlign;\n(function (TextAlign) {\n    /**\n     * 左寄せ。\n     */\n    TextAlign[TextAlign[\"Left\"] = 0] = \"Left\";\n    /**\n     * 中央寄せ。\n     */\n    TextAlign[TextAlign[\"Center\"] = 1] = \"Center\";\n    /**\n     * 右寄せ。\n     */\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n})(TextAlign || (exports.TextAlign = TextAlign = {}));\n//# sourceMappingURL=TextAlign.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/TextAlign.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/TextAlignString.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/TextAlignString.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=TextAlignString.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/TextAlignString.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/TextMetrics.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/TextMetrics.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=TextMetrics.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/TextMetrics.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/TickGenerationModeString.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/TickGenerationModeString.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=TickGenerationModeString.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/TickGenerationModeString.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Timer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Timer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Timer = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\n/**\n * 一定時間で繰り返される処理を表すタイマー。\n *\n * ゲーム開発者が本クラスのインスタンスを直接生成することはなく、\n * 通常はScene#setTimeout、Scene#setIntervalによって間接的に利用する。\n */\nvar Timer = /** @class */ (function () {\n    function Timer(interval, fps) {\n        this.interval = interval;\n        // NOTE: intervalが浮動小数の場合があるため念のため四捨五入する\n        this._scaledInterval = Math.round(interval * fps);\n        this.onElapse = new trigger_1.Trigger();\n        this.elapsed = this.onElapse;\n        this._scaledElapsed = 0;\n    }\n    Timer.prototype.tick = function () {\n        // NOTE: 1000 / fps * fps = 1000\n        this._scaledElapsed += 1000;\n        while (this._scaledElapsed >= this._scaledInterval) {\n            // NOTE: this.elapsed.fire()内でdestroy()される可能性があるため、destroyed()を判定する\n            if (!this.onElapse) {\n                break;\n            }\n            this.onElapse.fire();\n            this._scaledElapsed -= this._scaledInterval;\n        }\n    };\n    Timer.prototype.canDelete = function () {\n        return !this.onElapse || this.onElapse.length === 0;\n    };\n    Timer.prototype.destroy = function () {\n        this.interval = undefined;\n        this.onElapse.destroy();\n        this.onElapse = undefined;\n        this.elapsed = undefined;\n        this._scaledInterval = 0;\n        this._scaledElapsed = 0;\n    };\n    Timer.prototype.destroyed = function () {\n        return this.onElapse === undefined;\n    };\n    return Timer;\n}());\nexports.Timer = Timer;\n//# sourceMappingURL=Timer.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Timer.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/TimerManager.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/TimerManager.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimerManager = exports.TimerIdentifier = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar Timer_1 = __webpack_require__(/*! ./Timer */ \"./node_modules/@akashic/akashic-engine/lib/Timer.js\");\n/**\n * `Scene#setTimeout` や `Scene#setInterval` の実行単位を表す。\n * ゲーム開発者が本クラスのインスタンスを直接生成することはなく、\n * 本クラスの機能を直接利用することはない。\n */\nvar TimerIdentifier = /** @class */ (function () {\n    function TimerIdentifier(timer, handler, handlerOwner, fired, firedOwner) {\n        this._timer = timer;\n        this._handler = handler;\n        this._handlerOwner = handlerOwner;\n        this._fired = fired;\n        this._firedOwner = firedOwner;\n        this._timer.onElapse.add(this._handleElapse, this);\n    }\n    TimerIdentifier.prototype.destroy = function () {\n        this._timer.onElapse.remove(this._handleElapse, this);\n        this._timer = undefined;\n        this._handler = undefined;\n        this._handlerOwner = undefined;\n        this._fired = undefined;\n        this._firedOwner = undefined;\n    };\n    TimerIdentifier.prototype.destroyed = function () {\n        return this._timer === undefined;\n    };\n    /**\n     * @private\n     */\n    TimerIdentifier.prototype._handleElapse = function () {\n        if (this.destroyed())\n            return;\n        this._handler.call(this._handlerOwner);\n        if (this._fired) {\n            this._fired.call(this._firedOwner, this);\n        }\n    };\n    return TimerIdentifier;\n}());\nexports.TimerIdentifier = TimerIdentifier;\n/**\n * Timerを管理する機構を提供する。\n * ゲーム開発者が本クラスを利用する事はない。\n */\nvar TimerManager = /** @class */ (function () {\n    function TimerManager(trigger, fps) {\n        this._timers = [];\n        this._trigger = trigger;\n        this._identifiers = [];\n        this._fps = fps;\n        this._registered = false;\n    }\n    TimerManager.prototype.destroy = function () {\n        for (var i = 0; i < this._identifiers.length; ++i) {\n            this._identifiers[i].destroy();\n        }\n        for (var i = 0; i < this._timers.length; ++i) {\n            this._timers[i].destroy();\n        }\n        this._timers = undefined;\n        this._trigger = undefined;\n        this._identifiers = undefined;\n        this._fps = undefined;\n    };\n    TimerManager.prototype.destroyed = function () {\n        return this._timers === undefined;\n    };\n    /**\n     * 定期間隔で処理を実行するTimerを作成する。\n     * 本Timerはフレーム経過によって動作する疑似タイマーであるため、実時間の影響は受けない\n     * @param interval Timerの実行間隔（ミリ秒）\n     * @returns 作成したTimer\n     */\n    TimerManager.prototype.createTimer = function (interval) {\n        if (!this._registered) {\n            this._trigger.add(this._tick, this);\n            this._registered = true;\n        }\n        if (interval < 0)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"TimerManager#createTimer: invalid interval\");\n        // NODE: intervalが0の場合に、Timer#tick()で無限ループとなるためintervalの最小値を1とする。\n        if (interval < 1)\n            interval = 1;\n        // NOTE: Timerの_scaledElapsedと比較するため、this.fps倍した値を用いる\n        // Math.min(1000 / this._fps * this.fps, interval * this._fps);\n        var acceptableMargin = Math.min(1000, interval * this._fps);\n        for (var i = 0; i < this._timers.length; ++i) {\n            if (this._timers[i].interval === interval) {\n                if (this._timers[i]._scaledElapsed < acceptableMargin) {\n                    return this._timers[i];\n                }\n            }\n        }\n        var timer = new Timer_1.Timer(interval, this._fps);\n        this._timers.push(timer);\n        return timer;\n    };\n    /**\n     * Timerを削除する。\n     * @param timer 削除するTimer\n     */\n    TimerManager.prototype.deleteTimer = function (timer) {\n        if (!timer.canDelete())\n            return;\n        var index = this._timers.indexOf(timer);\n        if (index < 0)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"TimerManager#deleteTimer: can not find timer\");\n        this._timers.splice(index, 1);\n        timer.destroy();\n        if (!this._timers.length) {\n            if (!this._registered)\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"TimerManager#deleteTimer: handler is not handled\");\n            this._trigger.remove(this._tick, this);\n            this._registered = false;\n        }\n    };\n    TimerManager.prototype.setTimeout = function (handler, milliseconds, owner) {\n        var timer = this.createTimer(milliseconds);\n        var identifier = new TimerIdentifier(timer, handler, owner, this._onTimeoutFired, this);\n        this._identifiers.push(identifier);\n        return identifier;\n    };\n    TimerManager.prototype.clearTimeout = function (identifier) {\n        this._clear(identifier);\n    };\n    TimerManager.prototype.setInterval = function (handler, interval, owner) {\n        var timer = this.createTimer(interval);\n        var identifier = new TimerIdentifier(timer, handler, owner);\n        this._identifiers.push(identifier);\n        return identifier;\n    };\n    TimerManager.prototype.clearInterval = function (identifier) {\n        this._clear(identifier);\n    };\n    /**\n     * すべてのTimerを時間経過させる。\n     * @private\n     */\n    TimerManager.prototype._tick = function () {\n        var timers = this._timers.concat();\n        for (var i = 0; i < timers.length; ++i)\n            timers[i].tick();\n    };\n    /**\n     * @private\n     */\n    TimerManager.prototype._onTimeoutFired = function (identifier) {\n        var index = this._identifiers.indexOf(identifier);\n        if (index < 0)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"TimerManager#_onTimeoutFired: can not find identifier\");\n        this._identifiers.splice(index, 1);\n        var timer = identifier._timer;\n        identifier.destroy();\n        this.deleteTimer(timer);\n    };\n    /**\n     * @private\n     */\n    TimerManager.prototype._clear = function (identifier) {\n        var index = this._identifiers.indexOf(identifier);\n        if (index < 0)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"TimerManager#_clear: can not find identifier\");\n        if (identifier.destroyed())\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"TimerManager#_clear: invalid identifier\");\n        this._identifiers.splice(index, 1);\n        var timer = identifier._timer;\n        identifier.destroy();\n        this.deleteTimer(timer);\n    };\n    return TimerManager;\n}());\nexports.TimerManager = TimerManager;\n//# sourceMappingURL=TimerManager.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/TimerManager.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Util.js":
/*!**********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Util.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Util = void 0;\nvar pdi_types_1 = __webpack_require__(/*! @akashic/pdi-types */ \"./node_modules/@akashic/pdi-types/lib/index.js\");\n/**\n * ユーティリティ。\n */\nvar Util;\n(function (Util) {\n    var _a;\n    /**\n     * 2点間(P1..P2)の距離(pixel)を返す。\n     * @param {number} p1x P1-X\n     * @param {number} p1y P1-Y\n     * @param {number} p2x P2-X\n     * @param {number} p2y P2-Y\n     */\n    function distance(p1x, p1y, p2x, p2y) {\n        return Math.sqrt(Math.pow(p1x - p2x, 2) + Math.pow(p1y - p2y, 2));\n    }\n    Util.distance = distance;\n    /**\n     * 2点間(P1..P2)の距離(pixel)を返す。\n     * @param {CommonOffset} p1 座標1\n     * @param {CommonOffset} p2 座標2\n     */\n    function distanceBetweenOffsets(p1, p2) {\n        return Util.distance(p1.x, p1.y, p2.x, p2.y);\n    }\n    Util.distanceBetweenOffsets = distanceBetweenOffsets;\n    /**\n     * 2つの矩形の中心座標(P1..P2)間の距離(pixel)を返す。\n     * @param {CommonArea} p1 矩形1\n     * @param {CommonArea} p2 矩形2\n     */\n    function distanceBetweenAreas(p1, p2) {\n        return Util.distance(p1.x + p1.width / 2, p1.y + p1.height / 2, p2.x + p2.width / 2, p2.y + p2.height / 2);\n    }\n    Util.distanceBetweenAreas = distanceBetweenAreas;\n    /**\n     * idx文字目の文字のchar codeを返す。\n     *\n     * これはString#charCodeAt()と次の点で異なる。\n     * - idx文字目が上位サロゲートの時これを16bit左シフトし、idx+1文字目の下位サロゲートと論理和をとった値を返す。\n     * - idx文字目が下位サロゲートの時nullを返す。\n     *\n     * @param str 文字を取り出される文字列\n     * @param idx 取り出される文字の位置\n     */\n    // highly based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    function charCodeAt(str, idx) {\n        var code = str.charCodeAt(idx);\n        if (0xd800 <= code && code <= 0xdbff) {\n            var hi = code;\n            var low = str.charCodeAt(idx + 1);\n            return (hi << 16) | low;\n        }\n        if (0xdc00 <= code && code <= 0xdfff) {\n            // Low surrogate\n            return null;\n        }\n        return code;\n    }\n    Util.charCodeAt = charCodeAt;\n    /**\n     * enum の値の文字列を snake-case に変換した文字列を返す。\n     * @deprecated 非推奨である。非推奨の機能との互換性確保のために存在する。ゲーム開発者が使用すべきではない。\n     */\n    function enumToSnakeCase(enumDef, val) {\n        var s = enumDef[val];\n        // 呼び出し元で型が正しいことの保証が必要\n        return (s[0].toLowerCase() + s.slice(1).replace(/[A-Z]/g, function (c) { return \"-\" + c.toLowerCase(); }));\n    }\n    Util.enumToSnakeCase = enumToSnakeCase;\n    /**\n     * 数値を範囲内［min, max］に丸める\n     * @param num 丸める値\n     * @param min 値の下限\n     * @param max 値の上限\n     */\n    function clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    Util.clamp = clamp;\n    /**\n     * CompositeOperation を CompositeOperationString に読み替えるテーブル。\n     * @deprecated 非推奨である。非推奨の機能との互換性のために存在する。ゲーム開発者が使用すべきではない。\n     */\n    // enumToSnakeCase() で代用できるが、 CompositeOperation の変換は複数回実行されうるので専用のテーブルを作っている。\n    Util.compositeOperationStringTable = (_a = {},\n        _a[pdi_types_1.CompositeOperation.SourceOver] = \"source-over\",\n        _a[pdi_types_1.CompositeOperation.SourceAtop] = \"source-atop\",\n        _a[pdi_types_1.CompositeOperation.Lighter] = \"lighter\",\n        _a[pdi_types_1.CompositeOperation.Copy] = \"copy\",\n        _a[pdi_types_1.CompositeOperation.ExperimentalSourceIn] = \"experimental-source-in\",\n        _a[pdi_types_1.CompositeOperation.ExperimentalSourceOut] = \"experimental-source-out\",\n        _a[pdi_types_1.CompositeOperation.ExperimentalDestinationAtop] = \"experimental-destination-atop\",\n        _a[pdi_types_1.CompositeOperation.ExperimentalDestinationIn] = \"experimental-destination-in\",\n        _a[pdi_types_1.CompositeOperation.DestinationOut] = \"destination-out\",\n        _a[pdi_types_1.CompositeOperation.DestinationOver] = \"destination-over\",\n        _a[pdi_types_1.CompositeOperation.Xor] = \"xor\",\n        _a[pdi_types_1.CompositeOperation.Difference] = \"difference\",\n        _a[pdi_types_1.CompositeOperation.Saturation] = \"saturation\",\n        _a);\n})(Util || (exports.Util = Util = {}));\n//# sourceMappingURL=Util.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Util.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/VideoSystem.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/VideoSystem.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VideoSystem = void 0;\n/**\n * 将来 VideoPlayerインスタンスの一元管理（ボリューム設定などAudioSystemと似た役割）\n * を担うインターフェース。VideoAssetはVideoSystemを持つという体裁を整えるために(中身が空であるが)\n * 定義されている。\n * TODO: 実装\n */\nvar VideoSystem = /** @class */ (function () {\n    function VideoSystem() {\n    }\n    return VideoSystem;\n}());\nexports.VideoSystem = VideoSystem;\n//# sourceMappingURL=VideoSystem.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/VideoSystem.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/WeakRefKVS.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/WeakRefKVS.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WeakRefKVS = void 0;\n/**\n * @private\n */\nvar PseudoWeakRef = /** @class */ (function () {\n    function PseudoWeakRef(target) {\n        this._target = target;\n    }\n    PseudoWeakRef.prototype.deref = function () {\n        return this._target;\n    };\n    return PseudoWeakRef;\n}());\n/**\n * 対象の値を弱参照として保持する Key-Value 型データストア。\n * 通常、ゲーム開発者はこのクラスを利用する必要はない。\n */\nvar WeakRefKVS = /** @class */ (function () {\n    function WeakRefKVS() {\n        /**\n         * @ignore\n         */\n        this._weakRefClass = typeof WeakRef !== \"undefined\" ? WeakRef : PseudoWeakRef;\n        /**\n         * @ignore\n         */\n        this._refMap = Object.create(null);\n    }\n    WeakRefKVS.prototype.set = function (key, value) {\n        if (this._refMap[key]) {\n            this.delete(key);\n        }\n        this._refMap[key] = new this._weakRefClass(value);\n    };\n    WeakRefKVS.prototype.get = function (key) {\n        var ref = this._refMap[key];\n        if (!ref) {\n            return undefined;\n        }\n        return ref.deref();\n    };\n    WeakRefKVS.prototype.has = function (key) {\n        return key in this._refMap;\n    };\n    WeakRefKVS.prototype.delete = function (key) {\n        delete this._refMap[key];\n    };\n    WeakRefKVS.prototype.keys = function () {\n        return Object.keys(this._refMap);\n    };\n    WeakRefKVS.prototype.clear = function () {\n        this._refMap = Object.create(null);\n    };\n    /**\n     * 参照されなくなった target のキーをマップから削除する。\n     */\n    WeakRefKVS.prototype.clean = function () {\n        for (var _i = 0, _a = Object.entries(this._refMap); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], ref = _b[1];\n            if (ref.deref() === undefined)\n                this.delete(key);\n        }\n    };\n    return WeakRefKVS;\n}());\nexports.WeakRefKVS = WeakRefKVS;\n//# sourceMappingURL=WeakRefKVS.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/WeakRefKVS.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/Xorshift.js":
/*!**************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/Xorshift.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Copyright (c) 2014 Andreas Madsen & Emil Bay\n// From https://github.com/AndreasMadsen/xorshift\n// https://github.com/AndreasMadsen/xorshift/blob/master/LICENSE.md\n// Arranged by DWANGO Co., Ltd.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Xorshift = void 0;\nvar Xorshift = /** @class */ (function () {\n    function Xorshift(seed) {\n        var seeds = Array.isArray(seed) ? seed : this.generateSeeds(seed);\n        this._state0U = seeds[0] | 0;\n        this._state0L = seeds[1] | 0;\n        this._state1U = seeds[2] | 0;\n        this._state1L = seeds[3] | 0;\n    }\n    Xorshift.deserialize = function (ser) {\n        var ret = new Xorshift([ser._state0U, ser._state0L, ser._state1U, ser._state1L]);\n        return ret;\n    };\n    Xorshift.prototype.initState = function (seed) {\n        var seeds = this.generateSeeds(seed);\n        this._state0L = seeds[0] | 0;\n        this._state0U = seeds[1] | 0;\n        this._state1L = seeds[2] | 0;\n        this._state1U = seeds[3] | 0;\n    };\n    Xorshift.prototype.randomInt = function () {\n        var s1U = this._state0U;\n        var s1L = this._state0L;\n        var s0U = this._state1U;\n        var s0L = this._state1L;\n        var sumL = (s0L >>> 0) + (s1L >>> 0);\n        var resU = (s0U + s1U + ((sumL / 2) >>> 31)) >>> 0;\n        var resL = sumL >>> 0;\n        this._state0U = s0U;\n        this._state0L = s0L;\n        var t1U = 0;\n        var t1L = 0;\n        var t2U = 0;\n        var t2L = 0;\n        var a1 = 23;\n        var m1 = 0xffffffff << (32 - a1);\n        t1U = (s1U << a1) | ((s1L & m1) >>> (32 - a1));\n        t1L = s1L << a1;\n        s1U = s1U ^ t1U;\n        s1L = s1L ^ t1L;\n        t1U = s1U ^ s0U;\n        t1L = s1L ^ s0L;\n        var a2 = 18;\n        var m2 = 0xffffffff >>> (32 - a2);\n        t2U = s1U >>> a2;\n        t2L = (s1L >>> a2) | ((s1U & m2) << (32 - a2));\n        t1U = t1U ^ t2U;\n        t1L = t1L ^ t2L;\n        var a3 = 5;\n        var m3 = 0xffffffff >>> (32 - a3);\n        t2U = s0U >>> a3;\n        t2L = (s0L >>> a3) | ((s0U & m3) << (32 - a3));\n        t1U = t1U ^ t2U;\n        t1L = t1L ^ t2L;\n        this._state1U = t1U;\n        this._state1L = t1L;\n        return [resU, resL];\n    };\n    Xorshift.prototype.random = function () {\n        var t2 = this.randomInt();\n        // Math.pow(2, -32) = 2.3283064365386963e-10\n        // Math.pow(2, -52) = 2.220446049250313e-16\n        return t2[0] * 2.3283064365386963e-10 + (t2[1] >>> 12) * 2.220446049250313e-16;\n    };\n    Xorshift.prototype.nextInt = function (min, sup) {\n        return Math.floor(min + this.random() * (sup - min));\n    };\n    Xorshift.prototype.serialize = function () {\n        return {\n            _state0U: this._state0U,\n            _state0L: this._state0L,\n            _state1U: this._state1U,\n            _state1L: this._state1L\n        };\n    };\n    // シード値が1つの場合にどのようにして初期状態を定義するかは特に定まっていない\n    // このコードはロジック的な裏付けは無いが採用例が多いために採用した\n    // 以下採用例\n    // http://meme.biology.tohoku.ac.jp/klabo-wiki/index.php?cmd=read&page=%B7%D7%BB%BB%B5%A1%2FC%2B%2B#y919a7e1\n    // http://hexadrive.sblo.jp/article/63660775.html\n    // http://meme.biology.tohoku.ac.jp/students/iwasaki/cxx/random.html#xorshift\n    Xorshift.prototype.generateSeeds = function (seed) {\n        var factor = 1812433253;\n        seed = factor * (seed ^ (seed >> 30)) + 1;\n        var seed1 = seed;\n        seed = factor * (seed ^ (seed >> 30)) + 2;\n        var seed2 = seed;\n        seed = factor * (seed ^ (seed >> 30)) + 3;\n        var seed3 = seed;\n        seed = factor * (seed ^ (seed >> 30)) + 4;\n        var seed4 = seed;\n        return [seed1, seed2, seed3, seed4];\n    };\n    return Xorshift;\n}());\nexports.Xorshift = Xorshift;\n//# sourceMappingURL=Xorshift.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/Xorshift.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/XorshiftRandomGenerator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/XorshiftRandomGenerator.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XorshiftRandomGenerator = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar RandomGenerator_1 = __webpack_require__(/*! ./RandomGenerator */ \"./node_modules/@akashic/akashic-engine/lib/RandomGenerator.js\");\nvar Xorshift_1 = __webpack_require__(/*! ./Xorshift */ \"./node_modules/@akashic/akashic-engine/lib/Xorshift.js\");\n/**\n * Xorshiftを用いた乱数生成期。\n */\nvar XorshiftRandomGenerator = /** @class */ (function (_super) {\n    __extends(XorshiftRandomGenerator, _super);\n    function XorshiftRandomGenerator(seed, xorshift) {\n        var _this = this;\n        if (seed === undefined) {\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"XorshiftRandomGenerator#constructor: seed is undefined\");\n        }\n        else {\n            _this = _super.call(this, seed) || this;\n            if (!!xorshift) {\n                _this._xorshift = Xorshift_1.Xorshift.deserialize(xorshift);\n            }\n            else {\n                _this._xorshift = new Xorshift_1.Xorshift(seed);\n            }\n        }\n        return _this;\n    }\n    XorshiftRandomGenerator.deserialize = function (ser) {\n        return new XorshiftRandomGenerator(ser._seed, ser._xorshift);\n    };\n    /**\n     * 乱数を生成する。\n     * `min` 以上 `max` 以下の数値を返す。\n     *\n     * @deprecated 非推奨である。将来的に削除される。代わりに `XorshiftRandomGenerator#generate()` を利用すること。\n     */\n    XorshiftRandomGenerator.prototype.get = function (min, max) {\n        return this._xorshift.nextInt(min, max + 1);\n    };\n    /**\n     * 乱数を生成する。\n     * 0 以上 1 未満の数値を返す。\n     *\n     * ローカルイベントの処理中を除き、原則 `Math.random()` ではなくこのメソッドを利用すること。\n     */\n    XorshiftRandomGenerator.prototype.generate = function () {\n        return this._xorshift.random();\n    };\n    XorshiftRandomGenerator.prototype.serialize = function () {\n        return {\n            _seed: this.seed,\n            _xorshift: this._xorshift.serialize()\n        };\n    };\n    return XorshiftRandomGenerator;\n}(RandomGenerator_1.RandomGenerator));\nexports.XorshiftRandomGenerator = XorshiftRandomGenerator;\n//# sourceMappingURL=XorshiftRandomGenerator.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/XorshiftRandomGenerator.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledScriptAsset.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledScriptAsset.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BundledScriptAsset = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar BundledScriptAsset = /** @class */ (function () {\n    function BundledScriptAsset(param) {\n        this.type = \"script\";\n        this.id = param.id;\n        this.script = \"\";\n        this.path = param.path;\n        this.originalPath = param.path;\n        this.onDestroyed = new trigger_1.Trigger();\n        this.execute = param.execute.bind(this);\n    }\n    BundledScriptAsset.prototype.inUse = function () {\n        return true;\n    };\n    BundledScriptAsset.prototype.destroy = function () {\n        if (!this.onDestroyed.destroyed()) {\n            this.onDestroyed.destroy();\n        }\n        this.execute = undefined;\n    };\n    BundledScriptAsset.prototype.destroyed = function () {\n        return !this.execute;\n    };\n    BundledScriptAsset.prototype._load = function (loader) {\n        loader._onAssetLoad(this);\n    };\n    BundledScriptAsset.prototype._assetPathFilter = function (path) {\n        return path;\n    };\n    return BundledScriptAsset;\n}());\nexports.BundledScriptAsset = BundledScriptAsset;\n//# sourceMappingURL=BundledScriptAsset.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledScriptAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledTextAsset.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledTextAsset.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BundledTextAsset = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar BundledTextAsset = /** @class */ (function () {\n    function BundledTextAsset(param) {\n        this.type = \"text\";\n        this.id = param.id;\n        this.data = param.data;\n        this.path = param.path;\n        this.originalPath = param.path;\n        this.onDestroyed = new trigger_1.Trigger();\n    }\n    BundledTextAsset.prototype.inUse = function () {\n        return true;\n    };\n    BundledTextAsset.prototype.destroy = function () {\n        if (!this.onDestroyed.destroyed()) {\n            this.onDestroyed.destroy();\n            this.onDestroyed = undefined;\n        }\n        this.data = undefined;\n    };\n    BundledTextAsset.prototype.destroyed = function () {\n        return !this.onDestroyed;\n    };\n    BundledTextAsset.prototype._load = function (loader) {\n        loader._onAssetLoad(this);\n    };\n    BundledTextAsset.prototype._assetPathFilter = function (path) {\n        return path;\n    };\n    return BundledTextAsset;\n}());\nexports.BundledTextAsset = BundledTextAsset;\n//# sourceMappingURL=BundledTextAsset.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/auxiliary/BundledTextAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyBinaryAsset.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyBinaryAsset.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmptyBinaryAsset = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar EmptyBinaryAsset = /** @class */ (function () {\n    function EmptyBinaryAsset(id, path) {\n        this.type = \"binary\";\n        this.onDestroyed = new trigger_1.Trigger();\n        this.id = id;\n        this.path = path;\n        this.originalPath = path;\n        this.data = new ArrayBuffer(0);\n    }\n    EmptyBinaryAsset.prototype.inUse = function () {\n        return false;\n    };\n    EmptyBinaryAsset.prototype.destroy = function () {\n        if (this.destroyed()) {\n            return;\n        }\n        this.onDestroyed.destroy();\n        this.onDestroyed = undefined;\n    };\n    EmptyBinaryAsset.prototype.destroyed = function () {\n        return !this.onDestroyed;\n    };\n    EmptyBinaryAsset.prototype._load = function (loader) {\n        loader._onAssetLoad(this);\n    };\n    EmptyBinaryAsset.prototype._assetPathFilter = function (path) {\n        return path;\n    };\n    return EmptyBinaryAsset;\n}());\nexports.EmptyBinaryAsset = EmptyBinaryAsset;\n//# sourceMappingURL=EmptyBinaryAsset.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyBinaryAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyGeneratedVectorImageAsset.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyGeneratedVectorImageAsset.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmptyGeneratedVectorImageAsset = void 0;\nvar EmptyVectorImageAsset_1 = __webpack_require__(/*! ./EmptyVectorImageAsset */ \"./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyVectorImageAsset.js\");\nvar EmptyGeneratedVectorImageAsset = /** @class */ (function (_super) {\n    __extends(EmptyGeneratedVectorImageAsset, _super);\n    function EmptyGeneratedVectorImageAsset(id, path, data) {\n        var _this = _super.call(this, id, path, 0, 0) || this;\n        _this.data = data;\n        return _this;\n    }\n    return EmptyGeneratedVectorImageAsset;\n}(EmptyVectorImageAsset_1.EmptyVectorImageAsset));\nexports.EmptyGeneratedVectorImageAsset = EmptyGeneratedVectorImageAsset;\n//# sourceMappingURL=EmptyGeneratedVectorImageAsset.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyGeneratedVectorImageAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyVectorImageAsset.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyVectorImageAsset.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmptyVectorImageAsset = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar EmptyVectorImageAsset = /** @class */ (function () {\n    function EmptyVectorImageAsset(id, path, width, height, hint) {\n        this.type = \"vector-image\";\n        this.width = 0;\n        this.height = 0;\n        this.onDestroyed = new trigger_1.Trigger();\n        this.id = id;\n        this.path = path;\n        this.originalPath = path;\n        this.width = width;\n        this.height = height;\n        this.hint = hint;\n    }\n    EmptyVectorImageAsset.prototype.createSurface = function (_width, _height, _sx, _sy, _sWidth, _sHeight) {\n        return null;\n    };\n    EmptyVectorImageAsset.prototype.inUse = function () {\n        return false;\n    };\n    EmptyVectorImageAsset.prototype.destroy = function () {\n        if (this.destroyed()) {\n            return;\n        }\n        this.onDestroyed.destroy();\n        this.onDestroyed = undefined;\n    };\n    EmptyVectorImageAsset.prototype.destroyed = function () {\n        return !this.onDestroyed;\n    };\n    EmptyVectorImageAsset.prototype._load = function (loader) {\n        loader._onAssetLoad(this);\n    };\n    EmptyVectorImageAsset.prototype._assetPathFilter = function (path) {\n        return path;\n    };\n    return EmptyVectorImageAsset;\n}());\nexports.EmptyVectorImageAsset = EmptyVectorImageAsset;\n//# sourceMappingURL=EmptyVectorImageAsset.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/auxiliary/EmptyVectorImageAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/auxiliary/PartialImageAsset.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/auxiliary/PartialImageAsset.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PartialImageAsset = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\n/**\n * 部分画像アセット。\n *\n * `resourceFacotory.createImageAsset()` で生成したアセットをラップし、`slice` で指定される領域の画像アセットとして振る舞う。\n * 通常、ゲーム開発者がこのクラスを生成する必要はない。\n */\nvar PartialImageAsset = /** @class */ (function () {\n    /**\n     * 部分画像アセットを生成する。\n     *\n     * `createImageAsset()` と異なり、 `slice` で指定された領域の画像アセットとして振る舞うため、\n     * `this.width`, `this.height` が引数の `width`, height` ではなく `slice` の値で初期化される点に注意。\n     * (`width`, `height` は元になる画像アセットの生成に使われる)\n     */\n    function PartialImageAsset(resourceFactory, id, uri, width, height, slice) {\n        this.type = \"image\";\n        this.hint = undefined;\n        this.onDestroyed = new trigger_1.Trigger();\n        this._surface = null;\n        this._loadHandler = null;\n        this.id = id;\n        this.path = uri;\n        this.originalPath = uri;\n        this.width = slice.width;\n        this.height = slice.height;\n        this._slice = slice;\n        this._resourceFactory = resourceFactory;\n        var internalId = \"\".concat(id, \"/<internal>\"); // AssetManager が管理しないので値は何でもよいが、わかりやすさのため `id` を元にしておく\n        this._src = resourceFactory.createImageAsset(internalId, uri, width, height);\n    }\n    PartialImageAsset.prototype.initialize = function (hint) {\n        this.hint = hint; // 自分では使わないが、外部観測的に `ImageAsset` と合うように代入しておく\n        this._src.initialize(hint);\n    };\n    PartialImageAsset.prototype.inUse = function () {\n        return false;\n    };\n    PartialImageAsset.prototype.destroy = function () {\n        if (this.destroyed()) {\n            return;\n        }\n        this.onDestroyed.fire(this);\n        this._src.destroy();\n        this._src = null;\n        this._slice = null;\n        this._resourceFactory = null;\n        this._surface = null;\n        this._loadHandler = null;\n        this.onDestroyed.destroy();\n        this.onDestroyed = undefined;\n    };\n    PartialImageAsset.prototype.destroyed = function () {\n        return !this._src;\n    };\n    PartialImageAsset.prototype.asSurface = function () {\n        if (this._surface)\n            return this._surface;\n        var _a = this._slice, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        var surface = this._resourceFactory.createSurface(width, height);\n        var r = surface.renderer();\n        r.begin();\n        r.drawImage(this._src.asSurface(), x, y, width, height, 0, 0);\n        r.end();\n        this._surface = surface;\n        return surface;\n    };\n    /**\n     * @private\n     */\n    PartialImageAsset.prototype._load = function (loader) {\n        this._loadHandler = loader;\n        this._src._load(this);\n    };\n    /**\n     * this._src 用のロードハンドラ。\n     * @private\n     */\n    PartialImageAsset.prototype._onAssetLoad = function (_asset) {\n        this._loadHandler._onAssetLoad(this);\n    };\n    /**\n     * this._src 用のロードエラーハンドラ。\n     * @private\n     */\n    PartialImageAsset.prototype._onAssetError = function (_asset, error) {\n        this._loadHandler._onAssetError(this, error);\n    };\n    /**\n     * @private\n     */\n    PartialImageAsset.prototype._assetPathFilter = function (path) {\n        return path;\n    };\n    return PartialImageAsset;\n}());\nexports.PartialImageAsset = PartialImageAsset;\n//# sourceMappingURL=PartialImageAsset.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/auxiliary/PartialImageAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/CacheableE.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/CacheableE.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CacheableE = void 0;\nvar E_1 = __webpack_require__(/*! ./E */ \"./node_modules/@akashic/akashic-engine/lib/entities/E.js\");\n/**\n * 内部描画キャッシュを持つ `E` 。\n */\nvar CacheableE = /** @class */ (function (_super) {\n    __extends(CacheableE, _super);\n    /**\n     * 各種パラメータを指定して `CacheableE` のインスタンスを生成する。\n     * @param param このエンティティに対するパラメータ\n     */\n    function CacheableE(param) {\n        var _this = _super.call(this, param) || this;\n        _this._shouldRenderChildren = true;\n        _this._cache = undefined;\n        _this._renderer = undefined;\n        _this._renderedCamera = undefined;\n        return _this;\n    }\n    /**\n     * このエンティティの描画キャッシュ無効化をエンジンに通知する。\n     * このメソッドを呼び出し後、描画キャッシュの再構築が行われ、各 `Renderer` に描画内容の変更が反映される。\n     */\n    CacheableE.prototype.invalidate = function () {\n        this.state &= ~2 /* EntityStateFlags.Cached */;\n        this.modified();\n    };\n    /**\n     * このエンティティ自身の描画を行う。\n     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。\n     */\n    CacheableE.prototype.renderSelf = function (renderer, camera) {\n        var padding = CacheableE.PADDING;\n        if (this._renderedCamera !== camera) {\n            this.state &= ~2 /* EntityStateFlags.Cached */;\n            this._renderedCamera = camera;\n        }\n        if (!(this.state & 2 /* EntityStateFlags.Cached */)) {\n            this._cacheSize = this.calculateCacheSize();\n            var w = Math.ceil(this._cacheSize.width) + padding * 2;\n            var h = Math.ceil(this._cacheSize.height) + padding * 2;\n            var isNew = !this._cache || this._cache.width < w || this._cache.height < h;\n            if (isNew) {\n                if (this._cache && !this._cache.destroyed()) {\n                    this._cache.destroy();\n                }\n                this._cache = this.scene.game.resourceFactory.createSurface(w, h);\n                this._renderer = this._cache.renderer();\n            }\n            var cacheRenderer = this._renderer;\n            cacheRenderer.begin();\n            if (!isNew) {\n                cacheRenderer.clear();\n            }\n            cacheRenderer.save();\n            cacheRenderer.translate(padding, padding);\n            this.renderCache(cacheRenderer, camera);\n            cacheRenderer.restore();\n            this.state |= 2 /* EntityStateFlags.Cached */;\n            cacheRenderer.end();\n        }\n        if (this._cache && this._cacheSize.width > 0 && this._cacheSize.height > 0) {\n            renderer.translate(-padding, -padding);\n            this.renderSelfFromCache(renderer);\n            renderer.translate(padding, padding);\n        }\n        return this._shouldRenderChildren;\n    };\n    /**\n     * 内部キャッシュから自身の描画を行う。\n     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。\n     */\n    CacheableE.prototype.renderSelfFromCache = function (renderer) {\n        renderer.drawImage(this._cache, 0, 0, this._cacheSize.width + CacheableE.PADDING, this._cacheSize.height + CacheableE.PADDING, 0, 0);\n    };\n    /**\n     * 利用している `Surface` を破棄した上で、このエンティティを破棄する。\n     */\n    CacheableE.prototype.destroy = function () {\n        if (this._cache && !this._cache.destroyed()) {\n            this._cache.destroy();\n        }\n        this._cache = undefined;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * キャッシュのサイズを取得する。\n     * 本クラスを継承したクラスでエンティティのサイズと異なるサイズを利用する場合、このメソッドをオーバーライドする。\n     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。\n     * このメソッドから得られる値を変更した場合、 `this.invalidate()` を呼び出す必要がある。\n     */\n    CacheableE.prototype.calculateCacheSize = function () {\n        return {\n            width: this.width,\n            height: this.height\n        };\n    };\n    /**\n     * _cache のパディングサイズ。\n     *\n     * @private\n     */\n    CacheableE.PADDING = 1;\n    return CacheableE;\n}(E_1.E));\nexports.CacheableE = CacheableE;\n//# sourceMappingURL=CacheableE.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/CacheableE.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/CameraCancellingE.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/CameraCancellingE.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CameraCancellingE = void 0;\nvar Camera2D_1 = __webpack_require__(/*! ../Camera2D */ \"./node_modules/@akashic/akashic-engine/lib/Camera2D.js\");\nvar Object2D_1 = __webpack_require__(/*! ../Object2D */ \"./node_modules/@akashic/akashic-engine/lib/Object2D.js\");\nvar E_1 = __webpack_require__(/*! ./E */ \"./node_modules/@akashic/akashic-engine/lib/entities/E.js\");\n/**\n * カメラのtransformを戻すエンティティ。\n * 特定シーンのエンティティがカメラの影響を受けないようにするための内部エンティティ。\n */\nvar CameraCancellingE = /** @class */ (function (_super) {\n    __extends(CameraCancellingE, _super);\n    function CameraCancellingE(param) {\n        var _this = _super.call(this, param) || this;\n        _this._canceller = new Object2D_1.Object2D();\n        return _this;\n    }\n    CameraCancellingE.prototype.renderSelf = function (renderer, camera) {\n        if (!this.children)\n            return false;\n        if (camera && camera instanceof Camera2D_1.Camera2D) {\n            var c = camera;\n            var canceller = this._canceller;\n            if (c.x !== canceller.x ||\n                c.y !== canceller.y ||\n                c.angle !== canceller.angle ||\n                c.scaleX !== canceller.scaleX ||\n                c.scaleY !== canceller.scaleY) {\n                canceller.x = c.x;\n                canceller.y = c.y;\n                canceller.angle = c.angle;\n                canceller.scaleX = c.scaleX;\n                canceller.scaleY = c.scaleY;\n                if (canceller._matrix) {\n                    canceller._matrix._modified = true;\n                }\n            }\n            renderer.save();\n            renderer.transform(canceller.getMatrix()._matrix);\n        }\n        // Note: concatしていないのでunsafeだが、render中に配列の中身が変わる事はない前提とする\n        var children = this.children;\n        for (var i = 0; i < children.length; ++i)\n            children[i].render(renderer, camera);\n        if (camera) {\n            renderer.restore();\n        }\n        return false;\n    };\n    return CameraCancellingE;\n}(E_1.E));\nexports.CameraCancellingE = CameraCancellingE;\n//# sourceMappingURL=CameraCancellingE.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/CameraCancellingE.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/E.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/E.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.E = exports.PointMoveEvent = exports.PointUpEvent = exports.PointDownEvent = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar Event_1 = __webpack_require__(/*! ../Event */ \"./node_modules/@akashic/akashic-engine/lib/Event.js\");\nvar ExceptionFactory_1 = __webpack_require__(/*! ../ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar Matrix_1 = __webpack_require__(/*! ../Matrix */ \"./node_modules/@akashic/akashic-engine/lib/Matrix.js\");\nvar Object2D_1 = __webpack_require__(/*! ../Object2D */ \"./node_modules/@akashic/akashic-engine/lib/Object2D.js\");\nvar Util_1 = __webpack_require__(/*! ../Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\");\n/**\n * ポインティング操作の開始を表すイベント。\n */\nvar PointDownEvent = /** @class */ (function (_super) {\n    __extends(PointDownEvent, _super);\n    function PointDownEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PointDownEvent;\n}(Event_1.PointDownEventBase));\nexports.PointDownEvent = PointDownEvent;\n/**\n * ポインティング操作の終了を表すイベント。\n * PointDownEvent後にのみ発生する。\n *\n * PointUpEvent#startDeltaによってPointDownEvent時からの移動量が、\n * PointUpEvent#prevDeltaによって直近のPointMoveEventからの移動量が取得出来る。\n * PointUpEvent#pointにはPointDownEvent#pointと同じ値が格納される。\n */\nvar PointUpEvent = /** @class */ (function (_super) {\n    __extends(PointUpEvent, _super);\n    function PointUpEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PointUpEvent;\n}(Event_1.PointUpEventBase));\nexports.PointUpEvent = PointUpEvent;\n/**\n * ポインティング操作の移動を表すイベント。\n * PointDownEvent後にのみ発生するため、MouseMove相当のものが本イベントとして発生することはない。\n *\n * PointMoveEvent#startDeltaによってPointDownEvent時からの移動量が、\n * PointMoveEvent#prevDeltaによって直近のPointMoveEventからの移動量が取得出来る。\n * PointMoveEvent#pointにはPointMoveEvent#pointと同じ値が格納される。\n *\n * 本イベントは、プレイヤーがポインティングデバイスを移動していなくても、\n * カメラの移動等視覚的にポイントが変化している場合にも発生する。\n */\nvar PointMoveEvent = /** @class */ (function (_super) {\n    __extends(PointMoveEvent, _super);\n    function PointMoveEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PointMoveEvent;\n}(Event_1.PointMoveEventBase));\nexports.PointMoveEvent = PointMoveEvent;\n/**\n * akashic-engineに描画される全てのエンティティを表す基底クラス。\n * 本クラス単体に描画処理にはなく、直接利用する場合はchildrenを利用したコンテナとして程度で利用される。\n */\nvar E = /** @class */ (function (_super) {\n    __extends(E, _super);\n    // pointMoveは代入する必要がないのでsetterを定義しない\n    /**\n     * 各種パラメータを指定して `E` のインスタンスを生成する。\n     * @param param 初期化に用いるパラメータのオブジェクト\n     */\n    function E(param) {\n        var _this = _super.call(this, param) || this;\n        _this.children = undefined;\n        _this.parent = undefined;\n        _this._touchable = false;\n        _this.state = 0 /* EntityStateFlags.None */;\n        _this._hasTouchableChildren = false;\n        _this._onUpdate = undefined;\n        _this._onMessage = undefined;\n        _this._onPointDown = undefined;\n        _this._onPointMove = undefined;\n        _this._onPointUp = undefined;\n        _this.tag = param.tag;\n        _this.shaderProgram = param.shaderProgram;\n        // local は Scene#register() や this.append() の呼び出しよりも先に立てなければならない\n        // ローカルシーン・ローカルティック補間シーンのエンティティは強制的に local (ローカルティックが来て他プレイヤーとずれる可能性がある)\n        _this.local = param.scene.local !== \"non-local\" || !!param.local;\n        if (param.children) {\n            for (var i = 0; i < param.children.length; ++i)\n                _this.append(param.children[i]);\n        }\n        if (param.parent) {\n            param.parent.append(_this);\n        }\n        if (param.touchable != null)\n            _this.touchable = param.touchable;\n        if (!!param.hidden)\n            _this.hide();\n        // set id, scene\n        // @ts-ignore NOTE: Game クラスで割り当てられるため、ここでは undefined を許容している\n        _this.id = param.id;\n        param.scene.register(_this);\n        return _this;\n    }\n    Object.defineProperty(E.prototype, \"onUpdate\", {\n        /**\n         * 時間経過イベント。本イベントの一度のfireにつき、常に1フレーム分の時間経過が起こる。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            if (!this._onUpdate)\n                this._onUpdate = new trigger_1.ChainTrigger(this.scene.onUpdate);\n            return this._onUpdate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"onMessage\", {\n        // onUpdateは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのmessageイベント。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            if (!this._onMessage)\n                this._onMessage = new trigger_1.ChainTrigger(this.scene.onMessage);\n            return this._onMessage;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"onPointDown\", {\n        // onMessageは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのpoint downイベント。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            if (!this._onPointDown)\n                this._onPointDown = new trigger_1.ChainTrigger(this.scene.onPointDownCapture, this._isTargetOperation, this);\n            return this._onPointDown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"onPointUp\", {\n        // onPointDownは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのpoint upイベント。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            if (!this._onPointUp)\n                this._onPointUp = new trigger_1.ChainTrigger(this.scene.onPointUpCapture, this._isTargetOperation, this);\n            return this._onPointUp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"onPointMove\", {\n        // onPointUpは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのpoint moveイベント。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            if (!this._onPointMove)\n                this._onPointMove = new trigger_1.ChainTrigger(this.scene.onPointMoveCapture, this._isTargetOperation, this);\n            return this._onPointMove;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"touchable\", {\n        // onPointMoveは代入する必要がないのでsetterを定義しない\n        /**\n         * プレイヤーにとって触れられるオブジェクトであるかを表す。\n         *\n         * この値が偽である場合、ポインティングイベントの対象にならない。\n         * 初期値は `false` である。\n         *\n         * `E` の他のプロパティと異なり、この値の変更後に `this.modified()` を呼び出す必要はない。\n         */\n        get: function () {\n            return this._touchable;\n        },\n        set: function (v) {\n            if (this._touchable === v)\n                return;\n            this._touchable = v;\n            if (v) {\n                this._enableTouchPropagation();\n            }\n            else {\n                this._disableTouchPropagation();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"update\", {\n        /**\n         * 時間経過イベント。本イベントの一度のfireにつき、常に1フレーム分の時間経過が起こる。\n         * @deprecated 非推奨である。将来的に削除される。代わりに `onUpdate` を利用すること。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            return this.onUpdate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"message\", {\n        // updateは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのmessageイベント。\n         * @deprecated 非推奨である。将来的に削除される。代わりに `onMessage` を利用すること。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            return this.onMessage;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"pointDown\", {\n        // messageは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのpoint downイベント。\n         * @deprecated 非推奨である。将来的に削除される。代わりに `onPointDown` を利用すること。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            return this.onPointDown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"pointUp\", {\n        // pointDownは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのpoint upイベント。\n         * @deprecated 非推奨である。将来的に削除される。代わりに `onPointUp` を利用すること。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            return this.onPointUp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(E.prototype, \"pointMove\", {\n        // pointUpは代入する必要がないのでsetterを定義しない\n        /**\n         * このエンティティのpoint moveイベント。\n         * @deprecated 非推奨である。将来的に削除される。代わりに `onPointMove` を利用すること。\n         */\n        // Eの生成コスト低減を考慮し、参照された時のみ生成出来るようアクセサを使う\n        get: function () {\n            return this.onPointMove;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * 自分自身と子孫の内容を描画する。\n     *\n     * このメソッドは、 `Renderer#draw()` からエンティティのツリー構造をトラバースする過程で暗黙に呼び出される。\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     * @param renderer 描画先に対するRenderer\n     * @param camera 対象のカメラ。省略された場合、undefined\n     */\n    E.prototype.render = function (renderer, camera) {\n        this.state &= ~4 /* EntityStateFlags.Modified */;\n        if (this.state & 1 /* EntityStateFlags.Hidden */)\n            return;\n        if (this.state & 8 /* EntityStateFlags.ContextLess */) {\n            renderer.translate(this.x, this.y);\n            var goDown_1 = this.renderSelf(renderer, camera);\n            if (goDown_1 && this.children) {\n                var children = this.children;\n                var len = children.length;\n                for (var i = 0; i < len; ++i)\n                    children[i].render(renderer, camera);\n            }\n            renderer.translate(-this.x, -this.y);\n            return;\n        }\n        renderer.save();\n        if (this.angle || this.scaleX !== 1 || this.scaleY !== 1 || this.anchorX !== 0 || this.anchorY !== 0) {\n            // Note: this.scaleX/scaleYが0の場合描画した結果何も表示されない事になるが、特殊扱いはしない\n            renderer.transform(this.getMatrix()._matrix);\n        }\n        else {\n            // Note: 変形なしのオブジェクトはキャッシュもとらずtranslateのみで処理\n            renderer.translate(this.x, this.y);\n        }\n        if (this.opacity !== 1)\n            renderer.opacity(this.opacity);\n        var op = this.compositeOperation;\n        if (op !== undefined) {\n            renderer.setCompositeOperation(typeof op === \"string\" ? op : Util_1.Util.compositeOperationStringTable[op]);\n        }\n        if (this.shaderProgram !== undefined && renderer.isSupportedShaderProgram())\n            renderer.setShaderProgram(this.shaderProgram);\n        var goDown = this.renderSelf(renderer, camera);\n        if (goDown && this.children) {\n            // Note: concatしていないのでunsafeだが、render中に配列の中身が変わる事はない前提とする\n            var children = this.children;\n            for (var i = 0; i < children.length; ++i)\n                children[i].render(renderer, camera);\n        }\n        renderer.restore();\n    };\n    /**\n     * 自分自身の内容を描画する。\n     *\n     * このメソッドは、 `Renderer#draw()` からエンティティのツリー構造をトラバースする過程で暗黙に呼び出される。\n     * 通常、ゲーム開発者がこのメソッドを呼び出す必要はない。\n     *\n     * 戻り値は、このエンティティの子孫の描画をスキップすべきであれば偽、でなければ真である。\n     * (この値は、子孫の描画方法をカスタマイズする一部のサブクラスにおいて、通常の描画パスをスキップするために用いられる)\n     *\n     * @param _renderer 描画先に対するRenderer\n     * @param _camera 対象のカメラ\n     */\n    E.prototype.renderSelf = function (_renderer, _camera) {\n        // nothing to do\n        return true;\n    };\n    /**\n     * このエンティティが属する `Game` を返す。\n     */\n    E.prototype.game = function () {\n        return this.scene.game;\n    };\n    /**\n     * 子を追加する。\n     *\n     * @param e 子エンティティとして追加するエンティティ\n     */\n    E.prototype.append = function (e) {\n        this.insertBefore(e, undefined);\n    };\n    /**\n     * 子を挿入する。\n     *\n     * `target` が`this` の子でない場合、`append(e)` と同じ動作となる。\n     *\n     * @param e 子エンティティとして追加するエンティティ\n     * @param target 挿入位置にある子エンティティ\n     */\n    E.prototype.insertBefore = function (e, target) {\n        if (e.parent)\n            e.remove();\n        if (!this.children)\n            this.children = [];\n        e.parent = this;\n        var index = -1;\n        if (target !== undefined && (index = this.children.indexOf(target)) > -1) {\n            this.children.splice(index, 0, e);\n        }\n        else {\n            this.children.push(e);\n        }\n        if (e._touchable || e._hasTouchableChildren) {\n            this._hasTouchableChildren = true;\n            this._enableTouchPropagation();\n        }\n        this.modified(true);\n    };\n    /**\n     * 子を削除する。\n     *\n     * `e` が `this` の子でない場合、 `AssertionError` がthrowされる。\n     * `e === undefined` であり親がない場合、 `AssertionError` がthrowされる。\n     *\n     * @param e 削除する子エンティティ。省略された場合、自身を親から削除する\n     */\n    E.prototype.remove = function (e) {\n        if (e === undefined) {\n            this.parent.remove(this);\n            return;\n        }\n        var index = this.children ? this.children.indexOf(e) : -1;\n        if (index < 0)\n            throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"E#remove: invalid child\");\n        this.children[index].parent = undefined;\n        this.children.splice(index, 1);\n        if (e._touchable || e._hasTouchableChildren) {\n            if (!this._findTouchableChildren(this)) {\n                this._hasTouchableChildren = false;\n                this._disableTouchPropagation();\n            }\n        }\n        this.modified(true);\n    };\n    /**\n     * このエンティティを破棄する。\n     *\n     * 親がある場合、親からは `remove()` される。\n     * 子孫を持っている場合、子孫も破棄される。\n     */\n    E.prototype.destroy = function () {\n        if (this.destroyed())\n            return;\n        if (this.parent)\n            this.remove();\n        if (this.children) {\n            for (var i = this.children.length - 1; i >= 0; --i) {\n                this.children[i].destroy();\n            }\n            if (this.children.length !== 0)\n                throw ExceptionFactory_1.ExceptionFactory.createAssertionError(\"E#destroy: can not destroy all children, \" + this.children.length);\n            this.children = undefined;\n        }\n        // この解放はstringとforeachを使って書きたいが、minifyする時は.アクセスの方がいいのでやむを得ない\n        if (this._onUpdate) {\n            this._onUpdate.destroy();\n            this._onUpdate = undefined;\n        }\n        if (this._onMessage) {\n            this._onMessage.destroy();\n            this._onMessage = undefined;\n        }\n        if (this._onPointDown) {\n            this._onPointDown.destroy();\n            this._onPointDown = undefined;\n        }\n        if (this._onPointMove) {\n            this._onPointMove.destroy();\n            this._onPointMove = undefined;\n        }\n        if (this._onPointUp) {\n            this._onPointUp.destroy();\n            this._onPointUp = undefined;\n        }\n        this.scene.unregister(this);\n    };\n    /**\n     * このエンティティが破棄済みであるかを返す。\n     */\n    E.prototype.destroyed = function () {\n        return this.scene === undefined;\n    };\n    /**\n     * このエンティティに対する変更をエンジンに通知する。\n     *\n     * このメソッドの呼び出し後、 `this` に対する変更が各 `Renderer` の描画に反映される。\n     * ただし逆は真ではない。すなわち、再描画は他の要因によって行われることもある。\n     * ゲーム開発者は、このメソッドを呼び出していないことをもって再描画が行われていないことを仮定してはならない。\n     *\n     * 本メソッドは、このオブジェクトの `Object2D` 由来のプロパティ (`x`, `y`, `angle` など) を変更した場合にも呼びだす必要がある。\n     * 本メソッドは、描画キャッシュの無効化処理を含まない。描画キャッシュを持つエンティティは、このメソッドとは別に `invalidate()` を提供している。\n     * 描画キャッシュの無効化も必要な場合は、このメソッドではなくそちらを呼び出す必要がある。\n     * @param _isBubbling 通常ゲーム開発者が指定する必要はない。この変更通知が、(このエンティティ自身のみならず)子孫の変更の通知を含む場合、真を渡さなければならない。省略された場合、偽。\n     */\n    E.prototype.modified = function (_isBubbling) {\n        // _matrixの用途は描画に限らない(e.g. E#findPointSourceByPoint)ので、Modifiedフラグと無関係にクリアする必要がある\n        if (this._matrix)\n            this._matrix._modified = true;\n        if (this.angle ||\n            this.scaleX !== 1 ||\n            this.scaleY !== 1 ||\n            this.anchorX !== 0 ||\n            this.anchorY !== 0 ||\n            this.opacity !== 1 ||\n            this.compositeOperation !== undefined ||\n            this.shaderProgram !== undefined) {\n            this.state &= ~8 /* EntityStateFlags.ContextLess */;\n        }\n        else {\n            this.state |= 8 /* EntityStateFlags.ContextLess */;\n        }\n        if (this.state & 4 /* EntityStateFlags.Modified */)\n            return;\n        this.state |= 4 /* EntityStateFlags.Modified */;\n        if (this.parent)\n            this.parent.modified(true);\n    };\n    /**\n     * このメソッドは、 `E#findPointSourceByPoint()` 内で子孫の探索をスキップすべきか判断するために呼ばれる。\n     * 通常、子孫の描画方法をカスタマイズする一部のサブクラスにおいて、与えられた座標に対する子孫の探索を制御する場合に利用する。\n     * ゲーム開発者がこのメソッドを呼び出す必要はない。\n     *\n     * 戻り値は、子孫の探索をスキップすべきであれば偽、でなければ真である。\n     *\n     * @param _point このエンティティ（`this`）の位置を基準とした相対座標\n     */\n    E.prototype.shouldFindChildrenByPoint = function (_point) {\n        // nothing to do\n        return true;\n    };\n    /**\n     * 自身と自身の子孫の中で、その座標に反応する `PointSource` を返す。\n     *\n     * 戻り値は、対象が見つかった場合、 `target` に見つかったエンティティを持つ `PointSource` である。\n     * 対象が見つからなかった場合、 `undefined` である。戻り値が `undefined` でない場合、その `target` プロパティは次を満たす:\n     * - このエンティティ(`this`) またはその子孫である\n     * - `E#touchable` が真である\n     *\n     * @param point 対象の座標\n     * @param m `this` に適用する変換行列。省略された場合、単位行列\n     * @param force touchable指定を無視する場合真を指定する。省略された場合、偽\n     */\n    E.prototype.findPointSourceByPoint = function (point, m, force) {\n        if (this.state & 1 /* EntityStateFlags.Hidden */)\n            return undefined;\n        m = m ? m.multiplyNew(this.getMatrix()) : this.getMatrix().clone();\n        var p = m.multiplyInverseForPoint(point);\n        if (this._hasTouchableChildren || (force && this.children && this.children.length)) {\n            var children = this.children;\n            if (this.shouldFindChildrenByPoint(p)) {\n                for (var i = children.length - 1; i >= 0; --i) {\n                    var child = children[i];\n                    if (force || child._touchable || child._hasTouchableChildren) {\n                        var target = child.findPointSourceByPoint(point, m, force);\n                        if (target)\n                            return target;\n                    }\n                }\n            }\n        }\n        if (!(force || this._touchable))\n            return undefined;\n        // 逆行列をポイントにかけた結果がEにヒットしているかを計算\n        if (0 <= p.x && this.width > p.x && 0 <= p.y && this.height > p.y) {\n            return {\n                target: this,\n                point: p\n            };\n        }\n        return undefined;\n    };\n    /**\n     * このEが表示状態であるかどうかを返す。\n     */\n    E.prototype.visible = function () {\n        return (this.state & 1 /* EntityStateFlags.Hidden */) !== 1 /* EntityStateFlags.Hidden */;\n    };\n    /**\n     * このEを表示状態にする。\n     *\n     * `this.hide()` によって非表示状態にされたエンティティを表示状態に戻す。\n     * 生成直後のエンティティは表示状態であり、 `hide()` を呼び出さない限りこのメソッドを呼び出す必要はない。\n     */\n    E.prototype.show = function () {\n        if (!(this.state & 1 /* EntityStateFlags.Hidden */))\n            return;\n        this.state &= ~1 /* EntityStateFlags.Hidden */;\n        if (this.parent) {\n            this.parent.modified(true);\n        }\n    };\n    /**\n     * このEを非表示状態にする。\n     *\n     * `this.show()` が呼ばれるまでの間、このエンティティは各 `Renderer` によって描画されない。\n     * また `Game#findPointSource()` で返されることもなくなる。\n     * `this#pointDown`, `pointMove`, `pointUp` なども通常の方法ではfireされなくなる。\n     */\n    E.prototype.hide = function () {\n        if (this.state & 1 /* EntityStateFlags.Hidden */)\n            return;\n        this.state |= 1 /* EntityStateFlags.Hidden */;\n        if (this.parent) {\n            this.parent.modified(true);\n        }\n    };\n    /**\n     * このEの包含矩形を計算する。\n     */\n    E.prototype.calculateBoundingRect = function () {\n        return this._calculateBoundingRect(undefined);\n    };\n    /**\n     * このEの位置を基準とした相対座標をゲームの左上端を基準とした座標に変換する。\n     * @param offset Eの位置を基準とした相対座標\n     */\n    E.prototype.localToGlobal = function (offset) {\n        var point = offset;\n        for (var entity = this; entity instanceof E; entity = entity.parent) {\n            point = entity.getMatrix().multiplyPoint(point);\n        }\n        return point;\n    };\n    /**\n     * ゲームの左上端を基準とした座標をこのEの位置を基準とした相対座標に変換する。\n     * @param offset ゲームの左上端を基準とした座標\n     */\n    E.prototype.globalToLocal = function (offset) {\n        var matrix = new Matrix_1.PlainMatrix();\n        for (var entity = this; entity instanceof E; entity = entity.parent) {\n            matrix.multiplyLeft(entity.getMatrix());\n        }\n        return matrix.multiplyInverseForPoint(offset);\n    };\n    /**\n     * このエンティティの座標系を、指定された祖先エンティティ (またはシーン) の座標系に変換する行列を求める。\n     *\n     * 指定されたエンティティが、このエンティティの祖先でない時、その値は無視される。\n     * 指定されたシーンが、このエンティティの属するシーン出ない時、その値は無視される。\n     *\n     * @param target 座標系の変換先エンティティまたはシーン。省略した場合、このエンティティの属するシーン(グローバル座標系への変換行列になる)\n     * @private\n     */\n    E.prototype._calculateMatrixTo = function (target) {\n        var matrix = new Matrix_1.PlainMatrix();\n        for (var entity = this; entity instanceof E && entity !== target; entity = entity.parent) {\n            matrix.multiplyLeft(entity.getMatrix());\n        }\n        return matrix;\n    };\n    /**\n     * このエンティティと与えられたエンティティの共通祖先のうち、もっとも子孫側にあるものを探す。\n     * 共通祖先がない場合、 `undefined` を返す。\n     *\n     * @param target このエンティティとの共通祖先を探すエンティティ\n     * @private\n     */\n    E.prototype._findLowestCommonAncestorWith = function (target) {\n        var seen = {};\n        for (var p = this; p instanceof E; p = p.parent) {\n            seen[p.id] = true;\n        }\n        var ret = target;\n        for (; ret instanceof E; ret = ret.parent) {\n            if (seen.hasOwnProperty(ret.id))\n                break;\n        }\n        return ret;\n    };\n    /**\n     * @private\n     */\n    E.prototype._calculateBoundingRect = function (m) {\n        var matrix = this.getMatrix();\n        if (m) {\n            matrix = m.multiplyNew(matrix);\n        }\n        if (!this.visible()) {\n            return undefined;\n        }\n        var thisBoundingRect = {\n            left: 0,\n            right: this.width,\n            top: 0,\n            bottom: this.height\n        };\n        var targetCoordinates = [\n            { x: thisBoundingRect.left, y: thisBoundingRect.top },\n            { x: thisBoundingRect.left, y: thisBoundingRect.bottom },\n            { x: thisBoundingRect.right, y: thisBoundingRect.top },\n            { x: thisBoundingRect.right, y: thisBoundingRect.bottom }\n        ];\n        var convertedPoint = matrix.multiplyPoint(targetCoordinates[0]);\n        var result = {\n            left: convertedPoint.x,\n            right: convertedPoint.x,\n            top: convertedPoint.y,\n            bottom: convertedPoint.y\n        };\n        for (var i = 1; i < targetCoordinates.length; ++i) {\n            convertedPoint = matrix.multiplyPoint(targetCoordinates[i]);\n            if (result.left > convertedPoint.x)\n                result.left = convertedPoint.x;\n            if (result.right < convertedPoint.x)\n                result.right = convertedPoint.x;\n            if (result.top > convertedPoint.y)\n                result.top = convertedPoint.y;\n            if (result.bottom < convertedPoint.y)\n                result.bottom = convertedPoint.y;\n        }\n        if (this.children !== undefined) {\n            for (var i = 0; i < this.children.length; ++i) {\n                var nowResult = this.children[i]._calculateBoundingRect(matrix);\n                if (nowResult) {\n                    if (result.left > nowResult.left)\n                        result.left = nowResult.left;\n                    if (result.right < nowResult.right)\n                        result.right = nowResult.right;\n                    if (result.top > nowResult.top)\n                        result.top = nowResult.top;\n                    if (result.bottom < nowResult.bottom)\n                        result.bottom = nowResult.bottom;\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @private\n     */\n    E.prototype._enableTouchPropagation = function () {\n        var p = this.parent;\n        while (p instanceof E && !p._hasTouchableChildren) {\n            p._hasTouchableChildren = true;\n            p = p.parent;\n        }\n    };\n    /**\n     * @private\n     */\n    E.prototype._disableTouchPropagation = function () {\n        var p = this.parent;\n        while (p instanceof E && p._hasTouchableChildren) {\n            if (this._findTouchableChildren(p))\n                break;\n            p._hasTouchableChildren = false;\n            p = p.parent;\n        }\n    };\n    /**\n     * @private\n     */\n    E.prototype._isTargetOperation = function (e) {\n        if (this.state & 1 /* EntityStateFlags.Hidden */)\n            return false;\n        if (e instanceof Event_1.PointEventBase)\n            return this._touchable && e.target === this;\n        return false;\n    };\n    E.prototype._findTouchableChildren = function (e) {\n        if (e.children) {\n            for (var i = 0; i < e.children.length; ++i) {\n                if (e.children[i].touchable)\n                    return e.children[i];\n                var tmp = this._findTouchableChildren(e.children[i]);\n                if (tmp)\n                    return tmp;\n            }\n        }\n        return undefined;\n    };\n    return E;\n}(Object2D_1.Object2D));\nexports.E = E;\n//# sourceMappingURL=E.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/E.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/FilledRect.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/FilledRect.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FilledRect = void 0;\nvar ExceptionFactory_1 = __webpack_require__(/*! ../ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\");\nvar E_1 = __webpack_require__(/*! ./E */ \"./node_modules/@akashic/akashic-engine/lib/entities/E.js\");\n/**\n * 塗りつぶされた矩形を表すエンティティ。\n */\nvar FilledRect = /** @class */ (function (_super) {\n    __extends(FilledRect, _super);\n    /**\n     * 各種パラメータを指定して `FilledRect` のインスタンスを生成する。\n     * @param param このエンティティに対するパラメータ\n     */\n    function FilledRect(param) {\n        var _this = _super.call(this, param) || this;\n        if (typeof param.cssColor !== \"string\")\n            throw ExceptionFactory_1.ExceptionFactory.createTypeMismatchError(\"ColorBox#constructor(cssColor)\", \"string\", param.cssColor);\n        _this.cssColor = param.cssColor;\n        return _this;\n    }\n    /**\n     * このエンティティ自身の描画を行う。\n     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。\n     */\n    FilledRect.prototype.renderSelf = function (renderer) {\n        renderer.fillRect(0, 0, this.width, this.height, this.cssColor);\n        return true;\n    };\n    return FilledRect;\n}(E_1.E));\nexports.FilledRect = FilledRect;\n//# sourceMappingURL=FilledRect.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/FilledRect.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/FrameSprite.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/FrameSprite.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FrameSprite = void 0;\nvar trigger_1 = __webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\");\nvar Sprite_1 = __webpack_require__(/*! ./Sprite */ \"./node_modules/@akashic/akashic-engine/lib/entities/Sprite.js\");\n/**\n * フレームとタイマーによるアニメーション機構を持つ `Sprite` 。\n *\n * このクラスは、コンストラクタで渡された画像を、\n * 幅 `srcWidth`, 高さ `srcHeight` 単位で区切られた小さな画像(以下、画像片)の集まりであると解釈する。\n * 各画像片は、左上から順に 0 から始まるインデックスで参照される。\n *\n * ゲーム開発者は、このインデックスからなる配列を `FrameSprite#frames` に設定する。\n * `FrameSprite` は、 `frames` に指定されたインデックス(が表す画像片)を順番に描画することでアニメーションを実現する。\n * アニメーションは `interval` ミリ秒ごとに進み、 `frames` の内容をループする。\n *\n * このクラスにおける `srcWidth`, `srcHeight` の扱いは、親クラスである `Sprite` とは異なっていることに注意。\n */\nvar FrameSprite = /** @class */ (function (_super) {\n    __extends(FrameSprite, _super);\n    /**\n     * 各種パラメータを指定して `FrameSprite` のインスタンスを生成する。\n     * @param param `FrameSprite` に設定するパラメータ\n     */\n    function FrameSprite(param) {\n        var _this = _super.call(this, param) || this;\n        _this._lastUsedIndex = 0;\n        _this.frameNumber = param.frameNumber || 0;\n        _this.frames = param.frames != null ? param.frames : [0];\n        _this.interval = param.interval;\n        _this._timer = undefined;\n        _this.loop = param.loop != null ? param.loop : true;\n        _this.onFinish = new trigger_1.Trigger();\n        _this.finished = _this.onFinish;\n        _this._modifiedSelf();\n        return _this;\n    }\n    /**\n     * `Sprite` から `FrameSprite` を作成する。\n     * @param sprite 画像として使う`Sprite`\n     * @param width 作成されるエンティティの高さ。省略された場合、 `sprite.width`\n     * @param height 作成されるエンティティの高さ。省略された場合、 `sprite.height`\n     */\n    FrameSprite.createBySprite = function (sprite, width, height) {\n        var frameSprite = new FrameSprite({\n            scene: sprite.scene,\n            src: sprite.src,\n            width: width === undefined ? sprite.width : width,\n            height: height === undefined ? sprite.height : height\n        });\n        frameSprite.srcHeight = height === undefined ? sprite.srcHeight : height;\n        frameSprite.srcWidth = width === undefined ? sprite.srcWidth : width;\n        return frameSprite;\n    };\n    /**\n     * アニメーションを開始する。\n     */\n    FrameSprite.prototype.start = function () {\n        if (this.interval === undefined)\n            this.interval = 1000 / this.game().fps;\n        if (this._timer)\n            this._free();\n        this._timer = this.scene.createTimer(this.interval);\n        this._timer.onElapse.add(this._handleElapse, this);\n    };\n    /**\n     * このエンティティを破棄する。\n     * デフォルトでは利用している `Surface` の破棄は行わない点に注意。\n     * @param destroySurface trueを指定した場合、このエンティティが抱える `Surface` も合わせて破棄する\n     */\n    FrameSprite.prototype.destroy = function (destroySurface) {\n        this.stop();\n        _super.prototype.destroy.call(this, destroySurface);\n    };\n    /**\n     * アニメーションを停止する。\n     */\n    FrameSprite.prototype.stop = function () {\n        if (this._timer)\n            this._free();\n    };\n    /**\n     * このエンティティに対する変更をエンジンに通知する。詳細は `E#modified()` のドキュメントを参照。\n     */\n    FrameSprite.prototype.modified = function (isBubbling) {\n        this._modifiedSelf(isBubbling);\n        _super.prototype.modified.call(this, isBubbling);\n    };\n    /**\n     * @private\n     */\n    FrameSprite.prototype._handleElapse = function () {\n        if (this.frameNumber === this.frames.length - 1) {\n            if (this.loop) {\n                this.frameNumber = 0;\n            }\n            else {\n                this.stop();\n                this.onFinish.fire();\n            }\n        }\n        else {\n            this.frameNumber++;\n        }\n        this.modified();\n    };\n    /**\n     * @private\n     */\n    FrameSprite.prototype._free = function () {\n        if (!this._timer)\n            return;\n        this._timer.onElapse.remove(this._handleElapse, this);\n        if (this._timer.canDelete())\n            this.scene.deleteTimer(this._timer);\n        this._timer = undefined;\n    };\n    /**\n     * @private\n     */\n    FrameSprite.prototype._changeFrame = function () {\n        var frame = this.frames[this.frameNumber];\n        var sep = Math.floor(this._surface.width / this.srcWidth);\n        this.srcX = (frame % sep) * this.srcWidth;\n        this.srcY = Math.floor(frame / sep) * this.srcHeight;\n        this._lastUsedIndex = frame;\n    };\n    FrameSprite.prototype._modifiedSelf = function (_isBubbling) {\n        if (this._lastUsedIndex !== this.frames[this.frameNumber])\n            this._changeFrame();\n    };\n    return FrameSprite;\n}(Sprite_1.Sprite));\nexports.FrameSprite = FrameSprite;\n//# sourceMappingURL=FrameSprite.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/FrameSprite.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/Label.js":
/*!********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/Label.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Label = void 0;\nvar TextAlign_1 = __webpack_require__(/*! ../TextAlign */ \"./node_modules/@akashic/akashic-engine/lib/TextAlign.js\");\nvar Util_1 = __webpack_require__(/*! ../Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\");\nvar CacheableE_1 = __webpack_require__(/*! ./CacheableE */ \"./node_modules/@akashic/akashic-engine/lib/entities/CacheableE.js\");\n/**\n * 単一行のテキストを描画するエンティティ。\n * 本クラスの利用には `BitmapFont` または `DynamicFont` が必要となる。\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    /**\n     * 各種パラメータを指定して `Label` のインスタンスを生成する。\n     * @param param このエンティティに指定するパラメータ\n     */\n    function Label(param) {\n        var _this = _super.call(this, param) || this;\n        _this.text = param.text;\n        _this.font = param.font;\n        _this.textAlign = param.textAlign != null ? param.textAlign : TextAlign_1.TextAlign.Left;\n        _this.glyphs = new Array(param.text.length);\n        _this.fontSize = param.fontSize != null ? param.fontSize : param.font.size;\n        _this.maxWidth = param.maxWidth;\n        _this.widthAutoAdjust = param.widthAutoAdjust != null ? param.widthAutoAdjust : true;\n        _this.textColor = param.textColor;\n        _this._realTextAlign = \"left\";\n        _this._textWidth = 0;\n        _this._overhangLeft = 0;\n        _this._overhangRight = 0;\n        _this._invalidateSelf();\n        return _this;\n    }\n    /**\n     * `width` と `textAlign` を設定し、 `widthAutoAdjust` を `false` に設定する。\n     *\n     * このメソッドは `this.textAlign` を設定するためのユーティリティである。\n     * `textAlign` を `\"left\"` (または非推奨の旧称 `TextAlign.Left`) 以外に設定する場合には、\n     * 通常 `width` や `widthAutoAdjust` も設定する必要があるため、それらをまとめて行う。\n     * このメソッドの呼び出し後、 `this.invalidate()` を呼び出す必要がある。\n     * @param width 幅\n     * @param textAlign テキストの描画位置\n     */\n    Label.prototype.aligning = function (width, textAlign) {\n        this.width = width;\n        this.widthAutoAdjust = false;\n        this.textAlign = textAlign;\n    };\n    /**\n     * このエンティティの描画キャッシュ無効化をエンジンに通知する。\n     * このメソッドを呼び出し後、描画キャッシュの再構築が行われ、各 `Renderer` に描画内容の変更が反映される。\n     */\n    Label.prototype.invalidate = function () {\n        this._invalidateSelf();\n        _super.prototype.invalidate.call(this);\n    };\n    /**\n     * Label自身の描画を行う。\n     */\n    Label.prototype.renderSelfFromCache = function (renderer) {\n        // glyphのはみ出し量に応じて、描画先のX座標を調整する。\n        var destOffsetX;\n        switch (this._realTextAlign) {\n            case \"center\":\n                destOffsetX = this.widthAutoAdjust ? this._overhangLeft : 0;\n                break;\n            case \"right\":\n                destOffsetX = this.widthAutoAdjust ? this._overhangLeft : this._overhangRight;\n                break;\n            default:\n                destOffsetX = this._overhangLeft;\n                break;\n        }\n        renderer.drawImage(this._cache, 0, 0, this._cacheSize.width + CacheableE_1.CacheableE.PADDING, this._cacheSize.height + CacheableE_1.CacheableE.PADDING, destOffsetX, 0);\n    };\n    Label.prototype.renderCache = function (renderer) {\n        if (!this.fontSize || this.height <= 0 || this._textWidth <= 0) {\n            return;\n        }\n        var scale = this.maxWidth && this.maxWidth > 0 && this.maxWidth < this._textWidth ? this.maxWidth / this._textWidth : 1;\n        var offsetX = 0;\n        switch (this._realTextAlign) {\n            case \"center\":\n                offsetX = this.width / 2 - ((this._textWidth + this._overhangLeft) / 2) * scale;\n                break;\n            case \"right\":\n                offsetX = this.width - (this._textWidth + this._overhangLeft) * scale;\n                break;\n            default:\n                offsetX -= this._overhangLeft * scale;\n                break;\n        }\n        renderer.translate(Math.round(offsetX), 0);\n        if (scale !== 1) {\n            renderer.transform([scale, 0, 0, 1, 0, 0]);\n        }\n        renderer.save();\n        var glyphScale = this.fontSize / this.font.size;\n        var cumulativeOffset = 0;\n        for (var i = 0; i < this.glyphs.length; ++i) {\n            var glyph = this.glyphs[i];\n            var glyphWidth = glyph.advanceWidth * glyphScale;\n            var code = glyph.code;\n            if (!glyph.isSurfaceValid) {\n                glyph = this.font.glyphForCharacter(code);\n                if (!glyph) {\n                    this._outputOfWarnLogWithNoGlyph(code, \"renderCache()\");\n                    continue;\n                }\n            }\n            if (glyph.surface) {\n                // 非空白文字\n                renderer.save();\n                renderer.translate(Math.round(cumulativeOffset), 0);\n                renderer.transform([glyphScale, 0, 0, glyphScale, 0, 0]);\n                renderer.drawImage(glyph.surface, glyph.x, glyph.y, glyph.width, glyph.height, glyph.offsetX, glyph.offsetY);\n                renderer.restore();\n            }\n            cumulativeOffset += glyphWidth;\n        }\n        renderer.restore();\n        renderer.save();\n        if (this.textColor) {\n            renderer.setCompositeOperation(\"source-atop\");\n            renderer.fillRect(0, 0, this._textWidth, this.height, this.textColor);\n        }\n        renderer.restore();\n    };\n    /**\n     * このエンティティを破棄する。\n     * 利用している `BitmapFont` の破棄は行わないため、 `BitmapFont` の破棄はコンテンツ製作者が明示的に行う必要がある。\n     */\n    Label.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    Label.prototype._invalidateSelf = function () {\n        this.glyphs.length = 0;\n        this._textWidth = 0;\n        var align = this.textAlign;\n        this._realTextAlign = typeof align === \"string\" ? align : Util_1.Util.enumToSnakeCase(TextAlign_1.TextAlign, align);\n        if (!this.fontSize) {\n            this.height = 0;\n            return;\n        }\n        var effectiveTextLastIndex = this.text.length - 1;\n        // 右のはみだし量を求めるため、text内での有効な最後の glyph のindexを解決する。\n        for (var i = this.text.length - 1; i >= 0; --i) {\n            var code = Util_1.Util.charCodeAt(this.text, i);\n            if (!code) {\n                continue;\n            }\n            var glyph = this.font.glyphForCharacter(code);\n            if (glyph && glyph.width !== 0 && glyph.advanceWidth !== 0) {\n                effectiveTextLastIndex = i;\n                break;\n            }\n        }\n        var maxHeight = 0;\n        var glyphScale = this.font.size > 0 ? this.fontSize / this.font.size : 0;\n        for (var i = 0; i <= effectiveTextLastIndex; ++i) {\n            var code = Util_1.Util.charCodeAt(this.text, i);\n            if (!code) {\n                continue;\n            }\n            var glyph = this.font.glyphForCharacter(code);\n            if (!glyph) {\n                this._outputOfWarnLogWithNoGlyph(code, \"_invalidateSelf()\");\n                continue;\n            }\n            if (glyph.width < 0 || glyph.height < 0) {\n                continue;\n            }\n            if (glyph.x < 0 || glyph.y < 0) {\n                continue;\n            }\n            this.glyphs.push(glyph);\n            // Font に StrokeWidth が設定されている場合、文字の描画内容は、描画の基準点よりも左にはみ出る場合や、glyph.advanceWidth より右にはみ出る場合がある。\n            // キャッシュサーフェスの幅は、最初の文字と最後の文字のはみ出し部分を考慮して求める必要がある。\n            var overhang = 0;\n            if (i === 0) {\n                this._overhangLeft = Math.min(glyph.offsetX, 0);\n                overhang = -this._overhangLeft;\n            }\n            if (i === effectiveTextLastIndex) {\n                this._overhangRight = Math.max(glyph.width + glyph.offsetX - glyph.advanceWidth, 0);\n                overhang += this._overhangRight;\n            }\n            this._textWidth += (glyph.advanceWidth + overhang) * glyphScale;\n            var height = glyph.offsetY + glyph.height;\n            if (maxHeight < height) {\n                maxHeight = height;\n            }\n        }\n        if (this.widthAutoAdjust) {\n            this.width = this._textWidth;\n        }\n        this.height = maxHeight * glyphScale;\n    };\n    Label.prototype._outputOfWarnLogWithNoGlyph = function (code, functionName) {\n        var str = code & 0xffff0000 ? String.fromCharCode((code & 0xffff0000) >>> 16, code & 0xffff) : String.fromCharCode(code);\n        console.warn(\"Label#\" +\n            functionName +\n            \": failed to get a glyph for '\" +\n            str +\n            \"' \" +\n            \"(BitmapFont might not have the glyph or DynamicFont might create a glyph larger than its atlas).\");\n    };\n    return Label;\n}(CacheableE_1.CacheableE));\nexports.Label = Label;\n//# sourceMappingURL=Label.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/Label.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/Pane.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/Pane.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pane = void 0;\nvar SurfaceUtil_1 = __webpack_require__(/*! ../SurfaceUtil */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js\");\nvar CacheableE_1 = __webpack_require__(/*! ./CacheableE */ \"./node_modules/@akashic/akashic-engine/lib/entities/CacheableE.js\");\n/**\n * 枠を表すエンティティ。\n * クリッピングやパディング、バックグラウンドイメージの演出等の機能を持つため、\n * メニューやメッセージ、ステータスのウィンドウ等に利用されることが期待される。\n * このエンティティの子要素は、このエンティティの持つ `Surface` に描画される。\n */\nvar Pane = /** @class */ (function (_super) {\n    __extends(Pane, _super);\n    /**\n     * 各種パラメータを指定して `Pane` のインスタンスを生成する。\n     * @param param このエンティティに指定するパラメータ\n     */\n    function Pane(param) {\n        var _this = _super.call(this, param) || this;\n        _this._oldWidth = param.width;\n        _this._oldHeight = param.height;\n        _this.backgroundImage = param.backgroundImage;\n        _this._beforeBackgroundImage = param.backgroundImage;\n        _this._backgroundImageSurface = SurfaceUtil_1.SurfaceUtil.asSurface(param.backgroundImage);\n        _this.backgroundEffector = param.backgroundEffector;\n        _this._shouldRenderChildren = false;\n        _this._padding = param.padding || 0;\n        _this._initialize();\n        _this._paddingChanged = false;\n        return _this;\n    }\n    Object.defineProperty(Pane.prototype, \"padding\", {\n        get: function () {\n            return this._padding;\n        },\n        /**\n         * パディング。\n         * このエンティティの子孫は、パディングに指定された分だけ右・下にずれた場所に描画され、またパディングの矩形サイズでクリッピングされる。\n         */\n        // NOTE: paddingの変更は頻繁に行われるものでは無いと思われるので、フラグを立てるためにアクセサを使う\n        set: function (padding) {\n            this._padding = padding;\n            this._paddingChanged = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * このエンティティに対する変更をエンジンに通知する。\n     * このメソッドの呼び出し後、 `this` に対する変更が各 `Renderer` の描画に反映される。\n     * このメソッドは描画キャッシュの無効化を保証しない。描画キャッシュの無効化も必要な場合、 `invalidate()`を呼び出さなければならない。\n     * 詳細は `E#modified()` のドキュメントを参照。\n     */\n    Pane.prototype.modified = function (isBubbling) {\n        if (isBubbling)\n            this.state &= ~2 /* EntityStateFlags.Cached */;\n        _super.prototype.modified.call(this);\n    };\n    Pane.prototype.shouldFindChildrenByPoint = function (point) {\n        var p = this._normalizedPadding;\n        if (p.left < point.x && this.width - p.right > point.x && p.top < point.y && this.height - p.bottom > point.y) {\n            return true;\n        }\n        return false;\n    };\n    Pane.prototype.renderCache = function (renderer, camera) {\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        this._renderBackground();\n        this._renderChildren(camera);\n        if (this._bgSurface) {\n            renderer.drawImage(this._bgSurface, 0, 0, this.width, this.height, 0, 0);\n        }\n        else if (this._backgroundImageSurface) {\n            renderer.drawImage(this._backgroundImageSurface, 0, 0, this.width, this.height, 0, 0);\n        }\n        if (this._childrenArea.width <= 0 || this._childrenArea.height <= 0) {\n            return;\n        }\n        renderer.save();\n        if (this._childrenArea.x !== 0 || this._childrenArea.y !== 0) {\n            renderer.translate(this._childrenArea.x, this._childrenArea.y);\n        }\n        renderer.drawImage(this._childrenSurface, 0, 0, this._childrenArea.width, this._childrenArea.height, 0, 0);\n        renderer.restore();\n    };\n    /**\n     * このエンティティを破棄する。また、バックバッファで利用している `Surface` も合わせて破棄される。\n     * ただし、 `backgroundImage` に利用している `Surface` の破棄は行わない。\n     * @param destroySurface trueを指定した場合、 `backgroundImage` に利用している `Surface` も合わせて破棄する。\n     */\n    Pane.prototype.destroy = function (destroySurface) {\n        if (destroySurface && this._backgroundImageSurface && !this._backgroundImageSurface.destroyed()) {\n            this._backgroundImageSurface.destroy();\n        }\n        if (this._bgSurface && !this._bgSurface.destroyed()) {\n            this._bgSurface.destroy();\n        }\n        if (this._childrenSurface && !this._childrenSurface.destroyed()) {\n            this._childrenSurface.destroy();\n        }\n        this.backgroundImage = undefined;\n        this._backgroundImageSurface = undefined;\n        this._beforeBackgroundImage = undefined;\n        this._bgSurface = undefined;\n        this._childrenSurface = undefined;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * @private\n     */\n    Pane.prototype._renderBackground = function () {\n        if (this.backgroundImage !== this._beforeBackgroundImage) {\n            this._backgroundImageSurface = SurfaceUtil_1.SurfaceUtil.asSurface(this.backgroundImage);\n            this._beforeBackgroundImage = this.backgroundImage;\n        }\n        if (this._backgroundImageSurface && this.backgroundEffector) {\n            var bgSurface = this.backgroundEffector.render(this._backgroundImageSurface, this.width, this.height);\n            if (this._bgSurface !== bgSurface) {\n                if (this._bgSurface && !this._bgSurface.destroyed()) {\n                    this._bgSurface.destroy();\n                }\n                this._bgSurface = bgSurface;\n            }\n        }\n        else {\n            this._bgSurface = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    Pane.prototype._renderChildren = function (camera) {\n        var isNew = this._oldWidth !== this.width || this._oldHeight !== this.height || this._paddingChanged;\n        if (isNew) {\n            this._initialize();\n            this._paddingChanged = false;\n            this._oldWidth = this.width;\n            this._oldHeight = this.height;\n        }\n        this._childrenRenderer.begin();\n        if (!isNew) {\n            this._childrenRenderer.clear();\n        }\n        if (this.children) {\n            // Note: concatしていないのでunsafeだが、render中に配列の中身が変わる事はない前提とする\n            var children = this.children;\n            for (var i = 0; i < children.length; ++i) {\n                children[i].render(this._childrenRenderer, camera);\n            }\n        }\n        this._childrenRenderer.end();\n    };\n    /**\n     * @private\n     */\n    Pane.prototype._initialize = function () {\n        var p = this._padding;\n        var r;\n        if (typeof p === \"number\") {\n            r = { top: p, bottom: p, left: p, right: p };\n        }\n        else {\n            r = p;\n        }\n        this._childrenArea = {\n            x: r.left,\n            y: r.top,\n            width: this.width - r.left - r.right,\n            height: this.height - r.top - r.bottom\n        };\n        var resourceFactory = this.scene.game.resourceFactory;\n        if (this._childrenSurface && !this._childrenSurface.destroyed()) {\n            this._childrenSurface.destroy();\n        }\n        this._childrenSurface = resourceFactory.createSurface(Math.ceil(this._childrenArea.width), Math.ceil(this._childrenArea.height));\n        this._childrenRenderer = this._childrenSurface.renderer();\n        this._normalizedPadding = r;\n    };\n    /**\n     * このPaneの包含矩形を計算する。\n     * Eを継承する他のクラスと異なり、Paneは子要素の位置を包括矩形に含まない。\n     * @private\n     */\n    Pane.prototype._calculateBoundingRect = function (m) {\n        var matrix = this.getMatrix();\n        if (m) {\n            matrix = m.multiplyNew(matrix);\n        }\n        if (!this.visible()) {\n            return undefined;\n        }\n        var thisBoundingRect = {\n            left: 0,\n            right: this.width,\n            top: 0,\n            bottom: this.height\n        };\n        var targetCoordinates = [\n            { x: thisBoundingRect.left, y: thisBoundingRect.top },\n            { x: thisBoundingRect.left, y: thisBoundingRect.bottom },\n            { x: thisBoundingRect.right, y: thisBoundingRect.top },\n            { x: thisBoundingRect.right, y: thisBoundingRect.bottom }\n        ];\n        var convertedPoint = matrix.multiplyPoint(targetCoordinates[0]);\n        var result = {\n            left: convertedPoint.x,\n            right: convertedPoint.x,\n            top: convertedPoint.y,\n            bottom: convertedPoint.y\n        };\n        for (var i = 1; i < targetCoordinates.length; ++i) {\n            convertedPoint = matrix.multiplyPoint(targetCoordinates[i]);\n            if (result.left > convertedPoint.x)\n                result.left = convertedPoint.x;\n            if (result.right < convertedPoint.x)\n                result.right = convertedPoint.x;\n            if (result.top > convertedPoint.y)\n                result.top = convertedPoint.y;\n            if (result.bottom < convertedPoint.y)\n                result.bottom = convertedPoint.y;\n        }\n        return result;\n    };\n    return Pane;\n}(CacheableE_1.CacheableE));\nexports.Pane = Pane;\n//# sourceMappingURL=Pane.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/Pane.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/entities/Sprite.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/entities/Sprite.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sprite = void 0;\nvar Matrix_1 = __webpack_require__(/*! ../Matrix */ \"./node_modules/@akashic/akashic-engine/lib/Matrix.js\");\nvar SurfaceUtil_1 = __webpack_require__(/*! ../SurfaceUtil */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js\");\nvar E_1 = __webpack_require__(/*! ./E */ \"./node_modules/@akashic/akashic-engine/lib/entities/E.js\");\n/**\n * 画像を描画するエンティティ。\n */\nvar Sprite = /** @class */ (function (_super) {\n    __extends(Sprite, _super);\n    /**\n     * 各種パラメータを指定して `Sprite` のインスタンスを生成する。\n     * @param param `Sprite` に設定するパラメータ\n     */\n    function Sprite(param) {\n        var _this = _super.call(this, param) || this;\n        _this.src = param.src;\n        if (\"_drawable\" in param.src) {\n            _this._surface = param.src;\n        }\n        else {\n            // @ts-ignore\n            _this._surface = SurfaceUtil_1.SurfaceUtil.asSurface(param.src);\n        }\n        if (param.width == null)\n            _this.width = _this._surface.width;\n        if (param.height == null)\n            _this.height = _this._surface.height;\n        _this.srcWidth = param.srcWidth != null ? param.srcWidth : _this.width;\n        _this.srcHeight = param.srcHeight != null ? param.srcHeight : _this.height;\n        _this.srcX = param.srcX || 0;\n        _this.srcY = param.srcY || 0;\n        _this._stretchMatrix = undefined;\n        _this._beforeSrc = _this.src;\n        _this._beforeSurface = _this._surface;\n        SurfaceUtil_1.SurfaceUtil.setupAnimatingHandler(_this, _this._surface);\n        _this._invalidateSelf();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    Sprite.prototype._handleUpdate = function () {\n        this.modified();\n    };\n    /**\n     * @private\n     */\n    Sprite.prototype._handleAnimationStart = function () {\n        if (!this.onUpdate.contains(this._handleUpdate, this)) {\n            this.onUpdate.add(this._handleUpdate, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Sprite.prototype._handleAnimationStop = function () {\n        if (!this.destroyed()) {\n            this.onUpdate.remove(this._handleUpdate, this);\n        }\n    };\n    /**\n     * このエンティティ自身の描画を行う。\n     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。\n     */\n    Sprite.prototype.renderSelf = function (renderer, _camera) {\n        if (this.srcWidth <= 0 || this.srcHeight <= 0) {\n            return true;\n        }\n        if (this._stretchMatrix) {\n            renderer.save();\n            renderer.transform(this._stretchMatrix._matrix);\n        }\n        renderer.drawImage(this._surface, this.srcX, this.srcY, this.srcWidth, this.srcHeight, 0, 0);\n        if (this._stretchMatrix)\n            renderer.restore();\n        return true;\n    };\n    /**\n     * このエンティティの描画キャッシュ無効化をエンジンに通知する。\n     * このメソッドを呼び出し後、描画キャッシュの再構築が行われ、各 `Renderer` に描画内容の変更が反映される。\n     */\n    Sprite.prototype.invalidate = function () {\n        this._invalidateSelf();\n        this.modified();\n    };\n    /**\n     * このエンティティを破棄する。\n     * デフォルトでは利用している `Surface` の破棄は行わない点に注意。\n     * @param destroySurface trueを指定した場合、このエンティティが抱える `Surface` も合わせて破棄する\n     */\n    Sprite.prototype.destroy = function (destroySurface) {\n        if (this._surface && !this._surface.destroyed() && destroySurface) {\n            this._surface.destroy();\n        }\n        this.src = undefined;\n        this._beforeSrc = undefined;\n        this._surface = undefined;\n        _super.prototype.destroy.call(this);\n    };\n    Sprite.prototype._invalidateSelf = function () {\n        if (this.width === this.srcWidth && this.height === this.srcHeight) {\n            this._stretchMatrix = undefined;\n        }\n        else {\n            this._stretchMatrix = new Matrix_1.PlainMatrix();\n            this._stretchMatrix.scale(this.width / this.srcWidth, this.height / this.srcHeight);\n        }\n        if (this.src !== this._beforeSrc) {\n            this._beforeSrc = this.src;\n            if (\"_drawable\" in this.src) {\n                this._surface = this.src;\n            }\n            else {\n                // @ts-ignore\n                this._surface = SurfaceUtil_1.SurfaceUtil.asSurface(this.src);\n            }\n        }\n        if (this._surface !== this._beforeSurface) {\n            SurfaceUtil_1.SurfaceUtil.migrateAnimatingHandler(this, this._beforeSurface, this._surface);\n            this._beforeSurface = this._surface;\n        }\n    };\n    return Sprite;\n}(E_1.E));\nexports.Sprite = Sprite;\n//# sourceMappingURL=Sprite.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/entities/Sprite.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/errors.js":
/*!************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/errors.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * akashic-engine 独自のエラー型定義。\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=errors.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/errors.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/index.common.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/index.common.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PathUtil = exports.VideoSystem = exports.ShaderProgram = exports.Module = exports.AudioSystem = void 0;\n__exportStar(__webpack_require__(/*! @akashic/game-configuration */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/index.js\"), exports);\n__exportStar(__webpack_require__(/*! @akashic/trigger */ \"./node_modules/@akashic/trigger/lib/index.js\"), exports);\n// pdi-types 由来の型を g 直下から reexport する。\n// ただし一部の型名は、akashic-engine で同名のクラス実装を与えているため、\n// そのままでは両方 export しようとして衝突する。\n// ここで明示的に片方を export して衝突を解決している。\n__exportStar(__webpack_require__(/*! @akashic/pdi-types */ \"./node_modules/@akashic/pdi-types/lib/index.js\"), exports);\nvar AudioSystem_1 = __webpack_require__(/*! ./AudioSystem */ \"./node_modules/@akashic/akashic-engine/lib/AudioSystem.js\");\nObject.defineProperty(exports, \"AudioSystem\", ({ enumerable: true, get: function () { return AudioSystem_1.AudioSystem; } }));\nvar Module_1 = __webpack_require__(/*! ./Module */ \"./node_modules/@akashic/akashic-engine/lib/Module.js\");\nObject.defineProperty(exports, \"Module\", ({ enumerable: true, get: function () { return Module_1.Module; } }));\nvar ShaderProgram_1 = __webpack_require__(/*! ./ShaderProgram */ \"./node_modules/@akashic/akashic-engine/lib/ShaderProgram.js\");\nObject.defineProperty(exports, \"ShaderProgram\", ({ enumerable: true, get: function () { return ShaderProgram_1.ShaderProgram; } }));\nvar VideoSystem_1 = __webpack_require__(/*! ./VideoSystem */ \"./node_modules/@akashic/akashic-engine/lib/VideoSystem.js\");\nObject.defineProperty(exports, \"VideoSystem\", ({ enumerable: true, get: function () { return VideoSystem_1.VideoSystem; } }));\n// 後方互換性のため PathUtil のみ reexport する。\nvar PathUtil_1 = __webpack_require__(/*! @akashic/game-configuration/lib/utils/PathUtil */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/utils/PathUtil.js\");\nObject.defineProperty(exports, \"PathUtil\", ({ enumerable: true, get: function () { return PathUtil_1.PathUtil; } }));\n__exportStar(__webpack_require__(/*! ./entities/CacheableE */ \"./node_modules/@akashic/akashic-engine/lib/entities/CacheableE.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entities/E */ \"./node_modules/@akashic/akashic-engine/lib/entities/E.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entities/FilledRect */ \"./node_modules/@akashic/akashic-engine/lib/entities/FilledRect.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entities/FrameSprite */ \"./node_modules/@akashic/akashic-engine/lib/entities/FrameSprite.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entities/Label */ \"./node_modules/@akashic/akashic-engine/lib/entities/Label.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entities/Pane */ \"./node_modules/@akashic/akashic-engine/lib/entities/Pane.js\"), exports);\n__exportStar(__webpack_require__(/*! ./entities/Sprite */ \"./node_modules/@akashic/akashic-engine/lib/entities/Sprite.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@akashic/akashic-engine/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetAccessor */ \"./node_modules/@akashic/akashic-engine/lib/AssetAccessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetGenerationConfiguration */ \"./node_modules/@akashic/akashic-engine/lib/AssetGenerationConfiguration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetHolder */ \"./node_modules/@akashic/akashic-engine/lib/AssetHolder.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetLoadFailureInfo */ \"./node_modules/@akashic/akashic-engine/lib/AssetLoadFailureInfo.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetManager */ \"./node_modules/@akashic/akashic-engine/lib/AssetManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetManagerLoadHandler */ \"./node_modules/@akashic/akashic-engine/lib/AssetManagerLoadHandler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AudioPlayContext */ \"./node_modules/@akashic/akashic-engine/lib/AudioPlayContext.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AudioSystem */ \"./node_modules/@akashic/akashic-engine/lib/AudioSystem.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AudioSystemManager */ \"./node_modules/@akashic/akashic-engine/lib/AudioSystemManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AudioUtil */ \"./node_modules/@akashic/akashic-engine/lib/AudioUtil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./BitmapFont */ \"./node_modules/@akashic/akashic-engine/lib/BitmapFont.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Camera */ \"./node_modules/@akashic/akashic-engine/lib/Camera.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Camera2D */ \"./node_modules/@akashic/akashic-engine/lib/Camera2D.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Collision */ \"./node_modules/@akashic/akashic-engine/lib/Collision.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DefaultLoadingScene */ \"./node_modules/@akashic/akashic-engine/lib/DefaultLoadingScene.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DefaultSkippingScene */ \"./node_modules/@akashic/akashic-engine/lib/DefaultSkippingScene.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DynamicAssetConfiguration */ \"./node_modules/@akashic/akashic-engine/lib/DynamicAssetConfiguration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DynamicFont */ \"./node_modules/@akashic/akashic-engine/lib/DynamicFont.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EntityStateFlags */ \"./node_modules/@akashic/akashic-engine/lib/EntityStateFlags.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Event */ \"./node_modules/@akashic/akashic-engine/lib/Event.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EventConverter */ \"./node_modules/@akashic/akashic-engine/lib/EventConverter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EventFilter */ \"./node_modules/@akashic/akashic-engine/lib/EventFilter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EventFilterController */ \"./node_modules/@akashic/akashic-engine/lib/EventFilterController.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EventIndex */ \"./node_modules/@akashic/akashic-engine/lib/EventIndex.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EventPriority */ \"./node_modules/@akashic/akashic-engine/lib/EventPriority.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ExceptionFactory */ \"./node_modules/@akashic/akashic-engine/lib/ExceptionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Font */ \"./node_modules/@akashic/akashic-engine/lib/Font.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GameMainParameterObject */ \"./node_modules/@akashic/akashic-engine/lib/GameMainParameterObject.js\"), exports);\n__exportStar(__webpack_require__(/*! ./InitialScene */ \"./node_modules/@akashic/akashic-engine/lib/InitialScene.js\"), exports);\n__exportStar(__webpack_require__(/*! ./InternalOperationPluginInfo */ \"./node_modules/@akashic/akashic-engine/lib/InternalOperationPluginInfo.js\"), exports);\n__exportStar(__webpack_require__(/*! ./LoadingScene */ \"./node_modules/@akashic/akashic-engine/lib/LoadingScene.js\"), exports);\n__exportStar(__webpack_require__(/*! ./LocalTickModeString */ \"./node_modules/@akashic/akashic-engine/lib/LocalTickModeString.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Matrix */ \"./node_modules/@akashic/akashic-engine/lib/Matrix.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Module */ \"./node_modules/@akashic/akashic-engine/lib/Module.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ModuleManager */ \"./node_modules/@akashic/akashic-engine/lib/ModuleManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./NinePatchSurfaceEffector */ \"./node_modules/@akashic/akashic-engine/lib/NinePatchSurfaceEffector.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Object2D */ \"./node_modules/@akashic/akashic-engine/lib/Object2D.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OperationPlugin */ \"./node_modules/@akashic/akashic-engine/lib/OperationPlugin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OperationPluginManager */ \"./node_modules/@akashic/akashic-engine/lib/OperationPluginManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OperationPluginOperation */ \"./node_modules/@akashic/akashic-engine/lib/OperationPluginOperation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OperationPluginStatic */ \"./node_modules/@akashic/akashic-engine/lib/OperationPluginStatic.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Player */ \"./node_modules/@akashic/akashic-engine/lib/Player.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PointEventResolver */ \"./node_modules/@akashic/akashic-engine/lib/PointEventResolver.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RandomGenerator */ \"./node_modules/@akashic/akashic-engine/lib/RandomGenerator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Require */ \"./node_modules/@akashic/akashic-engine/lib/Require.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RequireCacheable */ \"./node_modules/@akashic/akashic-engine/lib/RequireCacheable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RequireCachedValue */ \"./node_modules/@akashic/akashic-engine/lib/RequireCachedValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ScriptAssetContext */ \"./node_modules/@akashic/akashic-engine/lib/ScriptAssetContext.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ShaderProgram */ \"./node_modules/@akashic/akashic-engine/lib/ShaderProgram.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SnapshotSaveRequest */ \"./node_modules/@akashic/akashic-engine/lib/SnapshotSaveRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpriteFactory */ \"./node_modules/@akashic/akashic-engine/lib/SpriteFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SurfaceAtlas */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlas.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SurfaceAtlasSet */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSet.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SurfaceAtlasSlot */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceAtlasSlot.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SurfaceEffector */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceEffector.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SurfaceUtil */ \"./node_modules/@akashic/akashic-engine/lib/SurfaceUtil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TextAlign */ \"./node_modules/@akashic/akashic-engine/lib/TextAlign.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TextAlignString */ \"./node_modules/@akashic/akashic-engine/lib/TextAlignString.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TextMetrics */ \"./node_modules/@akashic/akashic-engine/lib/TextMetrics.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TickGenerationModeString */ \"./node_modules/@akashic/akashic-engine/lib/TickGenerationModeString.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Timer */ \"./node_modules/@akashic/akashic-engine/lib/Timer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TimerManager */ \"./node_modules/@akashic/akashic-engine/lib/TimerManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Util */ \"./node_modules/@akashic/akashic-engine/lib/Util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./VideoSystem */ \"./node_modules/@akashic/akashic-engine/lib/VideoSystem.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WeakRefKVS */ \"./node_modules/@akashic/akashic-engine/lib/WeakRefKVS.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Xorshift */ \"./node_modules/@akashic/akashic-engine/lib/Xorshift.js\"), exports);\n__exportStar(__webpack_require__(/*! ./XorshiftRandomGenerator */ \"./node_modules/@akashic/akashic-engine/lib/XorshiftRandomGenerator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Scene */ \"./node_modules/@akashic/akashic-engine/lib/Scene.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Game */ \"./node_modules/@akashic/akashic-engine/lib/Game.js\"), exports);\n//# sourceMappingURL=index.common.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/index.common.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/lib/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./index.common */ \"./node_modules/@akashic/akashic-engine/lib/index.common.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GameHandlerSet */ \"./node_modules/@akashic/akashic-engine/lib/GameHandlerSet.js\"), exports); // NOTE: コンテンツから参照する必要はない\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/lib/index.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetBundleConfiguration.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetBundleConfiguration.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetBundleConfiguration.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetConfiguration.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetConfiguration.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetConfiguration.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/GameConfiguration.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/GameConfiguration.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/GameConfiguration.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/OperationPluginInfo.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/OperationPluginInfo.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/OperationPluginInfo.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/index.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./AssetConfiguration */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetConfiguration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AssetBundleConfiguration */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/AssetBundleConfiguration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GameConfiguration */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/GameConfiguration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OperationPluginInfo */ \"./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/OperationPluginInfo.js\"), exports);\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/index.js?");

/***/ }),

/***/ "./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/utils/PathUtil.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/utils/PathUtil.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PathUtil = void 0;\n/**\n * パスユーティリティ。\n */\nvar PathUtil;\n(function (PathUtil) {\n    /**\n     * 二つのパス文字列をつなぎ、相対パス表現 (\".\", \"..\") を解決して返す。\n     * @param base 左辺パス文字列 (先頭の \"./\" を除き、\".\", \"..\" を含んではならない)\n     * @param path 右辺パス文字列\n     */\n    function resolvePath(base, path) {\n        function split(str) {\n            var ret = str.split(\"/\");\n            if (ret[ret.length - 1] === \"\")\n                ret.pop();\n            return ret;\n        }\n        if (path === \"\")\n            return base;\n        var baseComponents = PathUtil.splitPath(base);\n        var parts = split(baseComponents.path).concat(split(path));\n        var resolved = [];\n        for (var i = 0; i < parts.length; ++i) {\n            var part = parts[i];\n            switch (part) {\n                case \"..\":\n                    var popped = resolved.pop();\n                    if (popped === undefined || popped === \"\" || popped === \".\")\n                        throw new Error(\"PathUtil.resolvePath: invalid arguments\");\n                    break;\n                case \".\":\n                    if (resolved.length === 0) {\n                        resolved.push(\".\");\n                    }\n                    break;\n                case \"\": // 絶対パス\n                    resolved = [\"\"];\n                    break;\n                default:\n                    resolved.push(part);\n            }\n        }\n        return baseComponents.host + resolved.join(\"/\");\n    }\n    PathUtil.resolvePath = resolvePath;\n    /**\n     * パス文字列からディレクトリ名部分を切り出して返す。\n     * @param path パス文字列\n     */\n    function resolveDirname(path) {\n        var index = path.lastIndexOf(\"/\");\n        if (index === -1)\n            return path;\n        return path.substr(0, index);\n    }\n    PathUtil.resolveDirname = resolveDirname;\n    /**\n     * パス文字列から拡張子部分を切り出して返す。\n     * @param path パス文字列\n     */\n    function resolveExtname(path) {\n        for (var i = path.length - 1; i >= 0; --i) {\n            var c = path.charAt(i);\n            if (c === \".\") {\n                return path.substr(i);\n            }\n            else if (c === \"/\") {\n                return \"\";\n            }\n        }\n        return \"\";\n    }\n    PathUtil.resolveExtname = resolveExtname;\n    /**\n     * パス文字列から、node.js において require() の探索範囲になるパスの配列を作成して返す。\n     * @param path ディレクトリを表すパス文字列\n     */\n    function makeNodeModulePaths(path) {\n        var pathComponents = PathUtil.splitPath(path);\n        var host = pathComponents.host;\n        path = pathComponents.path;\n        if (path[path.length - 1] === \"/\") {\n            path = path.slice(0, path.length - 1);\n        }\n        var parts = path.split(\"/\");\n        var firstDir = parts.indexOf(\"node_modules\");\n        var root = firstDir > 0 ? firstDir - 1 : 0;\n        var dirs = [];\n        for (var i = parts.length - 1; i >= root; --i) {\n            if (parts[i] === \"node_modules\")\n                continue;\n            var dirParts = parts.slice(0, i + 1);\n            dirParts.push(\"node_modules\");\n            var dir = dirParts.join(\"/\");\n            dirs.push(host + dir);\n        }\n        return dirs;\n    }\n    PathUtil.makeNodeModulePaths = makeNodeModulePaths;\n    /**\n     * 与えられたパス文字列からホストを切り出す。\n     * @param path パス文字列\n     */\n    function splitPath(path) {\n        var host = \"\";\n        var doubleSlashIndex = path.indexOf(\"//\");\n        if (doubleSlashIndex >= 0) {\n            var hostSlashIndex = path.indexOf(\"/\", doubleSlashIndex + 2); // 2 === \"//\".length\n            if (hostSlashIndex >= 0) {\n                host = path.slice(0, hostSlashIndex);\n                path = path.slice(hostSlashIndex); // 先頭に \"/\" を残して絶対パス扱いさせる\n            }\n            else {\n                host = path;\n                path = \"/\"; // path全体がホストだったので、絶対パス扱いさせる\n            }\n        }\n        else {\n            host = \"\";\n        }\n        return { host: host, path: path };\n    }\n    PathUtil.splitPath = splitPath;\n})(PathUtil || (exports.PathUtil = PathUtil = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/akashic-engine/node_modules/@akashic/game-configuration/lib/utils/PathUtil.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/Asset.js":
/*!************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/Asset.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/Asset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/AssetLoadErrorType.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/AssetLoadErrorType.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AssetLoadErrorType = void 0;\n/**\n * アセット読み込み失敗時のエラーの種別。\n *\n * この値はあくまでもエラーメッセージ出力のための補助情報であり、\n * 網羅性・厳密性を追求したものではないことに注意。\n *\n * @deprecated 非推奨である。将来的に削除される。現在この型が必要な処理は存在しない。\n */\nvar AssetLoadErrorType;\n(function (AssetLoadErrorType) {\n    /**\n     * 明示されていない(以下のいずれかかもしれないし、そうでないかもしれない)。\n     */\n    AssetLoadErrorType[AssetLoadErrorType[\"Unspecified\"] = 0] = \"Unspecified\";\n    /**\n     * エンジンの再試行回数上限設定値を超えた。\n     */\n    AssetLoadErrorType[AssetLoadErrorType[\"RetryLimitExceeded\"] = 1] = \"RetryLimitExceeded\";\n    /**\n     * ネットワークエラー。タイムアウトなど。\n     */\n    AssetLoadErrorType[AssetLoadErrorType[\"NetworkError\"] = 2] = \"NetworkError\";\n    /**\n     * リクエストに問題があるエラー。HTTP 4XX など。\n     */\n    AssetLoadErrorType[AssetLoadErrorType[\"ClientError\"] = 3] = \"ClientError\";\n    /**\n     * サーバ側のエラー。HTTP 5XX など。\n     */\n    AssetLoadErrorType[AssetLoadErrorType[\"ServerError\"] = 4] = \"ServerError\";\n})(AssetLoadErrorType || (exports.AssetLoadErrorType = AssetLoadErrorType = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/AssetLoadErrorType.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAsset.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAsset.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAssetHint.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAssetHint.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAssetHint.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/audio/AudioPlayer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/audio/AudioPlayer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/audio/AudioPlayer.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/audio/AudioSystem.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/audio/AudioSystem.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/audio/AudioSystem.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/binary/BinaryAsset.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/binary/BinaryAsset.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/binary/BinaryAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/image/ImageAsset.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/image/ImageAsset.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/image/ImageAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/image/ImageAssetHint.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/image/ImageAssetHint.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/image/ImageAssetHint.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/script/Module.js":
/*!********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/script/Module.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/script/Module.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAsset.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAsset.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAssetRuntimeValue.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAssetRuntimeValue.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAssetRuntimeValue.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/text/TextAsset.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/text/TextAsset.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/text/TextAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAsset.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAsset.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAssetHint.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAssetHint.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAssetHint.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/video/VideoAsset.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/video/VideoAsset.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/video/VideoAsset.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/video/VideoPlayer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/video/VideoPlayer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/video/VideoPlayer.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/asset/video/VideoSystem.js":
/*!************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/asset/video/VideoSystem.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/asset/video/VideoSystem.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/commons.js":
/*!********************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/commons.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/commons.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/errors.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/font/FontFamily.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/font/FontFamily.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FontFamily = void 0;\n/**\n * 文字列描画のフォントファミリ。\n * @deprecated 非推奨である。将来的に削除される。代わりに文字列 `\"sans-serif\"`, `\"serif\"`, `\"monospace\"` を利用すること。\n */\nvar FontFamily;\n(function (FontFamily) {\n    /**\n     * サンセリフ体。ＭＳ Ｐゴシック等\n     */\n    FontFamily[FontFamily[\"SansSerif\"] = 0] = \"SansSerif\";\n    /**\n     * セリフ体。ＭＳ 明朝等\n     */\n    FontFamily[FontFamily[\"Serif\"] = 1] = \"Serif\";\n    /**\n     * 等幅。ＭＳ ゴシック等\n     */\n    FontFamily[FontFamily[\"Monospace\"] = 2] = \"Monospace\";\n})(FontFamily || (exports.FontFamily = FontFamily = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/font/FontFamily.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/font/FontWeight.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/font/FontWeight.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FontWeight = void 0;\n/**\n * フォントのウェイト。\n * @deprecated 非推奨である。将来的に削除される。代わりに `FontWeightString` を利用すること。\n */\nvar FontWeight;\n(function (FontWeight) {\n    /**\n     * 通常のフォントウェイト。\n     */\n    FontWeight[FontWeight[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * 太字のフォントウェイト。\n     */\n    FontWeight[FontWeight[\"Bold\"] = 1] = \"Bold\";\n})(FontWeight || (exports.FontWeight = FontWeight = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/font/FontWeight.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/font/FontWeightString.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/font/FontWeightString.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/font/FontWeightString.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/font/Glyph.js":
/*!***********************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/font/Glyph.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/font/Glyph.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/font/GlyphFactory.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/font/GlyphFactory.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/font/GlyphFactory.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./commons */ \"./node_modules/@akashic/pdi-types/lib/commons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@akashic/pdi-types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/CompositeOperation */ \"./node_modules/@akashic/pdi-types/lib/surface/CompositeOperation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/CompositeOperationString */ \"./node_modules/@akashic/pdi-types/lib/surface/CompositeOperationString.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/ImageData */ \"./node_modules/@akashic/pdi-types/lib/surface/ImageData.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/Renderer */ \"./node_modules/@akashic/pdi-types/lib/surface/Renderer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/ShaderProgram */ \"./node_modules/@akashic/pdi-types/lib/surface/ShaderProgram.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/ShaderUniform */ \"./node_modules/@akashic/pdi-types/lib/surface/ShaderUniform.js\"), exports);\n__exportStar(__webpack_require__(/*! ./surface/Surface */ \"./node_modules/@akashic/pdi-types/lib/surface/Surface.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/audio/AudioAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/audio/AudioPlayer */ \"./node_modules/@akashic/pdi-types/lib/asset/audio/AudioPlayer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/audio/AudioSystem */ \"./node_modules/@akashic/pdi-types/lib/asset/audio/AudioSystem.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/audio/AudioAssetHint */ \"./node_modules/@akashic/pdi-types/lib/asset/audio/AudioAssetHint.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/image/ImageAssetHint */ \"./node_modules/@akashic/pdi-types/lib/asset/image/ImageAssetHint.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/image/ImageAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/image/ImageAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/script/ScriptAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/script/Module */ \"./node_modules/@akashic/pdi-types/lib/asset/script/Module.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/script/ScriptAssetRuntimeValue */ \"./node_modules/@akashic/pdi-types/lib/asset/script/ScriptAssetRuntimeValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/text/TextAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/text/TextAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/video/VideoPlayer */ \"./node_modules/@akashic/pdi-types/lib/asset/video/VideoPlayer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/video/VideoSystem */ \"./node_modules/@akashic/pdi-types/lib/asset/video/VideoSystem.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/video/VideoAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/video/VideoAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/vector-image/VectorImageAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/vector-image/VectorImageAssetHint */ \"./node_modules/@akashic/pdi-types/lib/asset/vector-image/VectorImageAssetHint.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/binary/BinaryAsset */ \"./node_modules/@akashic/pdi-types/lib/asset/binary/BinaryAsset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/Asset */ \"./node_modules/@akashic/pdi-types/lib/asset/Asset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./asset/AssetLoadErrorType */ \"./node_modules/@akashic/pdi-types/lib/asset/AssetLoadErrorType.js\"), exports);\n__exportStar(__webpack_require__(/*! ./font/FontWeightString */ \"./node_modules/@akashic/pdi-types/lib/font/FontWeightString.js\"), exports);\n__exportStar(__webpack_require__(/*! ./font/FontWeight */ \"./node_modules/@akashic/pdi-types/lib/font/FontWeight.js\"), exports);\n__exportStar(__webpack_require__(/*! ./font/FontFamily */ \"./node_modules/@akashic/pdi-types/lib/font/FontFamily.js\"), exports);\n__exportStar(__webpack_require__(/*! ./font/Glyph */ \"./node_modules/@akashic/pdi-types/lib/font/Glyph.js\"), exports);\n__exportStar(__webpack_require__(/*! ./font/GlyphFactory */ \"./node_modules/@akashic/pdi-types/lib/font/GlyphFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/Looper */ \"./node_modules/@akashic/pdi-types/lib/platform/Looper.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/OperationPluginView */ \"./node_modules/@akashic/pdi-types/lib/platform/OperationPluginView.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/OperationPluginViewInfo */ \"./node_modules/@akashic/pdi-types/lib/platform/OperationPluginViewInfo.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/Platform */ \"./node_modules/@akashic/pdi-types/lib/platform/Platform.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/PlatformEventHandler */ \"./node_modules/@akashic/pdi-types/lib/platform/PlatformEventHandler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/PlatformPointEvent */ \"./node_modules/@akashic/pdi-types/lib/platform/PlatformPointEvent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/RendererCandidate */ \"./node_modules/@akashic/pdi-types/lib/platform/RendererCandidate.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/RendererRequirement */ \"./node_modules/@akashic/pdi-types/lib/platform/RendererRequirement.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/ResourceFactory */ \"./node_modules/@akashic/pdi-types/lib/platform/ResourceFactory.js\"), exports);\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/index.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/Looper.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/Looper.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/Looper.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/OperationPluginView.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/OperationPluginView.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/OperationPluginView.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/OperationPluginViewInfo.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/OperationPluginViewInfo.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/OperationPluginViewInfo.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/Platform.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/Platform.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/Platform.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/PlatformEventHandler.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/PlatformEventHandler.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/PlatformEventHandler.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/PlatformPointEvent.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/PlatformPointEvent.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/PlatformPointEvent.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/RendererCandidate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/RendererCandidate.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/RendererCandidate.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/RendererRequirement.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/RendererRequirement.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/RendererRequirement.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/platform/ResourceFactory.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/platform/ResourceFactory.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/platform/ResourceFactory.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/CompositeOperation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/CompositeOperation.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CompositeOperation = void 0;\n/**\n * 描画時の合成方法。\n * @deprecated 非推奨である。将来的に削除される。代わりに `CompositeOperationString` を利用すること。\n */\nvar CompositeOperation;\n(function (CompositeOperation) {\n    /**\n     * 先に描画された領域の上に描画する。\n     */\n    CompositeOperation[CompositeOperation[\"SourceOver\"] = 0] = \"SourceOver\";\n    /**\n     * 先に描画された領域と重なった部分のみを描画する。\n     */\n    CompositeOperation[CompositeOperation[\"SourceAtop\"] = 1] = \"SourceAtop\";\n    /**\n     * 先に描画された領域と重なった部分の色を加算して描画する。\n     */\n    CompositeOperation[CompositeOperation[\"Lighter\"] = 2] = \"Lighter\";\n    /**\n     * 先に描画された領域を全て無視して描画する。\n     */\n    CompositeOperation[CompositeOperation[\"Copy\"] = 3] = \"Copy\";\n    /**\n     * 先に描画された領域と重なった部分に描画を行い、それ以外の部分を透明にする。\n     * 環境により、描画結果が大きく異なる可能性があるため、試験的導入である。\n     */\n    CompositeOperation[CompositeOperation[\"ExperimentalSourceIn\"] = 4] = \"ExperimentalSourceIn\";\n    /**\n     * 先に描画された領域と重なっていない部分に描画を行い、それ以外の部分を透明にする。\n     * 環境により、描画結果が大きく異なる可能性があるため、試験的導入である。\n     */\n    CompositeOperation[CompositeOperation[\"ExperimentalSourceOut\"] = 5] = \"ExperimentalSourceOut\";\n    /**\n     * 描画する領域だけを表示し、先に描画された領域と重なった部分は描画先を表示する。\n     * 環境により、描画結果が大きく異なる可能性があるため、試験的導入である。\n     */\n    CompositeOperation[CompositeOperation[\"ExperimentalDestinationAtop\"] = 6] = \"ExperimentalDestinationAtop\";\n    /**\n     * 先に描画された領域と重なっていない部分を透明にし、重なった部分は描画先を表示する。\n     * 環境により、描画結果が大きく異なる可能性があるため、試験的導入である。\n     */\n    CompositeOperation[CompositeOperation[\"ExperimentalDestinationIn\"] = 7] = \"ExperimentalDestinationIn\";\n    /**\n     * 描画する領域を透明にする。\n     */\n    CompositeOperation[CompositeOperation[\"DestinationOut\"] = 8] = \"DestinationOut\";\n    /**\n     * 先に描画された領域の下に描画する。\n     */\n    CompositeOperation[CompositeOperation[\"DestinationOver\"] = 9] = \"DestinationOver\";\n    /**\n     * 先に描画された領域と重なった部分のみ透明にする。\n     */\n    CompositeOperation[CompositeOperation[\"Xor\"] = 10] = \"Xor\";\n    /**\n     * 先に描画された色とこれから描画する色との差分の絶対値を描画する。\n     * ただし、一部環境ではサポートしない。\n     */\n    CompositeOperation[CompositeOperation[\"Difference\"] = 11] = \"Difference\";\n    /**\n     * 先に描画された領域の明度と色相を維持し、重なっている部分の彩度を採用する。\n     * ただし、一部環境ではサポートしない。\n    */\n    CompositeOperation[CompositeOperation[\"Saturation\"] = 12] = \"Saturation\";\n})(CompositeOperation || (exports.CompositeOperation = CompositeOperation = {}));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/CompositeOperation.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/CompositeOperationString.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/CompositeOperationString.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/CompositeOperationString.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/ImageData.js":
/*!******************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/ImageData.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/ImageData.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/Renderer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/Renderer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/Renderer.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/ShaderProgram.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/ShaderProgram.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/ShaderProgram.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/ShaderUniform.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/ShaderUniform.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/ShaderUniform.js?");

/***/ }),

/***/ "./node_modules/@akashic/pdi-types/lib/surface/Surface.js":
/*!****************************************************************!*\
  !*** ./node_modules/@akashic/pdi-types/lib/surface/Surface.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/pdi-types/lib/surface/Surface.js?");

/***/ }),

/***/ "./node_modules/@akashic/trigger/lib/ChainTrigger.js":
/*!***********************************************************!*\
  !*** ./node_modules/@akashic/trigger/lib/ChainTrigger.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ChainTrigger = void 0;\nconst Trigger_js_1 = __webpack_require__(/*! ./Trigger.js */ \"./node_modules/@akashic/trigger/lib/Trigger.js\");\n/**\n * 他のTriggerLikeに反応して発火するイベント通知機構。\n */\nclass ChainTrigger extends Trigger_js_1.Trigger {\n    /**\n     * `ChainTrigger` のインスタンスを生成する。\n     *\n     * このインスタンスは、 `chain` がfireされたときに `filter` を実行し、真を返した場合に自身をfireする。\n     * @param chain このインスタンスがfireするきっかけとなる TriggerLike\n     * @param filter `chain` がfireされたときに実行される関数。省略された場合、または本関数の戻り値が真の場合、このインスタンスをfireする。\n     * @param filterOwner `filter` 呼び出し時に使われる `this` の値。\n     */\n    constructor(chain, filter, filterOwner) {\n        super();\n        this.chain = chain;\n        this.filter = filter != null ? filter : null;\n        this.filterOwner = filterOwner;\n        this._isActivated = false;\n    }\n    add(paramsOrHandler, owner) {\n        super.add(paramsOrHandler, owner);\n        if (!this._isActivated) {\n            this.chain.add(this._onChainTriggerFired, this);\n            this._isActivated = true;\n        }\n    }\n    addOnce(paramsOrHandler, owner) {\n        super.addOnce(paramsOrHandler, owner);\n        if (!this._isActivated) {\n            this.chain.add(this._onChainTriggerFired, this);\n            this._isActivated = true;\n        }\n    }\n    remove(paramsOrFunc, owner) {\n        super.remove(paramsOrFunc, owner);\n        if (this.length === 0 && this._isActivated) {\n            this.chain.remove(this._onChainTriggerFired, this);\n            this._isActivated = false;\n        }\n    }\n    removeAll(params) {\n        super.removeAll(params);\n        if (this.length === 0 && this._isActivated) {\n            this.chain.remove(this._onChainTriggerFired, this);\n            this._isActivated = false;\n        }\n    }\n    destroy() {\n        super.destroy();\n        this.chain.remove(this._onChainTriggerFired, this);\n        this.filter = null;\n        this.filterOwner = null;\n        this._isActivated = false;\n    }\n    /**\n     * @private\n     */\n    _onChainTriggerFired(args) {\n        if (!this.filter || this.filter.call(this.filterOwner, args)) {\n            this.fire(args);\n        }\n    }\n}\nexports.ChainTrigger = ChainTrigger;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/trigger/lib/ChainTrigger.js?");

/***/ }),

/***/ "./node_modules/@akashic/trigger/lib/ChainTriggerLike.js":
/*!***************************************************************!*\
  !*** ./node_modules/@akashic/trigger/lib/ChainTriggerLike.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/trigger/lib/ChainTriggerLike.js?");

/***/ }),

/***/ "./node_modules/@akashic/trigger/lib/Trigger.js":
/*!******************************************************!*\
  !*** ./node_modules/@akashic/trigger/lib/Trigger.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Trigger = void 0;\nconst isPromise_js_1 = __webpack_require__(/*! ./isPromise.js */ \"./node_modules/@akashic/trigger/lib/isPromise.js\");\n/**\n * イベント通知機構クラス。\n */\nclass Trigger {\n    constructor() {\n        this._handlers = [];\n        this.length = 0;\n    }\n    add(paramsOrFunc, owner) {\n        if (typeof paramsOrFunc === \"function\") {\n            this._addHandler({\n                func: paramsOrFunc,\n                owner,\n                once: false,\n                name: undefined,\n                filter: undefined,\n            });\n        }\n        else {\n            const params = paramsOrFunc;\n            const index = typeof params.index === \"number\" ? params.index : undefined;\n            this._addHandler({\n                func: params.func,\n                owner: params.owner,\n                once: false,\n                name: params.name,\n                filter: params.filter,\n            }, index);\n        }\n        this.length = this._handlers.length;\n    }\n    addOnce(paramsOrFunc, owner) {\n        if (typeof paramsOrFunc === \"function\") {\n            this._addHandler({\n                func: paramsOrFunc,\n                owner,\n                once: true,\n                name: undefined,\n                filter: undefined,\n            });\n        }\n        else {\n            const params = paramsOrFunc;\n            const index = typeof params.index === \"number\" ? params.index : undefined;\n            this._addHandler({\n                func: params.func,\n                owner: params.owner,\n                once: true,\n                name: params.name,\n                filter: params.filter\n            }, index);\n        }\n        this.length = this._handlers.length;\n    }\n    /**\n     * このTriggerにハンドラを追加する。\n     * @deprecated 互換性のために残されている。代わりに `add()` を利用すべきである。\n     */\n    handle(owner, func, name) {\n        this.add(func ? { owner, func, name } : { func: owner });\n    }\n    /**\n     * このTriggerを発火する。\n     *\n     * 登録された全ハンドラの関数を、引数 `arg` を与えて呼び出す。\n     * 呼び出し後、次のいずれかの条件を満たす全ハンドラの登録は解除される。\n     * * ハンドラが `addOnce()` で登録されていた場合\n     * * ハンドラが `add()` で登録される際に `once: true` オプションが与えられていた場合\n     * * ハンドラが Promise 以外の truthy な値を返した場合\n     *\n     * @param arg ハンドラに与えられる引数\n     */\n    fire(arg) {\n        if (!this._handlers || !this._handlers.length)\n            return;\n        const handlers = this._handlers.concat();\n        for (let i = 0; i < handlers.length; i++) {\n            const handler = handlers[i];\n            if (handler.filter && !handler.filter(handler))\n                continue;\n            const ret = handler.func.call(handler.owner, arg);\n            const returnedTruthy = !(0, isPromise_js_1.isPromise)(ret) && !!ret;\n            if (returnedTruthy || handler.once) {\n                if (!this._handlers)\n                    continue;\n                const index = this._handlers.indexOf(handler);\n                if (index !== -1)\n                    this._handlers.splice(index, 1);\n            }\n        }\n        if (this._handlers != null)\n            this.length = this._handlers.length;\n    }\n    contains(paramsOrFunc, owner) {\n        const condition = typeof paramsOrFunc === \"function\" ? { func: paramsOrFunc, owner } : paramsOrFunc;\n        for (let i = 0; i < this._handlers.length; i++) {\n            if (this._comparePartial(condition, this._handlers[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    remove(paramsOrFunc, owner) {\n        const condition = typeof paramsOrFunc === \"function\" ? { func: paramsOrFunc, owner } : paramsOrFunc;\n        for (let i = 0; i < this._handlers.length; i++) {\n            const handler = this._handlers[i];\n            if (condition.func === handler.func &&\n                condition.owner === handler.owner &&\n                condition.name === handler.name &&\n                condition.filter === handler.filter) {\n                this._handlers.splice(i, 1);\n                --this.length;\n                return;\n            }\n        }\n    }\n    /**\n     * 指定した条件に部分一致するイベントハンドラを削除する。\n     *\n     * 本メソッドは引数に与えた条件に一致したイベントハンドラを全て削除する。\n     * 引数の条件を一部省略した場合、その値の内容が登録時と異なっていても対象のイベントハンドラは削除される。\n     * 引数に与えた条件と完全に一致したイベントハンドラのみを削除したい場合は `this.remove()` を用いる。\n     * 引数を省略した場合は全てのイベントハンドラを削除する。\n     *\n     * @param params 削除するイベントハンドラの条件\n     */\n    removeAll(params) {\n        const handlers = [];\n        if (params) {\n            for (let i = 0; i < this._handlers.length; i++) {\n                const handler = this._handlers[i];\n                if (!this._comparePartial(params, handler)) {\n                    handlers.push(handler);\n                }\n            }\n        }\n        this._handlers = handlers;\n        this.length = this._handlers.length;\n    }\n    /**\n     * このTriggerを破棄する。\n     */\n    destroy() {\n        this._handlers = null;\n        this.length = null;\n    }\n    /**\n     * このTriggerが破棄されているかを返す。\n     */\n    destroyed() {\n        return this._handlers === null;\n    }\n    /**\n     * @private\n     */\n    _addHandler(params, index) {\n        if (index == null) {\n            this._handlers.push({\n                func: params.func,\n                owner: params.owner,\n                once: params.once,\n                name: params.name,\n                filter: params.filter,\n            });\n        }\n        else {\n            this._handlers.splice(index, 0, {\n                func: params.func,\n                owner: params.owner,\n                once: params.once,\n                name: params.name,\n                filter: params.filter,\n            });\n        }\n    }\n    /**\n     * @private\n     */\n    _comparePartial(target, compare) {\n        if (target.func !== undefined && target.func !== compare.func)\n            return false;\n        if (target.owner !== undefined && target.owner !== compare.owner)\n            return false;\n        if (target.name !== undefined && target.name !== compare.name)\n            return false;\n        if (target.filter !== undefined && target.filter !== compare.filter)\n            return false;\n        return true;\n    }\n}\nexports.Trigger = Trigger;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/trigger/lib/Trigger.js?");

/***/ }),

/***/ "./node_modules/@akashic/trigger/lib/TriggerLike.js":
/*!**********************************************************!*\
  !*** ./node_modules/@akashic/trigger/lib/TriggerLike.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/trigger/lib/TriggerLike.js?");

/***/ }),

/***/ "./node_modules/@akashic/trigger/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@akashic/trigger/lib/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./TriggerLike.js */ \"./node_modules/@akashic/trigger/lib/TriggerLike.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ChainTriggerLike.js */ \"./node_modules/@akashic/trigger/lib/ChainTriggerLike.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Trigger.js */ \"./node_modules/@akashic/trigger/lib/Trigger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ChainTrigger.js */ \"./node_modules/@akashic/trigger/lib/ChainTrigger.js\"), exports);\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/trigger/lib/index.js?");

/***/ }),

/***/ "./node_modules/@akashic/trigger/lib/isPromise.js":
/*!********************************************************!*\
  !*** ./node_modules/@akashic/trigger/lib/isPromise.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isPromise = void 0;\nfunction isPromise(target) {\n    return (target != null &&\n        (typeof target === \"object\" || typeof target === \"function\") &&\n        typeof target.then === \"function\");\n}\nexports.isPromise = isPromise;\n\n\n//# sourceURL=webpack://akashic-template/./node_modules/@akashic/trigger/lib/isPromise.js?");

/***/ }),

/***/ "./src/button.ts":
/*!***********************!*\
  !*** ./src/button.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Button = void 0;\r\nvar Button = /** @class */ (function (_super) {\r\n    __extends(Button, _super);\r\n    function Button(scene, src, width, height) {\r\n        var _this = _super.call(this, {\r\n            scene: scene,\r\n            src: src,\r\n            height: width,\r\n            width: height,\r\n            frameNumber: 0,\r\n            frames: [0, 1, 2],\r\n            touchable: true,\r\n        }) || this;\r\n        _this.onClick = new g.Trigger();\r\n        _this.onPointUp.add(function () {\r\n            _this.onClick.fire();\r\n        });\r\n        return _this;\r\n    }\r\n    return Button;\r\n}(g.FrameSprite));\r\nexports.Button = Button;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/button.ts?");

/***/ }),

/***/ "./src/flow/flowManager.ts":
/*!*********************************!*\
  !*** ./src/flow/flowManager.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FlowManager = exports.FlowEventName = void 0;\r\nvar startStage_1 = __webpack_require__(/*! ../startStage */ \"./src/startStage.ts\");\r\nvar mainStage_1 = __webpack_require__(/*! ../mainStage */ \"./src/mainStage.ts\");\r\nvar step_1 = __webpack_require__(/*! ./steps/step */ \"./src/flow/steps/step.ts\");\r\nvar FlowEventName;\r\n(function (FlowEventName) {\r\n    FlowEventName[FlowEventName[\"Test\"] = 0] = \"Test\";\r\n    FlowEventName[FlowEventName[\"GameLoad\"] = 1] = \"GameLoad\";\r\n    FlowEventName[FlowEventName[\"GotoMainStage\"] = 2] = \"GotoMainStage\";\r\n})(FlowEventName = exports.FlowEventName || (exports.FlowEventName = {}));\r\nvar FlowManager = /** @class */ (function () {\r\n    function FlowManager() {\r\n        this.loop = {};\r\n    }\r\n    FlowManager.prototype.fire = function (eventName, sender) {\r\n        if (sender === void 0) { sender = undefined; }\r\n        //console.log('fire ', eventName);\r\n        this.loop[eventName.toString()] = false;\r\n        for (var i = 0; i < this.flows.length; i++) {\r\n            if (this.flows[i].eventName == eventName) {\r\n                if (this.currentFlow.includes(this.flows[i])) {\r\n                    console.error('Push flow but already exist! ', this.flows[i]);\r\n                }\r\n                else {\r\n                    this.flows[i].stepIndex = 0;\r\n                    this.currentFlow.push(this.flows[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    FlowManager.prototype.fireLoop = function (eventName, sender) {\r\n        if (sender === void 0) { sender = undefined; }\r\n        this.fire(eventName, sender);\r\n        this.loop[eventName.toString()] = true;\r\n    };\r\n    FlowManager.prototype.onUpdate = function () {\r\n        //console.log('L ', this.currentFlow.length);\r\n        for (var i = 0; i < this.currentFlow.length; i++) {\r\n            var tmp = 0;\r\n            while (true) {\r\n                tmp++;\r\n                if (tmp == 100) {\r\n                    console.error('??');\r\n                    break;\r\n                }\r\n                if (this.currentFlow[i].steps.length == 0) {\r\n                    this.currentFlow.splice(i, 1);\r\n                    break;\r\n                }\r\n                step_1.BaseStep.runIndex = this.currentFlow[i].stepIndex;\r\n                this.currentFlow[i].steps[this.currentFlow[i].stepIndex].onStep(this.currentFlow[i].eventName);\r\n                if (step_1.BaseStep.runIndex == 0) {\r\n                    FlowManager.eventName = this.currentFlow[i].eventName;\r\n                }\r\n                if (step_1.BaseStep.runIndex == step_1.BaseStep.runNextNextFrame) {\r\n                    step_1.BaseStep.runIndex++;\r\n                }\r\n                if (step_1.BaseStep.runIndex == step_1.BaseStep.runThisNextFrame) {\r\n                    break;\r\n                }\r\n                if (step_1.BaseStep.runIndex == this.currentFlow[i].steps.length) {\r\n                    if (this.loop[FlowManager.eventName]) {\r\n                        step_1.BaseStep.runIndex = 0;\r\n                    }\r\n                    else {\r\n                        this.currentFlow.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                this.currentFlow[i].stepIndex = step_1.BaseStep.runIndex;\r\n            }\r\n        }\r\n    };\r\n    FlowManager.prototype.setupFlow = function () {\r\n        this.flows = [];\r\n        this.currentFlow = [];\r\n        var uiMainStageStep = new mainStage_1.mainStage();\r\n        var uiMainMenuStep = new startStage_1.startStage();\r\n        //FlowEventName.GameLoad\r\n        var flowLoad = new step_1.Flow(FlowEventName.GameLoad);\r\n        flowLoad.steps.push(uiMainStageStep);\r\n        flowLoad.steps.push(uiMainMenuStep);\r\n        this.flows.push(flowLoad);\r\n        //FlowEventName.Test\r\n        var flowTest = new step_1.Flow(FlowEventName.Test);\r\n        this.flows.push(flowTest);\r\n        //FlowEventName.GotoMainStage\r\n        var flowGotoMainStage = new step_1.Flow(FlowEventName.GotoMainStage);\r\n        flowGotoMainStage.steps.push(uiMainMenuStep);\r\n        flowGotoMainStage.steps.push(uiMainStageStep);\r\n        this.flows.push(flowGotoMainStage);\r\n    };\r\n    return FlowManager;\r\n}());\r\nexports.FlowManager = FlowManager;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/flow/flowManager.ts?");

/***/ }),

/***/ "./src/flow/steps/step.ts":
/*!********************************!*\
  !*** ./src/flow/steps/step.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Step2 = exports.Step1 = exports.Flow = exports.BaseStep = void 0;\r\nvar helper_1 = __webpack_require__(/*! ../../helper */ \"./src/helper.ts\");\r\nvar flowManager_1 = __webpack_require__(/*! ../flowManager */ \"./src/flow/flowManager.ts\");\r\nvar BaseStep = /** @class */ (function () {\r\n    function BaseStep() {\r\n    }\r\n    BaseStep.prototype.onLoad = function () { };\r\n    BaseStep.prototype.onUpdate = function () { };\r\n    BaseStep.prototype.onStep = function (eventName) {\r\n        console.log('onstep');\r\n    };\r\n    BaseStep.prototype.runThisNextFrame = function () {\r\n        BaseStep.runIndex = BaseStep.runThisNextFrame;\r\n    };\r\n    BaseStep.prototype.runNext = function () {\r\n        BaseStep.runIndex++;\r\n    };\r\n    BaseStep.runThisNextFrame = -1;\r\n    BaseStep.runNextNextFrame = -2;\r\n    return BaseStep;\r\n}());\r\nexports.BaseStep = BaseStep;\r\nvar Flow = /** @class */ (function () {\r\n    function Flow(eventName) {\r\n        this.stepIndex = 0;\r\n        this.steps = [];\r\n        this.eventName = eventName;\r\n    }\r\n    return Flow;\r\n}());\r\nexports.Flow = Flow;\r\nvar Step1 = /** @class */ (function (_super) {\r\n    __extends(Step1, _super);\r\n    function Step1() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.t = 0;\r\n        return _this;\r\n    }\r\n    Step1.prototype.onStep = function (eventName) {\r\n        switch (eventName) {\r\n            case flowManager_1.FlowEventName.GameLoad:\r\n                var bg = helper_1.Helper.newSprite('/assets/back_living.png');\r\n                g.game.scene().append(bg);\r\n                //\r\n                //this.spr = Helper.newSpite('/assets/omikuji-a.png');\r\n                //this.spr.touchable = true;\r\n                //this.spr.onPointDown.add(() => {\r\n                //\tconsole.log('1111111');\r\n                //});\r\n                //g.game.scene().append(this.spr)\r\n                //console.log('a1');\r\n                //\r\n                this.runNext();\r\n                break;\r\n            case flowManager_1.FlowEventName.Test:\r\n                this.t++;\r\n                if (this.t != 50) {\r\n                    this.runThisNextFrame();\r\n                    //this.spr.moveBy(1, 0)\r\n                    //this.spr.modified();\r\n                }\r\n                else {\r\n                    this.t = 0;\r\n                    this.runNext();\r\n                }\r\n                break;\r\n        }\r\n        //console.log('step 1, t = ', this.t);\r\n    };\r\n    Step1.prototype.test = function () {\r\n        var _this = this;\r\n        var url = \"http://localhost/tmpimgs/bag.png\";\r\n        var assetId = \"dynamicImage\";\r\n        var scene = g.game.scene();\r\n        var handler = {\r\n            _onAssetLoad: function (asset) {\r\n                console.log(\"Asset loaded:\", asset);\r\n                if (asset.type === \"image\") {\r\n                    var imageAsset = asset;\r\n                    var sprite = new g.Sprite({\r\n                        scene: scene,\r\n                        x: 0,\r\n                        y: 4,\r\n                        src: imageAsset,\r\n                        width: imageAsset.width,\r\n                        height: imageAsset.height,\r\n                        //width: 1000,\r\n                        //height: 1000,\r\n                    });\r\n                    console.log('srw ', sprite.srcWidth);\r\n                    console.log('w ', sprite.width);\r\n                    sprite.touchable = true;\r\n                    sprite.onPointDown.add(function (e) {\r\n                        console.log('SPR');\r\n                    });\r\n                    scene.append(sprite);\r\n                }\r\n                //\r\n                _this.testAddDiv();\r\n            },\r\n            _onAssetError: function (asset, error) {\r\n                console.error(\"Failed to load asset:\", asset, error);\r\n            },\r\n        };\r\n        g.game._assetManager.requestAssets([\r\n            {\r\n                id: assetId,\r\n                type: \"image\",\r\n                uri: url,\r\n                width: 200,\r\n                height: 8100,\r\n            },\r\n        ], handler);\r\n    };\r\n    Step1.prototype.testAddDiv = function () {\r\n        var d = document.getElementById('container');\r\n        /*//d = document.body;\r\n        const newDiv = document.createElement(\"div\");\r\n        newDiv.innerHTML = 'This is an icon <img src=\"https://sample-videos.com/img/Sample-png-image-200kb.png\" alt=\"icon\" style=\"vertical-align: middle; width: 20px; height: 20px;\"> with text';\r\n        newDiv.classList.add(\"my-class\");\r\n        newDiv.id = \"my-new-div\";\r\n        newDiv.style.margin = \"auto\"\r\n        newDiv.style.fontSize = \"30px\"\r\n        newDiv.style.background = \"rgba(51, 170, 51, .4)\"\r\n        //d.appendChild(newDiv);\r\n\r\n        newDiv.style.position = \"absolute\";\r\n        //newDiv.style.left = Number(d.offsetWidth) / 2 + 'px';\r\n        //newDiv.style.top = Number(d.offsetHeight) / 2 + 'px';\r\n        console.log('H ', d.style.height);\r\n        //*/\r\n        var button = document.createElement('button');\r\n        //button.classList.add('grid-button');\r\n        button.style.position = \"absolute\";\r\n        button.style.margin = \"auto\";\r\n        button.style.fontSize = \"30px\";\r\n        button.style.background = \"rgba(51, 170, 51, .4)\";\r\n        d.appendChild(button);\r\n        button.style.left = 110 + 'px';\r\n        button.style.top = Number(d.offsetHeight) - 50 + 'px';\r\n        button.innerHTML = \"Button \".concat(1 + 1);\r\n        button.addEventListener('click', function () {\r\n            console.log('clicked');\r\n        });\r\n        //\r\n        var panel = document.createElement('div');\r\n        panel.style.position = \"absolute\";\r\n        panel.style.left = Number(d.offsetWidth) - 200 + 'px';\r\n        panel.style.top = 10 + 'px';\r\n        panel.innerHTML = \"\\n\\t\\t<h1>The select element</h1>\\n\\t\\t<p>The select element is used to create a drop-down list.</p>\\n\\t\\t<form action=\\\"/action_page.php\\\">\\n\\t\\t  <label for=\\\"cars\\\">Choose a car:</label>\\n\\t\\t  <select name=\\\"cars\\\" id=\\\"cars\\\">\\n\\t\\t\\t<option value=\\\"volvo\\\">Volvo</option>\\n\\t\\t\\t<option value=\\\"saab\\\">Saab</option>\\n\\t\\t\\t<option value=\\\"opel\\\">Opel</option>\\n\\t\\t\\t<option value=\\\"audi\\\">Audi</option>\\n\\t\\t  </select>\\n\\t\\t  <br><br>\\n\\t\\t  <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n\\t\\t</form>\\n\\t\\t<p>Click the \\\"Submit\\\" button and the form-data will be sent to a page on the\\n\\t\\tserver called \\\"action_page.php\\\".</p>\\n\";\r\n        d.appendChild(panel);\r\n    };\r\n    return Step1;\r\n}(BaseStep));\r\nexports.Step1 = Step1;\r\nvar Step2 = /** @class */ (function (_super) {\r\n    __extends(Step2, _super);\r\n    function Step2() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Step2.prototype.onStep = function (eventName) {\r\n        switch (eventName) {\r\n            case flowManager_1.FlowEventName.GameLoad:\r\n                this.runNext();\r\n                break;\r\n            case flowManager_1.FlowEventName.Test:\r\n                console.log('step2');\r\n                this.runNext();\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n    return Step2;\r\n}(BaseStep));\r\nexports.Step2 = Step2;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/flow/steps/step.ts?");

/***/ }),

/***/ "./src/helper.ts":
/*!***********************!*\
  !*** ./src/helper.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Helper = void 0;\r\nvar akashic_timeline_1 = __webpack_require__(/*! @akashic-extension/akashic-timeline */ \"./node_modules/@akashic-extension/akashic-timeline/lib/index.js\");\r\nvar al = __importStar(__webpack_require__(/*! @akashic-extension/akashic-label */ \"./node_modules/@akashic-extension/akashic-label/lib/index.js\"));\r\nvar akashic_engine_1 = __webpack_require__(/*! @akashic/akashic-engine */ \"./node_modules/@akashic/akashic-engine/index.js\");\r\nvar Helper = /** @class */ (function () {\r\n    function Helper() {\r\n    }\r\n    Object.defineProperty(Helper, \"getFont\", {\r\n        get: function () {\r\n            if (Helper.font == undefined) {\r\n                Helper.font = new g.DynamicFont({\r\n                    game: g.game,\r\n                    fontFamily: \"sans-serif\",\r\n                    size: 60,\r\n                    fontWeight: \"bold\",\r\n                });\r\n            }\r\n            return Helper.font;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Helper, \"isMobile\", {\r\n        get: function () {\r\n            return /Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop|Fennec|BlackBerry|BB10|PlayBook|Silk/.test(navigator.userAgent);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Helper.rectContain = function (rect, x, y) {\r\n        return x > rect.left && x < rect.right && y < rect.bottom && y > rect.top;\r\n    };\r\n    Helper.animYCard = function (e, y) {\r\n        var tl = new akashic_timeline_1.Timeline(g.game.scene());\r\n        var tw = tl.create(e);\r\n        tw.moveY(y, 300, akashic_timeline_1.Easing.easeInOutBack);\r\n    };\r\n    Helper.delayCall = function (callback, delay) {\r\n        setTimeout(callback, delay);\r\n    };\r\n    Helper.delayCallAsync = function (callback, delay) {\r\n        return new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                callback();\r\n                resolve();\r\n            }, delay);\r\n        });\r\n    };\r\n    Helper.moveToAsync = function (e, x, y, time, easing) {\r\n        var tl = new akashic_timeline_1.Timeline(g.game.scene());\r\n        var tw = tl.create(e);\r\n        tw.moveTo(x, y, time, easing);\r\n        return new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                resolve(undefined);\r\n            }, time);\r\n        });\r\n    };\r\n    Helper.crossSprite = function (newSprite, current) {\r\n        var tl = new akashic_timeline_1.Timeline(g.game.scene());\r\n        var tw = tl.create(newSprite);\r\n        tw.every(function (e, p) {\r\n            newSprite.opacity = p;\r\n            current.opacity = 1 - p;\r\n        }, 1000);\r\n        return new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                resolve(undefined);\r\n            }, 1000);\r\n        });\r\n    };\r\n    Helper.fadeInAsync = function (e, time) {\r\n        var tl = new akashic_timeline_1.Timeline(g.game.scene());\r\n        var tw = tl.create(e);\r\n        tw.fadeOut(0);\r\n        tw.fadeIn(time);\r\n        return new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                resolve(undefined);\r\n            }, time);\r\n        });\r\n    };\r\n    Helper.fadeOutAsync = function (e, time) {\r\n        var tl = new akashic_timeline_1.Timeline(g.game.scene());\r\n        var tw = tl.create(e);\r\n        tw.fadeOut(time);\r\n        return new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                resolve(undefined);\r\n            }, time);\r\n        });\r\n    };\r\n    Helper.scalePingpong = function (e, value, time) {\r\n        var tl = new akashic_timeline_1.Timeline(g.game.scene());\r\n        var tw = tl.create(e);\r\n        var curScale = e.scaleX;\r\n        tw.scaleTo(value, value, time).call(function () {\r\n            tw.scaleTo(curScale, curScale, time);\r\n        });\r\n    };\r\n    Helper.waitAsync = function (time) {\r\n        return new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                resolve(undefined);\r\n            }, time);\r\n        });\r\n    };\r\n    Helper.newSprite9Slice = function (path, width, height, borderWidth) {\r\n        var scene = g.game.scene();\r\n        var destSurface = g.game.resourceFactory.createSurface(width, height);\r\n        var srcSurface = g.SurfaceUtil.asSurface(scene.asset.getImage(path));\r\n        g.SurfaceUtil.drawNinePatch(destSurface, srcSurface, borderWidth);\r\n        return new g.Sprite({\r\n            scene: scene,\r\n            src: destSurface,\r\n        });\r\n    };\r\n    Helper.midAlignWithX = function (all, x, offset) {\r\n        var totalWidth = all.reduce(function (acc, rect) { return acc + rect.width; }, 0) + (all.length - 1) * offset;\r\n        var startX = x - totalWidth / 2;\r\n        var curX = startX;\r\n        all.map(function (rect) {\r\n            var pos = { x: curX + rect.width / 2, y: 1 };\r\n            curX += rect.width + offset;\r\n            rect.x = pos.x;\r\n            rect.modified();\r\n        });\r\n    };\r\n    Helper.newSprite = function (path) {\r\n        var scene = g.game.scene();\r\n        var spr = new g.Sprite({\r\n            scene: scene,\r\n            src: scene.asset.getImage(path)\r\n        });\r\n        return spr;\r\n    };\r\n    Helper.getIdWithoutHardMark = function (id) {\r\n        var idxh = id.lastIndexOf(')');\r\n        if (idxh > 0) {\r\n            return id.substr(idxh + 1);\r\n        }\r\n        var idx2 = id.lastIndexOf(']');\r\n        if (idx2 > 0) {\r\n            return id.substr(idx2 + 1);\r\n        }\r\n        return id;\r\n    };\r\n    Helper.checkMissionIsHard = function (id) {\r\n        return id.indexOf('(') >= 0;\r\n    };\r\n    Helper.checkMissionHasHint = function (id) {\r\n        return id.startsWith('[');\r\n    };\r\n    //eg: ????@どーなつ => どーなつ\r\n    Helper.getMissionWorWithoutMarkHide = function (miss) {\r\n        var idx = miss.indexOf('@');\r\n        if (idx > 0) {\r\n            return miss.substring(idx + 1);\r\n        }\r\n        return miss;\r\n    };\r\n    Helper.getMisHint = function (id) {\r\n        if (id.startsWith('[')) {\r\n            var start = id.indexOf('[');\r\n            var end = id.indexOf(']');\r\n            var inn = id.indexOf('@');\r\n            var hint = id.substring(start + 1, inn);\r\n            var count = Number(id.substring(inn + 1, end));\r\n            return { hint: hint, count: count };\r\n        }\r\n        return undefined;\r\n    };\r\n    Helper.newLable = function (text) {\r\n        var scene = g.game.scene();\r\n        var lab = new g.Label({\r\n            scene: scene,\r\n            font: Helper.getFont,\r\n            fontSize: 30,\r\n            textAlign: akashic_engine_1.TextAlign.Left,\r\n            widthAutoAdjust: true,\r\n            text: text\r\n        });\r\n        return lab;\r\n    };\r\n    Helper.newalLable = function (text) {\r\n        var scene = g.game.scene();\r\n        var lab = new al.Label({\r\n            scene: scene,\r\n            font: Helper.getFont,\r\n            fontSize: 30,\r\n            width: 2000,\r\n            textAlign: akashic_engine_1.TextAlign.Left,\r\n            lineBreak: true,\r\n            widthAutoAdjust: true,\r\n            text: text\r\n        });\r\n        return lab;\r\n    };\r\n    Helper.insertNewlines = function (str, everyN) {\r\n        var result = '';\r\n        for (var i = 0; i < str.length; i += everyN) {\r\n            result += str.slice(i, i + everyN) + '\\n';\r\n        }\r\n        return result;\r\n    };\r\n    Helper.destroyObject = function (obj) {\r\n        if (obj != undefined && obj.destroyed() == false) {\r\n            if (obj.parent != undefined && obj.parent.destroyed() == false) {\r\n                obj.parent.remove(obj);\r\n            }\r\n            obj.destroy();\r\n        }\r\n    };\r\n    Helper.lerp = function (start, end, t) {\r\n        return start + (end - start) * t;\r\n    };\r\n    Helper.insertBefore = function (before, e) {\r\n        var newChildren = [];\r\n        var children = g.game.scene().children;\r\n        for (var i = children.length - 1; i >= 0; i--) {\r\n            if (children[i] == e) {\r\n                continue;\r\n            }\r\n            newChildren.push(children[i]);\r\n            if (children[i] == before) {\r\n                newChildren.push(e);\r\n            }\r\n        }\r\n        g.game.scene().children = newChildren.reverse();\r\n    };\r\n    //todo: not test!\r\n    Helper.insertAfter = function (after, e) {\r\n        var newChildren = [];\r\n        var children = g.game.scene().children;\r\n        for (var i = 0; i < children.length; i++) {\r\n            if (children[i] == e) {\r\n                continue;\r\n            }\r\n            newChildren.push(children[i]);\r\n            if (children[i] == after) {\r\n                newChildren.push(e);\r\n            }\r\n        }\r\n        g.game.scene().children = newChildren;\r\n    };\r\n    Helper.findChild = function (parent, name) {\r\n        for (var i = 0; i < parent.children.length; i++) {\r\n            if (parent.children[i].parent == parent) {\r\n                return parent.children[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    Helper.setFontsizeUptoTargetWidth = function (label, targetWidth) {\r\n        var fontsize = label.fontSize;\r\n        while (true) {\r\n            if (label.width < targetWidth) {\r\n                fontsize++;\r\n                label.fontSize = fontsize;\r\n                label.invalidate();\r\n            }\r\n            else\r\n                break;\r\n        }\r\n    };\r\n    Helper.setFontsizeLimitMaxWidth = function (label, maxWidth) {\r\n        var fontsize = label.fontSize;\r\n        for (var i = fontsize - 1; i >= 0; i--) {\r\n            if (label.width > maxWidth) {\r\n                fontsize--;\r\n                label.fontSize = fontsize;\r\n                label.invalidate();\r\n            }\r\n            else\r\n                break;\r\n        }\r\n    };\r\n    return Helper;\r\n}());\r\nexports.Helper = Helper;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/helper.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar mainScene_1 = __webpack_require__(/*! ./mainScene */ \"./src/mainScene.ts\");\r\nfunction main(param) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var scene;\r\n        return __generator(this, function (_a) {\r\n            console.log(param);\r\n            globalThis.font = new g.DynamicFont({\r\n                game: g.game,\r\n                fontFamily: \"M PLUS 1\",\r\n                size: 60,\r\n                fontWeight: \"bold\",\r\n            });\r\n            scene = new mainScene_1.MainScene({\r\n                game: g.game,\r\n                name: 'mainscene'\r\n            });\r\n            //g.game.scenes.push(scene)\r\n            //g.game.replaceScene(scene)\r\n            g.game.pushScene(scene);\r\n            return [2 /*return*/];\r\n        });\r\n    });\r\n}\r\nmodule.exports = main;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/main.ts?");

/***/ }),

/***/ "./src/mainScene.ts":
/*!**************************!*\
  !*** ./src/mainScene.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MainScene = void 0;\r\nvar flowManager_1 = __webpack_require__(/*! ./flow/flowManager */ \"./src/flow/flowManager.ts\");\r\nvar MainScene = /** @class */ (function (_super) {\r\n    __extends(MainScene, _super);\r\n    function MainScene(param) {\r\n        var _this = this;\r\n        param.assetPaths = [\r\n            \"/assets/back_living.png\",\r\n            \"/assets/title0.png\",\r\n            \"/assets/button_start.png\",\r\n            \"/assets/message_window.png\",\r\n        ];\r\n        _this = _super.call(this, param) || this;\r\n        _this.onLoad.add(_this.onGameLoad, _this);\r\n        _this.onUpdate.add(_this.onGameUpdate, _this);\r\n        return _this;\r\n    }\r\n    MainScene.prototype.onGameLoad = function () {\r\n        this.flowManger = new flowManager_1.FlowManager();\r\n        this.flowManger.setupFlow();\r\n        this.flowManger.fireLoop(flowManager_1.FlowEventName.GameLoad);\r\n        this.flowManger.fireLoop(flowManager_1.FlowEventName.GotoMainStage);\r\n        //this.onPointDownCapture.add(e => {\r\n        //\tconsole.log('click...');\r\n        //\tthis.flowManger.fireLoop(FlowEventName.Test);\r\n        //})\r\n    };\r\n    MainScene.prototype.onGameUpdate = function () {\r\n        //console.log('onupdateee,');\r\n        this.flowManger.onUpdate();\r\n    };\r\n    return MainScene;\r\n}(g.Scene));\r\nexports.MainScene = MainScene;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/mainScene.ts?");

/***/ }),

/***/ "./src/mainStage.ts":
/*!**************************!*\
  !*** ./src/mainStage.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.mainStage = void 0;\r\nvar flowManager_1 = __webpack_require__(/*! ./flow/flowManager */ \"./src/flow/flowManager.ts\");\r\nvar step_1 = __webpack_require__(/*! ./flow/steps/step */ \"./src/flow/steps/step.ts\");\r\nvar helper_1 = __webpack_require__(/*! ./helper */ \"./src/helper.ts\");\r\nvar al = __importStar(__webpack_require__(/*! @akashic-extension/akashic-label */ \"./node_modules/@akashic-extension/akashic-label/lib/index.js\"));\r\nvar akashic_engine_1 = __webpack_require__(/*! @akashic/akashic-engine */ \"./node_modules/@akashic/akashic-engine/index.js\");\r\nvar mainStage = /** @class */ (function (_super) {\r\n    __extends(mainStage, _super);\r\n    function mainStage() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.chatIndex = 0;\r\n        return _this;\r\n    }\r\n    mainStage.prototype.onStep = function (eventName) {\r\n        switch (eventName) {\r\n            case flowManager_1.FlowEventName.GameLoad:\r\n                this.chat = [];\r\n                this.chat.push('もうすぐ育休に入る');\r\n                this.chat.push('赤ちゃんがやってくるのはとても楽しみだけど');\r\n                this.chat.push('ここまで積み上げてきたキャリアはどうなるだろうか？');\r\n                this.chat.push('初めての育児と仕事を両立できるだろうか？');\r\n                this.chat.push('これから、どんな選択が必要になるのか？');\r\n                this.chat.push('ちょっと覗いてみよう！！');\r\n                this.runNext();\r\n                break;\r\n            case flowManager_1.FlowEventName.GotoMainStage:\r\n                var scene = g.game.scene();\r\n                var sprChatBg = helper_1.Helper.newSprite9Slice('/assets/message_window.png', 1142, 240, { top: 10, bottom: 10, left: 10, right: 10 });\r\n                scene.append(sprChatBg);\r\n                this.align(sprChatBg, 0);\r\n                this.txtChat = new al.Label({\r\n                    scene: scene,\r\n                    parent: sprChatBg,\r\n                    font: globalThis.font,\r\n                    fontSize: 30,\r\n                    width: 2000,\r\n                    textAlign: akashic_engine_1.TextAlign.Left,\r\n                    lineBreak: true,\r\n                    widthAutoAdjust: true,\r\n                    text: '',\r\n                });\r\n                this.txtChat.text = this.chat[this.chatIndex];\r\n                this.txtChat.x = 50;\r\n                this.txtChat.y = 50;\r\n                this.txtChat.invalidate();\r\n                this.txtChat.modified();\r\n                scene.onPointUpCapture.add(this.onPointUp, this);\r\n                this.runNext();\r\n                break;\r\n        }\r\n    };\r\n    mainStage.prototype.onPointUp = function () {\r\n        console.log('......x');\r\n        this.chatIndex++;\r\n        if (this.chatIndex < this.chat.length) {\r\n            this.txtChat.text = this.chat[this.chatIndex];\r\n            this.txtChat.invalidate();\r\n        }\r\n    };\r\n    mainStage.prototype.align = function (e, offset) {\r\n        var h = g.game.height;\r\n        e.anchorY = 1;\r\n        e.y = h;\r\n        e.modified();\r\n    };\r\n    return mainStage;\r\n}(step_1.BaseStep));\r\nexports.mainStage = mainStage;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/mainStage.ts?");

/***/ }),

/***/ "./src/startStage.ts":
/*!***************************!*\
  !*** ./src/startStage.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.startStage = void 0;\r\nvar button_1 = __webpack_require__(/*! ./button */ \"./src/button.ts\");\r\nvar flowManager_1 = __webpack_require__(/*! ./flow/flowManager */ \"./src/flow/flowManager.ts\");\r\nvar step_1 = __webpack_require__(/*! ./flow/steps/step */ \"./src/flow/steps/step.ts\");\r\nvar helper_1 = __webpack_require__(/*! ./helper */ \"./src/helper.ts\");\r\nvar startStage = /** @class */ (function (_super) {\r\n    __extends(startStage, _super);\r\n    function startStage() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.playClicked = false;\r\n        return _this;\r\n    }\r\n    startStage.prototype.onStep = function (eventName) {\r\n        var _this = this;\r\n        switch (eventName) {\r\n            case flowManager_1.FlowEventName.GameLoad:\r\n                var scene = g.game.scene();\r\n                //\r\n                var bg = helper_1.Helper.newSprite('/assets/back_living.png');\r\n                scene.append(bg);\r\n                this.spriteTitle = helper_1.Helper.newSprite('/assets/title0.png');\r\n                scene.append(this.spriteTitle);\r\n                this.spriteTitle.x = g.game.width / 2 - this.spriteTitle.width / 2;\r\n                this.spriteTitle.modified();\r\n                var img = scene.asset.getImage('/assets/button_start.png');\r\n                this.btnPlay = new button_1.Button(scene, img, 108, 553);\r\n                this.btnPlay.onClick.add(function () {\r\n                    console.log('play clicked');\r\n                    _this.playClicked = true;\r\n                });\r\n                scene.append(this.btnPlay);\r\n                this.btnPlay.x = g.game.width / 2 - this.btnPlay.width / 2;\r\n                this.btnPlay.y = g.game.height / 2 - this.btnPlay.height / 2 + 200;\r\n                this.runNext();\r\n                break;\r\n            case flowManager_1.FlowEventName.GotoMainStage:\r\n                if (this.playClicked == true) {\r\n                    this.btnPlay.hide();\r\n                    this.spriteTitle.hide();\r\n                    this.runNext();\r\n                }\r\n                else {\r\n                    this.runThisNextFrame();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    return startStage;\r\n}(step_1.BaseStep));\r\nexports.startStage = startStage;\r\n\n\n//# sourceURL=webpack://akashic-template/./src/startStage.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
})(g.module.exports, g.module.require, g.module, g.filename, g.dirname);
}